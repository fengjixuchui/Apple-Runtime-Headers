//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <XCTest/XCTest.h>

#import <XCTest/XCTActivity-Protocol.h>
#import <XCTest/XCTWaiterDelegate-Protocol.h>

@class MXMInstrument, NSArray, NSDictionary, NSInvocation, NSMutableArray, NSMutableDictionary, NSObject, NSString, NSThread, XCTAttachmentManager, XCTSkippedTestContext, XCTTestIdentifier, XCTWaiter, XCTestCaseRun;
@protocol OS_dispatch_source;

@interface XCTestCase : XCTest <XCTWaiterDelegate, XCTActivity>
{
    _Bool __preciseTimeoutsEnabled;
    _Bool _continueAfterFailure;
    _Bool __isMeasuringMetrics;
    _Bool __didMeasureMetrics;
    _Bool __didStartMeasuring;
    _Bool __didStopMeasuring;
    _Bool _hasDequeuedTeardownBlocks;
    _Bool _shouldHaltWhenReceivesControl;
    _Bool _shouldSetShouldHaltWhenReceivesControl;
    _Bool _shouldIgnoreSubsequentFailures;
    _Bool _hasAttemptedToCaptureScreenshotOnFailure;
    NSInvocation *_invocation;
    NSMutableArray *_expectations;
    NSMutableArray *_teardownBlocks;
    double _executionTimeAllowance;
    XCTTestIdentifier *_identifier;
    unsigned long long _signpostID;
    NSArray *__activePerformanceMetricIDs;
    unsigned long long __startWallClockTime;
    struct time_value __startUserTime;
    struct time_value __startSystemTime;
    unsigned long long __measuringIteration;
    MXMInstrument *__instrument;
    NSString *_filePathForNestedFailure;
    unsigned long long _lineNumberForNestedFailure;
    long long _runLoopNestingCount;
    XCTAttachmentManager *_attachmentManager;
    NSDictionary *_activityAggregateStatistics;
    NSObject<OS_dispatch_source> *__timeoutSource;
    NSThread *_primaryThread;
    XCTWaiter *__currentWaiter;
    NSMutableArray *_failureRecords;
    XCTSkippedTestContext *_skippedTestContext;
    XCTestCaseRun *_testCaseRun;
    NSMutableDictionary *__perfMetricsForID;
}

+ (id)_baselineDictionary;
+ (_Bool)_treatMissingBaselinesAsTestFailures;
+ (id)knownMemoryMetrics;
+ (id)measurementFormatter;
+ (id)defaultMeasureOptions;
+ (id)defaultMetrics;
+ (id)defaultPerformanceMetrics;
+ (_Bool)_meetsMinimumOperatingSystemVersion;
+ (CDStruct_2ec95fd7)minimumOperatingSystemVersion;
+ (_Bool)_reportPerformanceFailuresForLargeImprovements;
+ (_Bool)_enableSymbolication;
+ (id)testInvocations;
+ (_Bool)isInheritingTestCases;
+ (id)_testStartActvityDateFormatter;
+ (id)bundle;
+ (id)testCaseWithSelector:(SEL)arg1;
+ (id)_timeoutQueue;
+ (id)testCaseWithInvocation:(id)arg1;
+ (void)tearDown;
+ (void)setUp;
+ (id)defaultTestSuite;
+ (id)performFailableBlock:(CDUnknownBlockType)arg1 testCase:(id)arg2 testCaseRun:(id)arg3 shouldInterruptTest:(_Bool *)arg4;
+ (id)allTestMethodInvocations;
+ (void)_allTestMethodInvocations:(id)arg1;
+ (id)testMethodInvocations;
+ (id)allSubclassesOutsideXCTest;
+ (id)allSubclasses;
+ (id)_allSubclasses;
- (void).cxx_destruct;
@property(retain) NSMutableDictionary *_perfMetricsForID; // @synthesize _perfMetricsForID=__perfMetricsForID;
@property(retain) XCTestCaseRun *testCaseRun; // @synthesize testCaseRun=_testCaseRun;
@property(nonatomic) _Bool hasAttemptedToCaptureScreenshotOnFailure; // @synthesize hasAttemptedToCaptureScreenshotOnFailure=_hasAttemptedToCaptureScreenshotOnFailure;
@property(nonatomic) _Bool shouldIgnoreSubsequentFailures; // @synthesize shouldIgnoreSubsequentFailures=_shouldIgnoreSubsequentFailures;
@property(nonatomic) _Bool shouldSetShouldHaltWhenReceivesControl; // @synthesize shouldSetShouldHaltWhenReceivesControl=_shouldSetShouldHaltWhenReceivesControl;
@property(nonatomic) _Bool shouldHaltWhenReceivesControl; // @synthesize shouldHaltWhenReceivesControl=_shouldHaltWhenReceivesControl;
@property(retain, nonatomic) XCTSkippedTestContext *skippedTestContext; // @synthesize skippedTestContext=_skippedTestContext;
@property(readonly, nonatomic) NSMutableArray *failureRecords; // @synthesize failureRecords=_failureRecords;
@property(retain, nonatomic) XCTWaiter *_currentWaiter; // @synthesize _currentWaiter=__currentWaiter;
@property(retain) NSThread *primaryThread; // @synthesize primaryThread=_primaryThread;
@property(retain) NSObject<OS_dispatch_source> *_timeoutSource; // @synthesize _timeoutSource=__timeoutSource;
@property(copy) NSDictionary *activityAggregateStatistics; // @synthesize activityAggregateStatistics=_activityAggregateStatistics;
@property(retain) XCTAttachmentManager *attachmentManager; // @synthesize attachmentManager=_attachmentManager;
@property _Bool hasDequeuedTeardownBlocks; // @synthesize hasDequeuedTeardownBlocks=_hasDequeuedTeardownBlocks;
@property long long runLoopNestingCount; // @synthesize runLoopNestingCount=_runLoopNestingCount;
@property unsigned long long lineNumberForNestedFailure; // @synthesize lineNumberForNestedFailure=_lineNumberForNestedFailure;
@property(copy) NSString *filePathForNestedFailure; // @synthesize filePathForNestedFailure=_filePathForNestedFailure;
@property(retain) MXMInstrument *_instrument; // @synthesize _instrument=__instrument;
@property _Bool _didStopMeasuring; // @synthesize _didStopMeasuring=__didStopMeasuring;
@property _Bool _didStartMeasuring; // @synthesize _didStartMeasuring=__didStartMeasuring;
@property _Bool _didMeasureMetrics; // @synthesize _didMeasureMetrics=__didMeasureMetrics;
@property _Bool _isMeasuringMetrics; // @synthesize _isMeasuringMetrics=__isMeasuringMetrics;
@property unsigned long long _measuringIteration; // @synthesize _measuringIteration=__measuringIteration;
@property struct time_value _startSystemTime; // @synthesize _startSystemTime=__startSystemTime;
@property struct time_value _startUserTime; // @synthesize _startUserTime=__startUserTime;
@property unsigned long long _startWallClockTime; // @synthesize _startWallClockTime=__startWallClockTime;
@property(copy) NSArray *_activePerformanceMetricIDs; // @synthesize _activePerformanceMetricIDs=__activePerformanceMetricIDs;
@property _Bool continueAfterFailure; // @synthesize continueAfterFailure=_continueAfterFailure;
@property unsigned long long _signpostID; // @synthesize _signpostID;
@property(readonly) XCTTestIdentifier *_identifier; // @synthesize _identifier;
@property(nonatomic) _Bool _preciseTimeoutsEnabled; // @synthesize _preciseTimeoutsEnabled=__preciseTimeoutsEnabled;
@property(readonly) NSMutableArray *_teardownBlocks; // @synthesize _teardownBlocks;
@property(retain, nonatomic) NSMutableArray *_expectations; // @synthesize _expectations;
@property(readonly) double _effectiveExecutionTimeAllowance;
- (void)_resetTimer;
- (void)_stopTimeoutTimer;
- (void)_startTimeoutTimer;
- (void)_exceededExecutionTimeAllowance;
@property unsigned long long maxDurationInMinutes;
@property double executionTimeAllowance; // @synthesize executionTimeAllowance=_executionTimeAllowance;
- (void)_dequeueAndReportBackgroundAttachments;
- (void)addAttachment:(id)arg1;
- (void)_resetExpectationsInArray:(id)arg1;
- (void)_resetExpectations;
- (void)_addExpectation:(id)arg1;
@property(readonly) unsigned long long activityRecordStackDepth;
- (void)runActivityNamed:(id)arg1 inScope:(CDUnknownBlockType)arg2;
- (void)recordActivityWithFormat:(id)arg1;
- (void)startActivityWithTitle:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)startActivityWithTitle:(id)arg1 type:(id)arg2 block:(CDUnknownBlockType)arg3;
- (void)measureMetrics:(id)arg1 automaticallyStartMeasuring:(_Bool)arg2 forBlock:(CDUnknownBlockType)arg3;
- (void)registerDefaultMetrics;
- (id)baselinesDictionaryForTest;
- (void)_logAndReportPerformanceMetrics:(id)arg1 perfMetricResultsForIDs:(id)arg2 withBaselinesForTest:(id)arg3;
- (void)_logAndReportPerformanceMetrics:(id)arg1 perfMetricResultsForIDs:(id)arg2 withBaselinesForTest:(id)arg3 defaultBaselinesForPerfMetricID:(id)arg4;
- (void)registerMetricID:(id)arg1 name:(id)arg2 unitString:(id)arg3;
- (void)registerMetricID:(id)arg1 name:(id)arg2 unit:(id)arg3;
- (void)reportMetric:(id)arg1 reportFailures:(_Bool)arg2;
- (void)reportMeasurements:(id)arg1 forMetricID:(id)arg2 reportFailures:(_Bool)arg3;
- (void)_recordValues:(id)arg1 forPerformanceMetricID:(id)arg2 name:(id)arg3 unitsOfMeasurement:(id)arg4 baselineName:(id)arg5 baselineAverage:(id)arg6 maxPercentRegression:(id)arg7 maxPercentRelativeStandardDeviation:(id)arg8 maxRegression:(id)arg9 maxStandardDeviation:(id)arg10 file:(id)arg11 line:(unsigned long long)arg12;
- (id)_symbolicationRecordForAddress:(unsigned long long)arg1;
- (id)_symbolicationRecordForTestCodeInAddressStack:(id)arg1;
- (void)measureWithMetrics:(id)arg1 options:(id)arg2 block:(CDUnknownBlockType)arg3;
- (void)measureWithMetrics:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)measureWithOptions:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)measureBlock:(CDUnknownBlockType)arg1;
- (void)stopMeasuring;
- (void)startMeasuring;
- (void)_logMemoryGraphDataFromFilePath:(id)arg1 withTitle:(id)arg2;
- (void)_logMemoryGraphData:(id)arg1 withTitle:(id)arg2;
- (unsigned long long)numberOfTestIterationsForTestWithSelector:(SEL)arg1;
- (void)afterTestIteration:(unsigned long long)arg1 selector:(SEL)arg2;
- (void)beforeTestIteration:(unsigned long long)arg1 selector:(SEL)arg2;
- (void)tearDownTestWithSelector:(SEL)arg1;
- (void)setUpTestWithSelector:(SEL)arg1;
- (void)_addTeardownBlock:(CDUnknownBlockType)arg1;
- (void)addTeardownBlock:(CDUnknownBlockType)arg1;
- (void)_purgeTeardownBlocks;
- (void)_runTeardownBlocks;
- (id)_dequeueTeardownBlocks;
- (void)_performTearDownSequenceWithSelector:(SEL)arg1;
- (void)_performSetUpSequenceWithSelector:(SEL)arg1;
- (void)performTest:(id)arg1;
- (void)_reportFailuresForUnwaitedExpectations;
- (void)_reportFailuresAtFile:(id)arg1 line:(unsigned long long)arg2 forTestAssertionsInScope:(CDUnknownBlockType)arg3;
- (void)_recordFailureForCaughtError:(id)arg1 usingContextFromIssue:(id)arg2;
- (void)invokeTest;
@property(readonly, getter=_needsErrorHandling) _Bool needsErrorHandling;
- (Class)testRunClass;
- (Class)_requiredTestRunBaseClass;
- (void)_recordSkipWithContext:(id)arg1;
- (void)recordFailureWithDescription:(id)arg1 inFile:(id)arg2 atLine:(unsigned long long)arg3 expected:(_Bool)arg4;
- (void)_interruptTest;
@property(retain) NSInvocation *invocation; // @synthesize invocation=_invocation;
- (void)dealloc;
@property(readonly, copy) NSString *description;
- (_Bool)isEqual:(id)arg1;
- (long long)defaultExecutionOrderCompare:(id)arg1;
- (id)nameForLegacyLogging;
@property(readonly, copy) NSString *name;
- (id)languageAgnosticTestMethodName;
- (unsigned long long)testCaseCount;
- (id)bundle;
- (id)initWithSelector:(SEL)arg1;
- (id)initWithInvocation:(id)arg1;
- (id)init;
- (void)removeUIInterruptionMonitor:(id)arg1;
- (id)addUIInterruptionMonitorWithDescription:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)nestedWaiter:(id)arg1 wasInterruptedByTimedOutWaiter:(id)arg2;
- (void)waiter:(id)arg1 didFulfillInvertedExpectation:(id)arg2;
- (void)waiter:(id)arg1 fulfillmentDidViolateOrderingConstraintsForExpectation:(id)arg2 requiredExpectation:(id)arg3;
- (void)waiter:(id)arg1 didTimeoutWithUnfulfilledExpectations:(id)arg2;
- (id)expectationForPredicate:(id)arg1 evaluatedWithObject:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (id)expectationForNotification:(id)arg1 object:(id)arg2 notificationCenter:(id)arg3 handler:(CDUnknownBlockType)arg4;
- (id)expectationForNotification:(id)arg1 object:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (id)keyValueObservingExpectationForObject:(id)arg1 keyPath:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (id)keyValueObservingExpectationForObject:(id)arg1 keyPath:(id)arg2 expectedValue:(id)arg3;
- (id)expectationWithDescription:(id)arg1;
- (void)waitForExpectations:(id)arg1 timeout:(double)arg2 enforceOrder:(_Bool)arg3;
- (void)waitForExpectations:(id)arg1 timeout:(double)arg2;
- (void)waitForExpectationsWithTimeout:(double)arg1 handler:(CDUnknownBlockType)arg2;
- (id)_expectationForDistributedNotification:(id)arg1 object:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (id)_expectationForDarwinNotification:(id)arg1;
- (void)_performTurningExceptionsIntoFailuresInterruptAfterHandling:(_Bool)arg1 block:(CDUnknownBlockType)arg2;
- (void)_recordActivityWithFailure:(id)arg1;
- (void)_recordFailure:(id)arg1;
- (void)_recordFailureWithDescription:(id)arg1 inFile:(id)arg2 atLine:(unsigned long long)arg3 expected:(_Bool)arg4;
- (void)_enqueueFailureWithDescription:(id)arg1 inFile:(id)arg2 atLine:(unsigned long long)arg3 expected:(_Bool)arg4 interruptTest:(_Bool)arg5 breakWhenDequeued:(_Bool)arg6;
- (void)_dequeueFailures;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

