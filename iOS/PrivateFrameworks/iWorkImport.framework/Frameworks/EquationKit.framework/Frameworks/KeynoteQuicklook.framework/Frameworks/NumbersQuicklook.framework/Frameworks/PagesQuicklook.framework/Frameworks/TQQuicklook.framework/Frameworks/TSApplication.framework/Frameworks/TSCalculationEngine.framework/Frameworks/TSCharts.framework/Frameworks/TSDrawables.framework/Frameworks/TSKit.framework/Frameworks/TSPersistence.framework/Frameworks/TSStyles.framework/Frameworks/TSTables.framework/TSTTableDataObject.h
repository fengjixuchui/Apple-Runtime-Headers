//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <TSTables/TSPCopying-Protocol.h>

@class NSString, TSDCommentStorage, TSKFormat, TSSStyle, TSTCellSpec, TSTConditionalStyleSet, TSTImportWarningSet, TSTPopUpMenuModel, TSUCustomFormat, TSWPStorage;
@protocol TSTTableDataPayloadHashing;

@interface TSTTableDataObject : NSObject <TSPCopying>
{
    NSObject<TSTTableDataPayloadHashing> *_payload;
    unsigned int _key;
    unsigned int _refCount;
    unsigned long long _byteSizeForArchiving;
}

+     // Error parsing type: v44@0:8r^{TableDataList_ListEntry=^^?{InternalMetadataWithArena=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}^{Reference}^{FormulaArchive}^{FormatStructArchive}^{CustomFormatArchive}^{Reference}^{Reference}^{ImportWarningSetArchive}^{CellSpecArchive}II}16i24@28@?36, name: loadObjectFromArchive:listType:unarchiver:completion:
+ (id)objectWithRefCount:(unsigned int)arg1;
- (void).cxx_destruct;
@property(nonatomic) unsigned int key; // @synthesize key=_key;
@property(retain, nonatomic) NSObject<TSTTableDataPayloadHashing> *payload; // @synthesize payload=_payload;
@property(readonly, nonatomic) unsigned int refCount; // @synthesize refCount=_refCount;
@property(readonly, nonatomic) TSSStyle *style; // @dynamic style;
@property(readonly, nonatomic) NSString *string; // @dynamic string;
@property(readonly, nonatomic) TSWPStorage *richTextStorage; // @dynamic richTextStorage;
@property(readonly, nonatomic) TSTPopUpMenuModel *popUpMenuModel; // @dynamic popUpMenuModel;
@property(readonly, nonatomic) TSTImportWarningSet *importWarningSet; // @dynamic importWarningSet;
@property(readonly, nonatomic) TSWPStorage *formulaError; // @dynamic formulaError;
@property(readonly, nonatomic) TSTCellSpec *cellSpec; // @dynamic cellSpec;
@property(readonly, nonatomic) TSKFormat *format; // @dynamic format;
@property(readonly, nonatomic) TSUCustomFormat *customFormat; // @dynamic customFormat;
@property(readonly, nonatomic) TSTConditionalStyleSet *conditionalStyleSet; // @dynamic conditionalStyleSet;
@property(readonly, nonatomic) TSDCommentStorage *commentStorage; // @dynamic commentStorage;
- (id)copyWithContext:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (unsigned long long)estimateByteSize;
@property(readonly, nonatomic) unsigned long long byteSizeForArchiving; // @synthesize byteSizeForArchiving=_byteSizeForArchiving;
- (void)addReferencesFromObject:(id)arg1;
- (_Bool)dropReferences:(unsigned int)arg1;
- (_Bool)dropReference;
- (void)takeReferences:(unsigned int)arg1;
- (void)takeReference;
-     // Error parsing type: v32@0:8^{TableDataList_ListEntry=^^?{InternalMetadataWithArena=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}^{Reference}^{FormulaArchive}^{FormatStructArchive}^{CustomFormatArchive}^{Reference}^{Reference}^{ImportWarningSetArchive}^{CellSpecArchive}II}16@24, name: encodeToArchive:archiver:
-     // Error parsing type: v40@0:8r^{TableDataList_ListEntry=^^?{InternalMetadataWithArena=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}^{Reference}^{FormulaArchive}^{FormatStructArchive}^{CustomFormatArchive}^{Reference}^{Reference}^{ImportWarningSetArchive}^{CellSpecArchive}II}16@24@?32, name: loadFromArchive:unarchiver:completion:
-     // Error parsing type: v24@0:8r^{TableDataList_ListEntry=^^?{InternalMetadataWithArena=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}^{Reference}^{FormulaArchive}^{FormatStructArchive}^{CustomFormatArchive}^{Reference}^{Reference}^{ImportWarningSetArchive}^{CellSpecArchive}II}16, name: sharedLoadFromArchive:
- (id)initWithRefCount:(unsigned int)arg1;
- (void)p_sharedInitWithRefCount:(unsigned int)arg1 key:(unsigned int)arg2;

@end

