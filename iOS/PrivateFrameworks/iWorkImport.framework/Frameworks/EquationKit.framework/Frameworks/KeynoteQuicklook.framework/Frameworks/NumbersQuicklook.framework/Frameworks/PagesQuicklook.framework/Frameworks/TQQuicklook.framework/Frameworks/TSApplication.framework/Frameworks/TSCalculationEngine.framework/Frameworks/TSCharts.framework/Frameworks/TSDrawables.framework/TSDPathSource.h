//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <TSDrawables/NSCopying-Protocol.h>
#import <TSDrawables/TSDMixing-Protocol.h>

@class NSString, TSUBezierPath;

@interface TSDPathSource : NSObject <TSDMixing, NSCopying>
{
    _Bool _horizontalFlip;
    _Bool _verticalFlip;
    NSString *_localizationKey;
    NSString *_name;
    NSString *_identifier;
}

+ (id)pathSourceForShapeType:(long long)arg1 naturalSize:(struct CGSize)arg2;
+     // Error parsing type: @24@0:8r^{PathSourceArchive=^^?{InternalMetadataWithArena=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}^{PointPathSourceArchive}^{ScalarPathSourceArchive}^{BezierPathSourceArchive}^{CalloutPathSourceArchive}^{ConnectionLinePathSourceArchive}^{EditableBezierPathSourceArchive}BB}16, name: pathSourceWithArchive:
- (void).cxx_destruct;
@property(nonatomic) _Bool hasVerticalFlip; // @synthesize hasVerticalFlip=_verticalFlip;
@property(nonatomic) _Bool hasHorizontalFlip; // @synthesize hasHorizontalFlip=_horizontalFlip;
@property(copy, nonatomic) NSString *userDefinedIdentifier; // @synthesize userDefinedIdentifier=_identifier;
@property(copy, nonatomic) NSString *userDefinedName; // @synthesize userDefinedName=_name;
@property(copy, nonatomic) NSString *localizationKey; // @synthesize localizationKey=_localizationKey;
@property(readonly, nonatomic) NSString *inferredAccessibilityDescription;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1 context:(id)arg2;
- (id)valueForSetSelector:(SEL)arg1;
@property(readonly, nonatomic) struct CGAffineTransform pathFlipTransform;
- (void)scaleToNaturalSize:(struct CGSize)arg1;
- (double)uniformScaleForScalingToNaturalSize:(struct CGSize)arg1;
@property(nonatomic) struct CGSize naturalSize;
@property(readonly, nonatomic) Class preferredControllerClass;
- (id)interiorWrapPathForInset:(double)arg1 joinStyle:(unsigned long long)arg2;
@property(readonly, copy, nonatomic) TSUBezierPath *interiorWrapPath;
@property(readonly, copy, nonatomic) TSUBezierPath *bezierPathWithoutFlips;
@property(readonly, copy, nonatomic) TSUBezierPath *bezierPath;
@property(readonly, nonatomic, getter=isClosed) _Bool closed;
@property(readonly, nonatomic) _Bool isCircular;
@property(readonly, nonatomic) _Bool isRectangularForever;
@property(readonly, nonatomic) _Bool isRectangular;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
-     // Error parsing type: v24@0:8^{PathSourceArchive=^^?{InternalMetadataWithArena=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}^{PointPathSourceArchive}^{ScalarPathSourceArchive}^{BezierPathSourceArchive}^{CalloutPathSourceArchive}^{ConnectionLinePathSourceArchive}^{EditableBezierPathSourceArchive}BB}16, name: saveToArchive:
-     // Error parsing type: @24@0:8r^{PathSourceArchive=^^?{InternalMetadataWithArena=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}^{PointPathSourceArchive}^{ScalarPathSourceArchive}^{BezierPathSourceArchive}^{CalloutPathSourceArchive}^{ConnectionLinePathSourceArchive}^{EditableBezierPathSourceArchive}BB}16, name: initWithArchive:
-     // Error parsing type: v24@0:8^{PathSourceArchive=^^?{InternalMetadataWithArena=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}^{PointPathSourceArchive}^{ScalarPathSourceArchive}^{BezierPathSourceArchive}^{CalloutPathSourceArchive}^{ConnectionLinePathSourceArchive}^{EditableBezierPathSourceArchive}BB}16, name: saveSharedToArchive:
-     // Error parsing type: v24@0:8r^{PathSourceArchive=^^?{InternalMetadataWithArena=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}^{PointPathSourceArchive}^{ScalarPathSourceArchive}^{BezierPathSourceArchive}^{CalloutPathSourceArchive}^{ConnectionLinePathSourceArchive}^{EditableBezierPathSourceArchive}BB}16, name: loadSharedFromArchive:

// Remaining properties
@property(readonly, nonatomic) _Bool isClosed;

@end

