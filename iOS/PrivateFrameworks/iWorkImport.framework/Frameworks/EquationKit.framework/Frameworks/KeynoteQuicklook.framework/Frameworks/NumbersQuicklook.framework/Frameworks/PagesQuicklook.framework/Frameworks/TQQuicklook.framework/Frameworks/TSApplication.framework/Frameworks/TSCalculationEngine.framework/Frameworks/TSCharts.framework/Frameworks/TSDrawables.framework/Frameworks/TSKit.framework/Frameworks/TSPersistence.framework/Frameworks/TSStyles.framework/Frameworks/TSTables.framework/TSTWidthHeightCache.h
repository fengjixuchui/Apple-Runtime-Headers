//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@interface TSTWidthHeightCache : NSObject
{
    struct _opaque_pthread_rwlock_t _lock;
    struct vector<TSTWidthHeightCacheEntry<4>, std::__1::allocator<TSTWidthHeightCacheEntry<4>>> _rowHeights;
    vector_b67dfe3a _columnModelWidths;
    _Bool _needsToBeArchived;
}

- (id).cxx_construct;
- (void).cxx_destruct;
@property(nonatomic) _Bool needsToBeArchived; // @synthesize needsToBeArchived=_needsToBeArchived;
-     // Error parsing type: v32@0:8^{WidthHeightCache=^^?{InternalMetadataWithArena=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}{RepeatedPtrField<TST::WidthHeightCacheFittingEntry>=^{Arena}ii^{Rep}}I}16@24, name: saveToArchive:archiver:
-     // Error parsing type: @32@0:8r^{WidthHeightCache=^^?{InternalMetadataWithArena=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}{RepeatedPtrField<TST::WidthHeightCacheFittingEntry>=^{Arena}ii^{Rep}}I}16@24, name: initWithArchive:unarchiver:
- (void)willModifyIfPossible:(id)arg1;
- (void)willModifyIfNeeded:(id)arg1;
- (void)finalizeLayoutPassWithRowsNeedingFittingInfo:(id)arg1;
- (id)validateRowsNeedingFittingInfo:(id)arg1 validationRegion:(id)arg2 masterLayout:(id)arg3;
- (id)validateChangeDescriptors:(id)arg1 tableInfo:(id)arg2 numberOfRows:(unsigned int)arg3 numberOfColumns:(unsigned short)arg4;
- (id)p_resetFittingHeightsForRange:(struct TSUCellRect)arg1;
- (void)resetFittingRowHeightsStartingWith:(unsigned int)arg1 upToRow:(unsigned int)arg2;
- (void)p_moveRowsUsingShuffleMapping:(id)arg1;
- (void)p_moveColumnsFrom:(struct TSUCellRect)arg1 toColumn:(unsigned short)arg2;
- (void)p_moveRowsFrom:(struct TSUCellRect)arg1 toRow:(unsigned int)arg2;
- (_Bool)p_insertRows:(unsigned int)arg1 atRow:(unsigned int)arg2;
- (_Bool)p_insertColumns:(unsigned int)arg1 atColumn:(unsigned short)arg2;
- (void)p_deleteRowsStartingWith:(unsigned int)arg1 upToRow:(unsigned int)arg2;
- (id)p_deleteColumnsStartingWith:(unsigned short)arg1 upToColumn:(unsigned short)arg2;
- (double)getModelWidthForColumn:(unsigned short)arg1;
- (double)getModelHeightForRow:(unsigned int)arg1;
- (void)resetModelCacheRange:(struct TSUCellRect)arg1;
- (void)resetModelCache;
- (void)setModelHeight:(double)arg1 forRow:(unsigned int)arg2;
- (void)setModelWidth:(double)arg1 forColumn:(unsigned short)arg2;
- (double)getFitHeightForRow:(unsigned int)arg1;
- (id)columnToWidthMapFromCollectionArray:(id)arg1;
- (void)setFittingHeightsFromCollectionArray:(id)arg1;
- (void)setFittingHeightsFromCollection:(id)arg1;
- (void)p_setFittingHeightsFromCollectionWithLock:(id)arg1;
- (void)setFitHeight:(double)arg1 forCellID:(struct TSUCellCoord)arg2;
- (void)p_resetToRows:(unsigned int)arg1 andNumColumns:(unsigned int)arg2;
@property(readonly, nonatomic) unsigned int numberOfColumns;
@property(readonly, nonatomic) unsigned int numberOfRows;
- (void)dealloc;
- (id)initWithNumRows:(unsigned int)arg1 andNumColumns:(unsigned int)arg2;

@end

