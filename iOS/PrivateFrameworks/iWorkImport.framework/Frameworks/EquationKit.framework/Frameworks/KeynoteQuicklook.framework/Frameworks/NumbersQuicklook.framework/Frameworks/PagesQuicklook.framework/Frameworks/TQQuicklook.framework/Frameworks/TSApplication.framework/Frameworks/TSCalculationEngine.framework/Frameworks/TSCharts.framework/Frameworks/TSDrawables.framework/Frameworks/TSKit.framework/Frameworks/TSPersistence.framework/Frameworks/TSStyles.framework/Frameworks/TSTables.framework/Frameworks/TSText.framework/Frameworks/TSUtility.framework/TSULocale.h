//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSArray, NSCache, NSLocale, NSLock, NSMutableArray, NSMutableDictionary, NSString, NSTimeZone, TSUDateParserLibrary, TSUFormattingSymbols;

@interface TSULocale : NSObject
{
    NSLocale *_locale;
    NSLocale *_gregorianCalendarLocale;
    NSString *_languageCode;
    NSString *_localeIdentifier;
    NSString *_documentLanguageIdentifier;
    _Bool _isAutoUpdating;
    long long _dateComponentOrdering;
    struct TSUNumberOrDateLexer _numberOrDateLexer;
    struct _opaque_pthread_mutex_t {
        long long __sig;
        char __opaque[56];
    } _formattersMutex;
    NSMutableArray *_numberFormatters;
    NSMutableArray *_scientificNumberFormatters;
    TSUDateParserLibrary *_dateParserLibrary;
    NSLock *_numberFormatterStringFromDoubleWithFormatLock;
    struct __CFNumberFormatter *_plainFormatter;
    struct __CFNumberFormatter *_noMinusSignPlainFormatter;
    struct __CFNumberFormatter *_currencyFormatter;
    struct __CFNumberFormatter *_noMinusSignCurrencyFormatter;
    NSString *_activeCurrencyCode;
    NSString *_activeNoMinusSignCurrencyCode;
    NSLock *_localeSpecificStorageLock;
    NSMutableDictionary *_localeSpecificStorage;
    NSCache *_cachedLocalizedStrings;
    _Bool _uses24HourTimeCycle;
    TSUFormattingSymbols *_formattingSymbols;
    NSString *_trueString;
    NSString *_falseString;
}

+ (unsigned short)defaultDecimalPlacesForCurrencyCode:(id)arg1;
+ (id)userVisibleCurrencyCodes;
+ (_Bool)isValidCurrencyCode:(id)arg1;
+ (id)availableCurrencyCodes;
+ (id)currentLocaleCurrencyCode;
+ (id)displayNameForCurrencyCode:(id)arg1;
+ (id)currencySymbolForCurrencyCode:(id)arg1;
+ (void)saveLocaleForReuse:(id)arg1;
+ (id)localeForLocaleIdentifier:(id)arg1 documentLanguageIdentifier:(id)arg2 formattingSymbolsVersion:(id)arg3;
+ (_Bool)localeIsAutoUpdating:(id)arg1;
+ (id)allSupportedTemplatePickerLanguages;
+ (id)allSupportedTier3Languages;
+ (id)allSupportedTier1Languages;
+ (id)displayNameForCode:(id)arg1 ofType:(id)arg2 displayStandalone:(_Bool)arg3;
+ (id)simplifiedDisplayNameForLocaleID:(id)arg1 displayStandalone:(_Bool)arg2;
+ (id)localeIDWithoutDefaultRegionCode:(id)arg1 avoidAmbiguousCases:(_Bool)arg2;
+ (id)localeIDWithDefaultRegionCode:(id)arg1;
+ (id)deducedScriptForLocale:(id)arg1;
+ (id)canonicalizeLocaleIdentifierWithLanguageScriptAndRegionOnly:(id)arg1;
+ (id)canonicalizeLocaleIdentifierWithLanguageAndScriptOnly:(id)arg1;
+ (id)canonicalizeLocaleIdentifierWithLanguageAndRegionOnly:(id)arg1;
+ (id)canonicalizeLocaleIdentifierWithLanguageOnly:(id)arg1;
+ (id)canonicalizeLocaleIdentifier:(id)arg1;
+ (id)usEnglishLocale;
+ (id)applicationLocale;
+ (id)preferredLocale;
+ (id)currentLocale;
+ (id)preferredLanguages;
+ (unsigned long long)autoupdatingCurrentLocaleChangeCount;
+ (void)setLocalizedStringBundle:(struct __CFBundle *)arg1;
+ (void)initialize;
- (id).cxx_construct;
- (void).cxx_destruct;
@property(readonly) TSUDateParserLibrary *dateParserLibrary; // @synthesize dateParserLibrary=_dateParserLibrary;
@property(readonly) NSString *falseString; // @synthesize falseString=_falseString;
@property(readonly) NSString *trueString; // @synthesize trueString=_trueString;
@property(readonly) _Bool uses24HourTimeCycle; // @synthesize uses24HourTimeCycle=_uses24HourTimeCycle;
@property(readonly) long long dateComponentOrdering; // @synthesize dateComponentOrdering=_dateComponentOrdering;
@property(readonly) _Bool isAutoUpdating; // @synthesize isAutoUpdating=_isAutoUpdating;
@property(readonly) TSUFormattingSymbols *formattingSymbols; // @synthesize formattingSymbols=_formattingSymbols;
@property(readonly) NSString *documentLanguageIdentifier; // @synthesize documentLanguageIdentifier=_documentLanguageIdentifier;
@property(readonly) NSString *localeIdentifier; // @synthesize localeIdentifier=_localeIdentifier;
@property(readonly) NSString *languageCode; // @synthesize languageCode=_languageCode;
@property(readonly) NSLocale *gregorianCalendarLocale; // @synthesize gregorianCalendarLocale=_gregorianCalendarLocale;
@property(readonly) NSLocale *locale; // @synthesize locale=_locale;
- (id)URLForResource:(id)arg1 withExtension:(id)arg2 subdirectory:(id)arg3 inBundle:(struct __CFBundle *)arg4;
- (id)URLForResource:(id)arg1 withExtension:(id)arg2 subdirectory:(id)arg3 inBundleWithURL:(id)arg4;
- (id)URLForResource:(id)arg1 withExtension:(id)arg2 subdirectory:(id)arg3;
- (id)localizedStringForKey:(id)arg1 value:(id)arg2 table:(id)arg3;
@property(readonly) NSTimeZone *timeZone;
- (_Bool)localizedCaseInsensitiveIsEqual:(id)arg1 toString:(id)arg2;
- (long long)localizedCaseInsensitiveCompare:(id)arg1 toString:(id)arg2;
- (long long)localizedCompare:(id)arg1 toString:(id)arg2;
- (id)localizedStringWithFormat:(id)arg1;
- (void)setLocaleSpecificStorage:(id)arg1 forKey:(id)arg2;
- (id)localeSpecificStorageForKey:(id)arg1;
- (id)numberFormatterStringFromDouble:(double)arg1 withFormat:(id)arg2 useDecimalPlaces:(_Bool)arg3 minDecimalPlaces:(unsigned short)arg4 decimalPlaces:(unsigned short)arg5 showThousandsSeparator:(_Bool)arg6 currencyCode:(id)arg7 suppressMinusSign:(_Bool)arg8;
- (void)_initializeNumberFormatterStringFromDoubleCache;
- (void)returnScientificNumberFormatter:(struct __CFNumberFormatter *)arg1;
- (struct __CFNumberFormatter *)checkoutScientificNumberFormatter;
- (void)returnNumberFormatter:(struct __CFNumberFormatter *)arg1;
- (struct __CFNumberFormatter *)checkoutNumberFormatter;
- (_Bool)isLanguageCharacterDirectionRightToLeft;
@property(readonly, nonatomic) const struct TSUNumberOrDateLexer *numberOrDateLexer;
- (id)displayNameForCurrencyCode:(id)arg1;
- (id)currencyCodeForCurrencySymbol:(id)arg1;
- (id)currencySymbolForCurrencyCode:(id)arg1;
@property(readonly) NSString *pmString;
@property(readonly) NSString *amString;
@property(readonly) NSArray *shortStandaloneWeekdaySymbols;
@property(readonly) NSArray *shortStandaloneMonthSymbols;
@property(readonly) NSArray *standaloneWeekdaySymbols;
@property(readonly) NSArray *standaloneMonthSymbols;
@property(readonly) NSString *currencyCode;
@property(readonly) unsigned long long groupingSize;
@property(readonly) NSString *percentSymbol;
@property(readonly) NSString *listSeparator;
@property(readonly) NSString *minusSign;
@property(readonly) NSString *groupingSeparator;
@property(readonly) NSString *decimalSeparator;
@property(readonly) NSString *numberingSystem;
@property(readonly) NSString *cacheKey;
@property(readonly) struct __CFLocale *cfGregorianCalendarLocale;
@property(readonly) struct __CFLocale *cfLocale;
- (id)displayLanguageNameWithStandalone:(_Bool)arg1;
- (id)simplifiedDisplayNameWithStandalone:(_Bool)arg1;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)copyWithGregorianCalendar;
- (id)copyWithDocumentLanguageIdentifier:(id)arg1;
- (id)localeIdentifierWithCalendarAndNumberingSystem;
- (id)localeIdentifierWithLanguageScriptAndRegionOnly;
- (id)localeIdentifierWithLanguageAndRegionOnly;
- (id)languageIdentifierWithLanguageAndRegionOnly;
- (struct __CFNumberFormatter *)createHarmonizedCFNumberFormatterOfStyle:(long long)arg1;
- (id)initWithLocale:(id)arg1 documentLanguageIdentifier:(id)arg2 useAutoupdating:(_Bool)arg3 formattingSymbols:(id)arg4;
- (id)initWithLocale:(id)arg1 documentLanguageIdentifier:(id)arg2 formattingSymbols:(id)arg3;
- (id)initWithLocale:(id)arg1 documentLanguageIdentifier:(id)arg2;
- (id)initWithLocale:(id)arg1 formattingSymbols:(id)arg2;
- (id)initWithLocale:(id)arg1;

@end

