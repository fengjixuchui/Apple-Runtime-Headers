//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <TSKit/NSCopying-Protocol.h>

@interface TSKFormat : NSObject <NSCopying>
{
    int _formatType;
}

+     // Error parsing type: @24@0:8r^{FormatStructArchive=^^?{ExtensionSet=^{Arena}SS(AllocatedData=^{KeyValue}^{map<int, google::protobuf::internal::ExtensionSet::Extension, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, google::protobuf::internal::ExtensionSet::Extension> > >})}{InternalMetadataWithArena=^v}{HasBits<2>=[2I]}{RepeatedPtrField<std::__1::basic_string<char> >=^{Arena}ii^{Rep}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}^{IndexSet}^{UUID}^{CustomFormatArchive}IIIIIBBBBIIIIdIIdddIIBBBBIIIIIIIIIBB{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}}16, name: formatFromArchive:
+ (unsigned int)validatedDecimalPlaces:(unsigned long long)arg1;
+ (id)defaultFormatWithFormatType:(int)arg1 locale:(id)arg2;
+ (id)booleanFormat;
+ (id)checkboxFormat;
+ (id)ratingFormat;
+ (id)textFormat;
+ (id)formatFromTSUFormatStruct:(CDStruct_cf9a5aa8)arg1;
@property(readonly, nonatomic) int formatType; // @synthesize formatType=_formatType;
-     // Error parsing type: v28@0:8^{FormatStructArchive=^^?{ExtensionSet=^{Arena}SS(AllocatedData=^{KeyValue}^{map<int, google::protobuf::internal::ExtensionSet::Extension, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, google::protobuf::internal::ExtensionSet::Extension> > >})}{InternalMetadataWithArena=^v}{HasBits<2>=[2I]}{RepeatedPtrField<std::__1::basic_string<char> >=^{Arena}ii^{Rep}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}^{IndexSet}^{UUID}^{CustomFormatArchive}IIIIIBBBBIIIIdIIdddIIBBBBIIIIIIIIIBB{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}}16B24, name: encodeToArchive:archivingCustomFormats:
-     // Error parsing type: v24@0:8^{FormatStructArchive=^^?{ExtensionSet=^{Arena}SS(AllocatedData=^{KeyValue}^{map<int, google::protobuf::internal::ExtensionSet::Extension, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, google::protobuf::internal::ExtensionSet::Extension> > >})}{InternalMetadataWithArena=^v}{HasBits<2>=[2I]}{RepeatedPtrField<std::__1::basic_string<char> >=^{Arena}ii^{Rep}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}^{IndexSet}^{UUID}^{CustomFormatArchive}IIIIIBBBBIIIIdIIdddIIBBBBIIIIIIIIIBB{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}}16, name: encodeToArchive:
- (id)description;
- (id)asMultipleChoiceListFormat;
- (id)asStepperSliderFormat;
- (id)asBooleanFormat;
- (id)asLegacyCustomFormat;
- (id)asCustomFormatWrapper;
- (id)asDurationFormat;
- (id)asDateTimeFormat;
- (id)asBaseFormat;
- (id)asFractionFormat;
- (id)asCurrencyFormat;
- (id)asNumberFormat;
- (id)stringFromDurationTimeInterval:(double)arg1 locale:(id)arg2;
- (id)stringFromBool:(_Bool)arg1 locale:(id)arg2;
- (id)stringFromDate:(id)arg1 locale:(id)arg2;
- (id)stringFromString:(id)arg1 locale:(id)arg2;
- (id)stringFromDouble:(double)arg1 locale:(id)arg2;
- (_Bool)hasSimpleFormatType;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithFormatType:(int)arg1;
@property(readonly, nonatomic) CDStruct_cf9a5aa8 formatStruct;

@end

