//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <TSPersistence/TSPObject.h>

#import <TSTables/TSPCopying-Protocol.h>

@class NSArray;

@interface TSTTableFilterSet : TSPObject <TSPCopying>
{
    int _type;
    _Bool _isEnabled;
    NSArray *_rules;
    _Bool _needsFormulaRewriteForImport;
    vector_06e666a8 _filterOffsets;
}

- (id).cxx_construct;
- (void).cxx_destruct;
@property(nonatomic) _Bool needsFormulaRewriteForImport; // @synthesize needsFormulaRewriteForImport=_needsFormulaRewriteForImport;
@property(nonatomic) _Bool isEnabled; // @synthesize isEnabled=_isEnabled;
-     // Error parsing type: v32@0:8^{FilterSetArchive=^^?{InternalMetadataWithArena=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}{RepeatedPtrField<TST::FilterRuleArchive>=^{Arena}ii^{Rep}}{RepeatedField<unsigned int>=ii(Pointer=^{Arena}^{Rep})}{RepeatedField<bool>=ii(Pointer=^{Arena}^{Rep})}iBB}16@24, name: saveToArchive:archiver:
-     // Error parsing type: v32@0:8r^{FilterSetArchive=^^?{InternalMetadataWithArena=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}{RepeatedPtrField<TST::FilterRuleArchive>=^{Arena}ii^{Rep}}{RepeatedField<unsigned int>=ii(Pointer=^{Arena}^{Rep})}{RepeatedField<bool>=ii(Pointer=^{Arena}^{Rep})}iBB}16@24, name: loadFromArchive:unarchiver:
- (void)saveToArchiver:(id)arg1;
- (void)loadFromUnarchiver:(id)arg1;
- (_Bool)allowsRowInsertion;
- (id)viewColumnIndicesForRulesInTable:(id)arg1;
- (id)baseColumnIndicesForRulesInTable:(id)arg1;
- (id)absoluteRuleIndicesForColumn:(struct TSUModelColumnIndex)arg1 inTable:(id)arg2;
- (unsigned long long)numberOfRulesInFilter:(unsigned long long)arg1;
- (unsigned long long)ruleIndexInFilter:(unsigned long long)arg1 matchingCell:(id)arg2;
- (unsigned long long)firstFilterIndexForBaseColumn:(struct TSUModelColumnIndex)arg1 inTable:(id)arg2;
- (id)filterIndicesForBaseColumn:(struct TSUModelColumnIndex)arg1 inTable:(id)arg2;
- (void)enumerateRulesInFilterIndex:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateFiltersForColumn:(struct TSUModelColumnIndex)arg1 withTable:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateFilterIndicesInTable:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateFiltersInTable:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)replaceRule:(id)arg1 atRuleIndex:(unsigned long long)arg2 inFilter:(unsigned long long)arg3;
- (void)addRules:(id)arg1 inFilter:(unsigned long long)arg2;
- (void)p_addRules:(id)arg1 atRuleIndices:(id)arg2 inFilter:(unsigned long long)arg3 isNew:(_Bool)arg4;
- (void)removeRulesForBaseColumnIndices:(id)arg1 withTableInfo:(id)arg2;
- (void)removeRulesWithIndices:(id)arg1 inFilter:(unsigned long long)arg2;
- (id)removeRulesWithAbsoluteIndices:(id)arg1;
@property(readonly, nonatomic) unsigned long long filterCount;
@property(readonly, nonatomic) unsigned long long newFilterIndex;
@property(nonatomic) int filterSetType;
@property(readonly, nonatomic) _Bool canAddRules;
@property(readonly, nonatomic) unsigned long long ruleCount;
- (id)filterAtIndex:(unsigned long long)arg1 inTable:(id)arg2;
- (id)ruleInFilter:(unsigned long long)arg1 atIndex:(unsigned long long)arg2;
- (id)ruleAtAbsoluteIndex:(unsigned long long)arg1;
- (_Bool)rowIsShown:(unsigned int)arg1 withHiddenStateExtent:(id)arg2 withCalcEngine:(id)arg3;
- (_Bool)p_thresholdComparisonMatchesFilter:(long long)arg1 withPredicateType:(int)arg2;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (_Bool)containsFilterRulesInUIDForm;
- (id)copyByRewritingFilterRulesToGeometricFormWithContext:(id)arg1 withTableInfo:(id)arg2;
- (id)copyByRewritingFilterRulesToUidFormWithContext:(id)arg1 withTableInfo:(id)arg2;
- (id)copyWithContext:(id)arg1;
- (id)initWithFilterRules:(id)arg1 type:(int)arg2 context:(id)arg3;

@end

