//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <ARKit/ARConfiguration.h>

@class ARImageSensorSettings, ARWorldMap, NSSet;

@interface ARBodyTrackingConfiguration : ARConfiguration
{
    _Bool _wantsHDREnvironmentTextures;
    _Bool _automaticImageScaleEstimationEnabled;
    _Bool _automaticSkeletonScaleEstimationEnabled;
    ARWorldMap *_initialWorldMap;
    long long _environmentTexturing;
    unsigned long long _planeDetection;
    NSSet *_detectionImages;
    long long _maximumNumberOfTrackedImages;
}

+ (id)supportedVideoFormatsForSuperWide;
+ (id)new;
+ (_Bool)supportsFrameSemantics:(unsigned long long)arg1;
+ (id)supportedVideoFormats;
+ (_Bool)isSupported;
@property(nonatomic) long long maximumNumberOfTrackedImages; // @synthesize maximumNumberOfTrackedImages=_maximumNumberOfTrackedImages;
@property(nonatomic) _Bool automaticSkeletonScaleEstimationEnabled; // @synthesize automaticSkeletonScaleEstimationEnabled=_automaticSkeletonScaleEstimationEnabled;
@property(nonatomic) _Bool automaticImageScaleEstimationEnabled; // @synthesize automaticImageScaleEstimationEnabled=_automaticImageScaleEstimationEnabled;
@property(copy, nonatomic) NSSet *detectionImages; // @synthesize detectionImages=_detectionImages;
@property(nonatomic) unsigned long long planeDetection; // @synthesize planeDetection=_planeDetection;
@property(nonatomic) _Bool wantsHDREnvironmentTextures; // @synthesize wantsHDREnvironmentTextures=_wantsHDREnvironmentTextures;
@property(nonatomic) long long environmentTexturing; // @synthesize environmentTexturing=_environmentTexturing;
@property(retain, nonatomic) ARWorldMap *initialWorldMap; // @synthesize initialWorldMap=_initialWorldMap;
- (void).cxx_destruct;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)createTechniquesWithParallelTechniques:(id)arg1 serialTechniques:(id)arg2;
- (id)_trackingOptions;
- (id)imageSensorSettings;
- (_Bool)shouldUseSuperWide;
@property(readonly, nonatomic) ARImageSensorSettings *imageSensorSettingsForSuperWide;
- (_Bool)shouldEnableVisionDataForImageSensorSettings:(id)arg1;
- (id)parentImageSensorSettings;
- (id)init;

// Remaining properties
@property(nonatomic, getter=isAutoFocusEnabled) _Bool autoFocusEnabled; // @dynamic autoFocusEnabled;

@end

