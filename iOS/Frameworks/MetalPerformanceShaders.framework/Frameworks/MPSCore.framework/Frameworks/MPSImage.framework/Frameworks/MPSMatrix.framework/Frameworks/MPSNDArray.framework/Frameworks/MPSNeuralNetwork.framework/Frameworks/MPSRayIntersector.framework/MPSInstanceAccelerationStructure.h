//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <MPSRayIntersector/MPSAccelerationStructure.h>

@class NSArray;
@protocol MTLBuffer;

@interface MPSInstanceAccelerationStructure : MPSAccelerationStructure
{
    unsigned long long _transformType;
    // Error parsing type: ^{MPSInstanceBVH=^^?{atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> >=AI}}^{MPSBVHGroup}^{MPSBufferRange}^{MPSBufferRange}^{MPSBufferRange}^{MPSBufferRange}^{MPSBufferRange}QQiIi@@^{MPSLibrary}@}, name: _bvh
    NSArray *_accelerationStructures;
    id <MTLBuffer> _instanceBuffer;
    unsigned long long _instanceBufferOffset;
    id <MTLBuffer> _transformBuffer;
    unsigned long long _transformBufferOffset;
    id <MTLBuffer> _maskBuffer;
    unsigned long long _maskBufferOffset;
    unsigned long long _instanceCount;
}

+ (_Bool)supportsSecureCoding;
@property(nonatomic) unsigned long long instanceCount; // @synthesize instanceCount=_instanceCount;
@property(nonatomic) unsigned long long maskBufferOffset; // @synthesize maskBufferOffset=_maskBufferOffset;
@property(retain, nonatomic) id <MTLBuffer> maskBuffer; // @synthesize maskBuffer=_maskBuffer;
@property(nonatomic) unsigned long long transformBufferOffset; // @synthesize transformBufferOffset=_transformBufferOffset;
@property(retain, nonatomic) id <MTLBuffer> transformBuffer; // @synthesize transformBuffer=_transformBuffer;
@property(nonatomic) unsigned long long instanceBufferOffset; // @synthesize instanceBufferOffset=_instanceBufferOffset;
@property(retain, nonatomic) id <MTLBuffer> instanceBuffer; // @synthesize instanceBuffer=_instanceBuffer;
@property(retain, nonatomic) NSArray *accelerationStructures; // @synthesize accelerationStructures=_accelerationStructures;
- (void)encodeRefitToCommandBuffer:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1 device:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1 group:(id)arg2;
- (id)copyInstanceAccelerationStructureWithZone:(struct _NSZone *)arg1 device:(id)arg2 group:(id)arg3;
- (void)bindResourcesWithEncoder:(id)arg1 commandBuffer:(id)arg2 retainedResources:(id)arg3;
- (_Bool)useResourceBuffer;
- (void)encodeResourcesToBuffer:(id)arg1;
- (void)rebuild;
- (void)encodeInstanceOffsetsToBuffer:(id)arg1;
- (void)rebuildWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)validate;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1 group:(id)arg2;
- (id)initWithCoder:(id)arg1 device:(id)arg2;
- (void)decodeInstanceAccelerationStructureWithCoder:(id)arg1;
- (id)initWithGroup:(id)arg1;
- (id)initWithDevice:(id)arg1;
- (void)sharedInitInstanceAccelerationStructure;
- (id)statistics;
- (struct _MPSAxisAlignedBoundingBox)boundingBox;
- (int)nodeLayout;
- (unsigned long long)branchingFactor;
- (unsigned long long)innerNodeCount;
- (unsigned long long)leafNodeCount;
- (int)rootNodeType;
-     // Error parsing type: ^{MPSBufferRange=^{MPSBufferRange}^{MPSBufferRange}^{MPSBufferRange}^{MPSBufferRange}QQ{atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> >=AI}}^{MPSBufferAllocator}}16@0:8, name: pageBufferRange
-     // Error parsing type: ^{MPSBufferRange=^{MPSBufferRange}^{MPSBufferRange}^{MPSBufferRange}^{MPSBufferRange}QQ{atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> >=AI}}^{MPSBufferAllocator}}16@0:8, name: pageTable1BufferRange
-     // Error parsing type: ^{MPSBufferRange=^{MPSBufferRange}^{MPSBufferRange}^{MPSBufferRange}^{MPSBufferRange}QQ{atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> >=AI}}^{MPSBufferAllocator}}16@0:8, name: pageTable0BufferRange
-     // Error parsing type: ^{MPSBufferRange=^{MPSBufferRange}^{MPSBufferRange}^{MPSBufferRange}^{MPSBufferRange}QQ{atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> >=AI}}^{MPSBufferAllocator}}16@0:8, name: leafNodeBufferRange
-     // Error parsing type: ^{MPSBufferRange=^{MPSBufferRange}^{MPSBufferRange}^{MPSBufferRange}^{MPSBufferRange}QQ{atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> >=AI}}^{MPSBufferAllocator}}16@0:8, name: innerNodeBufferRange
@property(nonatomic) unsigned long long transformType;

@end

