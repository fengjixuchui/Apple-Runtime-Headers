//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <MPSRayIntersector/MPSAccelerationStructure.h>

@class NSArray;
@protocol MTLArgumentEncoder, MTLBuffer;

@interface MPSPolygonAccelerationStructure : MPSAccelerationStructure
{
    unsigned int _indexType;
    unsigned long long _polygonType;
    // Error parsing type: ^{MPSPrimitiveBVH=^^?{atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> >=AI}}^{MPSBVHGroup}^{MPSBufferRange}^{MPSBufferRange}^{MPSBufferRange}^{MPSBufferRange}^{MPSBufferRange}QQiIi@@^{MPSLibrary}^{MPSBufferRange}I}, name: _bvh
    NSArray *_polygonBuffers;
    id <MTLArgumentEncoder> _resourceEncoder;
    // Error parsing type: ^{MPSBufferRange=^{MPSBufferRange}^{MPSBufferRange}^{MPSBufferRange}^{MPSBufferRange}QQ{atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> >=AI}}^{MPSBufferAllocator}}, name: _resourceBufferRange
    unsigned long long _vertexStride;
}

+ (_Bool)supportsSecureCoding;
@property(nonatomic) unsigned long long vertexStride; // @synthesize vertexStride=_vertexStride;
@property(retain, nonatomic) NSArray *polygonBuffers; // @synthesize polygonBuffers=_polygonBuffers;
- (void)encodeRefitToCommandBuffer:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1 device:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1 group:(id)arg2;
- (id)copyPolygonAccelerationStructureWithZone:(struct _NSZone *)arg1 device:(id)arg2 group:(id)arg3;
- (void)bindResourcesWithEncoder:(id)arg1 commandBuffer:(id)arg2 retainedResources:(id)arg3;
- (_Bool)useResourceBuffer;
- (void)encodeResourcesToBuffer:(id)arg1;
- (id)newResourceEncoder;
- (void)rebuild;
- (void)rebuildWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)validate;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1 group:(id)arg2;
- (id)initWithCoder:(id)arg1 device:(id)arg2;
- (void)decodePolygonAccelerationStructureWithCoder:(id)arg1;
- (id)initWithGroup:(id)arg1;
- (id)initWithDevice:(id)arg1;
- (void)sharedInitPolygonAccelerationStructure;
@property(nonatomic) unsigned long long polygonCount;
@property(nonatomic) unsigned long long maskBufferOffset;
@property(retain, nonatomic) id <MTLBuffer> maskBuffer;
@property(nonatomic) unsigned long long indexBufferOffset;
@property(retain, nonatomic) id <MTLBuffer> indexBuffer;
@property(nonatomic) unsigned long long vertexBufferOffset;
@property(retain, nonatomic) id <MTLBuffer> vertexBuffer;
- (id)statistics;
- (id)boundingBoxBuffer;
- (struct _MPSAxisAlignedBoundingBox)boundingBox;
- (int)nodeLayout;
- (unsigned long long)branchingFactor;
- (unsigned long long)innerNodeStride;
- (unsigned long long)innerNodeCount;
- (unsigned long long)leafNodeCount;
- (int)rootNodeType;
-     // Error parsing type: ^{MPSBufferRange=^{MPSBufferRange}^{MPSBufferRange}^{MPSBufferRange}^{MPSBufferRange}QQ{atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> >=AI}}^{MPSBufferAllocator}}16@0:8, name: pageBufferRange
-     // Error parsing type: ^{MPSBufferRange=^{MPSBufferRange}^{MPSBufferRange}^{MPSBufferRange}^{MPSBufferRange}QQ{atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> >=AI}}^{MPSBufferAllocator}}16@0:8, name: pageTable1BufferRange
-     // Error parsing type: ^{MPSBufferRange=^{MPSBufferRange}^{MPSBufferRange}^{MPSBufferRange}^{MPSBufferRange}QQ{atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> >=AI}}^{MPSBufferAllocator}}16@0:8, name: pageTable0BufferRange
-     // Error parsing type: ^{MPSBufferRange=^{MPSBufferRange}^{MPSBufferRange}^{MPSBufferRange}^{MPSBufferRange}QQ{atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> >=AI}}^{MPSBufferAllocator}}16@0:8, name: leafNodeBufferRange
-     // Error parsing type: ^{MPSBufferRange=^{MPSBufferRange}^{MPSBufferRange}^{MPSBufferRange}^{MPSBufferRange}QQ{atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> >=AI}}^{MPSBufferAllocator}}16@0:8, name: innerNodeBufferRange
-     // Error parsing type: ^{MPSBufferRange=^{MPSBufferRange}^{MPSBufferRange}^{MPSBufferRange}^{MPSBufferRange}QQ{atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> >=AI}}^{MPSBufferAllocator}}16@0:8, name: primitiveIndexBufferRange
-     // Error parsing type: ^{MPSBVH=^^?{atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> >=AI}}^{MPSBVHGroup}^{MPSBufferRange}^{MPSBufferRange}^{MPSBufferRange}^{MPSBufferRange}^{MPSBufferRange}QQiIi@@^{MPSLibrary}}16@0:8, name: bvh
@property(nonatomic) unsigned int indexType;
@property(nonatomic) unsigned long long polygonType;

@end

