//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <PepperUICore/_PUICCrownIndicatorDisplayer-Protocol.h>

@class CADisplayLink, NSArray, NSString, PUICCrownInputSequencerDetent, PUICNotchBelt;
@protocol PUICCrownInputSequencerDataSource, PUICCrownInputSequencerDelegate, PUICCrownInputSequencerDetentsDataSource;

@interface PUICCrownInputSequencer : NSObject <_PUICCrownIndicatorDisplayer>
{
    _Bool _crownInverted;
    _Bool _uiIsInverted;
    double _crownInputSuppressionTimeInterval;
    _Bool _currentAndTargetOffsetDiverged;
    float _targetOffset;
    CADisplayLink *_displayLink;
    double _lastDisplayLinkFiredTimeInterval;
    double _enqueuedRotationalDelta;
    PUICNotchBelt *_notchBelt;
    _Bool _usingMinorDetents;
    float _tension;
    float _friction;
    float _velocity;
    double _accumulatedSpringDeltaTime;
    CDStruct_32e70f54 *_runningAverageRotationalDelta;
    CDStruct_32e70f54 *_runningAverageRotationalVelocity;
    double _appliedInertialDelta;
    double _targetInertialDelta;
    double _clampedTargetIntertialDelta;
    struct {
        unsigned int offsetDidChange:1;
        unsigned int offsetDidReachBoundary:1;
        unsigned int idleDidChange:1;
        unsigned int shouldRubberBandAtBoundary:1;
        unsigned int willBecomeIdleWithCrownVelocityTargetOffset:1;
        unsigned int didBecomeIdleWillDecelerate:1;
        unsigned int willBeginDecelerating:1;
        unsigned int didEndDecelerating:1;
        unsigned int averageCrownVelocityDidChange:1;
        unsigned int _offsetDidChangeByDelta:1;
        unsigned int _shouldSuppressInput:1;
    } _delegateRespondsTo;
    struct {
        unsigned int previousDetentNextDetentAfterOffset:1;
    } _dataSourceRespondsTo;
    _Bool _playNextLimitHaptic;
    _Bool _shouldEnableMinorDetents;
    _Bool _useWideIdleCheck;
    _Bool _continuous;
    _Bool _rubberBandingEnabled;
    _Bool _wantsCrownIndicatorStyledForTouchInput;
    _Bool _useExternalTimeSource;
    int _crownIndicatorMode;
    id <PUICCrownInputSequencerDelegate> _delegate;
    id <PUICCrownInputSequencerDetentsDataSource> _detentsDataSource;
    int _rubberBandHapticsLocation;
    CDUnknownBlockType _curve;
    float _detentOffset;
    id <PUICCrownInputSequencerDataSource> _dataSource;
    double _start;
    double _end;
    double _visibleLength;
    double _offset;
    double _screenSpaceMultiplier;
    double _decelerationRate;
    double _decelerationEpsilon;
    double _screenPointsPerRevolution;
    double _offsetPerRevolution;
}

- (void).cxx_destruct;
@property(nonatomic) __weak id <PUICCrownInputSequencerDataSource> dataSource; // @synthesize dataSource=_dataSource;
@property(nonatomic) double offsetPerRevolution; // @synthesize offsetPerRevolution=_offsetPerRevolution;
@property(nonatomic, getter=_screenPointsPerRevolution, setter=_setScreenPointsPerRevolution:) double screenPointsPerRevolution; // @synthesize screenPointsPerRevolution=_screenPointsPerRevolution;
@property(nonatomic) float detentOffset; // @synthesize detentOffset=_detentOffset;
@property(nonatomic) _Bool useExternalTimeSource; // @synthesize useExternalTimeSource=_useExternalTimeSource;
@property(copy, nonatomic) CDUnknownBlockType curve; // @synthesize curve=_curve;
@property(nonatomic) int rubberBandHapticsLocation; // @synthesize rubberBandHapticsLocation=_rubberBandHapticsLocation;
@property(nonatomic) __weak id <PUICCrownInputSequencerDetentsDataSource> detentsDataSource; // @synthesize detentsDataSource=_detentsDataSource;
@property(nonatomic) double decelerationEpsilon; // @synthesize decelerationEpsilon=_decelerationEpsilon;
@property(nonatomic) double decelerationRate; // @synthesize decelerationRate=_decelerationRate;
@property(nonatomic) __weak id <PUICCrownInputSequencerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool wantsCrownIndicatorStyledForTouchInput; // @synthesize wantsCrownIndicatorStyledForTouchInput=_wantsCrownIndicatorStyledForTouchInput;
@property(nonatomic) int crownIndicatorMode; // @synthesize crownIndicatorMode=_crownIndicatorMode;
@property(nonatomic) double screenSpaceMultiplier; // @synthesize screenSpaceMultiplier=_screenSpaceMultiplier;
@property(nonatomic, getter=isRubberBandingEnabled) _Bool rubberBandingEnabled; // @synthesize rubberBandingEnabled=_rubberBandingEnabled;
@property(nonatomic) double offset; // @synthesize offset=_offset;
@property(nonatomic, getter=isContinuous) _Bool continuous; // @synthesize continuous=_continuous;
@property(nonatomic) double visibleLength; // @synthesize visibleLength=_visibleLength;
@property(nonatomic) _Bool useWideIdleCheck; // @synthesize useWideIdleCheck=_useWideIdleCheck;
@property(nonatomic) double end; // @synthesize end=_end;
@property(nonatomic) double start; // @synthesize start=_start;
- (void)enumerateDebugDescriptionOfNotches:(CDUnknownBlockType)arg1;
- (id)debugDescriptionOfNotches;
- (void)_uiInvertedDidChangeNotification:(id)arg1;
- (void)_updateUIInvertedSetting;
- (void)_deviceOrientationInvertedDidChangeNotification:(id)arg1;
- (void)_updateCrownInvertedSetting;
- (void)checkIntegrityOfNotches;
- (_Bool)addNotchFrom:(float)arg1 withEdgeType:(unsigned int)arg2 strength:(int)arg3 to:(float)arg4 withEdgeType:(unsigned int)arg5 strength:(int)arg6 restingPosition:(float)arg7;
- (_Bool)addNotchFrom:(float)arg1 withEdgeType:(unsigned int)arg2 strength:(int)arg3 to:(float)arg4 withEdgeType:(unsigned int)arg5 strength:(int)arg6;
- (_Bool)addNotchFrom:(float)arg1 withEdgeType:(unsigned int)arg2 to:(float)arg3 withEdgeType:(unsigned int)arg4 strength:(int)arg5;
- (_Bool)addNotchFrom:(float)arg1 to:(float)arg2 withStrength:(int)arg3;
- (_Bool)addNotchFrom:(float)arg1 withEdgeType:(unsigned int)arg2 to:(float)arg3 withEdgeType:(unsigned int)arg4;
- (_Bool)removeNotchFrom:(float)arg1 to:(float)arg2;
- (_Bool)addNotchFrom:(float)arg1 to:(float)arg2;
- (void)resetNotches;
- (_Bool)isNotchBeltEmpty;
@property(nonatomic) _Bool minorDetentsEnabled;
- (void)_notifyClientsOfDecelerationCompletion;
- (void)_notifyClientsOfIdleBeganWithDeceleration:(_Bool)arg1;
- (void)_notifyObserversOfCrownVelocityChange;
- (void)_notifyObserversOfIdleChange;
- (void)_notifyObserversThatOffsetReachedBoundary:(int)arg1;
- (void)_notifyObserversOfOffsetChange;
- (double)_effectiveOffsetPerRevolution;
- (_Bool)_shouldRubberBandOffset:(double)arg1;
- (_Bool)_boundariesExceededForOffset:(double)arg1;
- (double)_calculateInertialDeltaForVelocity:(double)arg1;
- (double)_calculateInertialVelocityForDelta:(double)arg1;
- (double)_velocityCoefficient;
- (double)_applyDecelerationForDeltaTime:(double)arg1 shouldBounce:(_Bool)arg2 makeItSnappy:(_Bool)arg3;
- (double)_rotationalDeltaConstrainedToClampedTargetInertialDelta:(double)arg1;
- (double)_constrainedRotationalDelta:(double)arg1 toMinMaxDeltaFromOffset:(double)arg2;
- (double)_clientAdjustedInertialDelta:(double)arg1 fromOffset:(double)arg2;
- (double)_calculateInertialVelocityForAverageInputVelocity:(double)arg1 withCurrentOffset:(double)arg2;
- (void)stopVelocityTrackingAndDecelerationImmediately;
- (void)_stopDeceleratingImmediately;
- (void)_updateWithTimestamp:(double)arg1;
- (void)updateWithTimestamp:(double)arg1;
- (void)_displayLinkFired:(id)arg1;
- (void)_updateDisplayLink;
- (_Bool)_needsDisplayLink;
- (void)_updateOffsetWithRotationalDelta:(double)arg1 eventSourceTimestamp:(double)arg2 adjustForCrownOrientation:(_Bool)arg3;
- (void)_updateVisibleCrownIndicator:(_Bool)arg1;
- (void)_acquireCrownIndicatorIfNecessary;
- (double)_maximumRubberBandingDistance;
- (void)reloadData;
@property(readonly, nonatomic) PUICCrownInputSequencerDetent *activeDetent;
@property(copy, nonatomic) NSArray *staticDetents;
- (void)setActiveDetentChangeHapticEnabled:(_Bool)arg1;
- (_Bool)isActiveDetentChangeHapticEnabled;
- (void)setSmoothingEnabled:(_Bool)arg1;
- (_Bool)isSmoothingEnabled;
@property(readonly, nonatomic, getter=isRubberBanding) _Bool rubberBanding;
- (void)setCrownIndicatorVisible:(_Bool)arg1 animated:(_Bool)arg2;
@property(readonly, nonatomic, getter=isDecelerating) _Bool decelerating;
@property(readonly, nonatomic, getter=isIdle) _Bool idle;
@property(nonatomic, getter=isCrownIndicatorVisible) _Bool crownIndicatorVisible; // @dynamic crownIndicatorVisible;
- (void)updateWithCrownInputEvent:(id)arg1;
- (double)percentageOfMaximumRubberBandDistanceForOffset:(double)arg1;
- (double)percentageOffsetForOffset:(double)arg1;
@property(readonly, nonatomic) double length;
@property(readonly, nonatomic) double averageCrownVelocity;
- (double)velocity;
- (void)setOffset:(double)arg1 suppressIndicatorVisibilityChanges:(_Bool)arg2;
- (void)_hideCrownIndicator;
- (void)_setOffset:(double)arg1 notifyDelegate:(_Bool)arg2 suppressIndicatorVisibilityChanges:(_Bool)arg3;
- (void)_setOffset:(double)arg1 notifyDelegate:(_Bool)arg2 suppressIndicatorVisibilityChanges:(_Bool)arg3 updateTargetOffset:(_Bool)arg4;
- (void)_updateIndicatorIfNecessary;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

