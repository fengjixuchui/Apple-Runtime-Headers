//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <NanoMusicCore/MPCPlaybackEngineDelegate-Protocol.h>
#import <NanoMusicCore/MPRequestResponseControllerDelegate-Protocol.h>

@class CSLSOnWristMonitor, MPCPlaybackEngine, MPRequestResponseController, NMCWiFiManager, NMRNowPlayingController, NSHashTable, NSString;
@protocol OS_dispatch_group;

@interface NMCMediaPlayerModelPlaybackController : NSObject <MPCPlaybackEngineDelegate, MPRequestResponseControllerDelegate>
{
    MPCPlaybackEngine *_playbackEngine;
    MPRequestResponseController *_requestResponseController;
    void *_mediaRemoteCommandObserver;
    NSHashTable *_errorHandlers;
    _Bool _systemMusicApplication;
    NSObject<OS_dispatch_group> *_commandsPendingFirstPlayerResponseGroup;
    CSLSOnWristMonitor *_onWristMonitor;
    _Bool _shouldPauseNextTimeOffWrist;
    NMCWiFiManager *_wifiManager;
    _Bool _wantsRadioSupport;
    _Bool _wantsDefaultMusicFallbackPlaybackIntent;
    NMRNowPlayingController *_nowPlayingController;
}

+ (id)sharedController;
- (void).cxx_destruct;
@property(retain, nonatomic) NMRNowPlayingController *nowPlayingController; // @synthesize nowPlayingController=_nowPlayingController;
@property(nonatomic) _Bool wantsDefaultMusicFallbackPlaybackIntent; // @synthesize wantsDefaultMusicFallbackPlaybackIntent=_wantsDefaultMusicFallbackPlaybackIntent;
@property(nonatomic) _Bool wantsRadioSupport; // @synthesize wantsRadioSupport=_wantsRadioSupport;
- (void)performMediaRemoteCommand:(unsigned int)arg1 options:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)performMediaRemoteCommand:(unsigned int)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_configureDefaultFallbackPlaybackIntentIfNeededWithPlaybackEngine:(id)arg1;
- (void)_configureLocalOriginObserverAndCommandHandler;
- (void)engine:(id)arg1 didFailToPlayItem:(id)arg2 withError:(id)arg3;
- (void)engine:(id)arg1 didFailToPlayFirstItem:(id)arg2 withError:(id)arg3;
- (void)engineDidPauseForLeaseEnd:(id)arg1;
- (void)engine:(id)arg1 didFailToActivateWithError:(id)arg2 resolution:(CDUnknownBlockType)arg3;
- (int)_playbackErrorTypeFromTopLevelError:(id)arg1;
- (int)_playbackErrorFromError:(id)arg1;
- (void)controller:(id)arg1 defersResponseReplacement:(CDUnknownBlockType)arg2;
- (void)_setupPlaybackEngineIfNecessary;
- (void)_unregisterMediaRemoteCommandHandlerIfNeeded;
- (void)_registerMediaRemoteCommandHandlerIfNeeded;
- (void)_configureForStageDemoModeIfNeeded;
- (_Bool)isSystemMusicApplication;
- (void)setSystemMusicApplication:(_Bool)arg1;
- (void)removeErrorHandler:(id)arg1;
- (void)addErrorHandler:(id)arg1;
- (void)clearPlaybackQueueWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)insertPlaybackIntent:(id)arg1 intoPlaybackQueueAtInsertionPosition:(unsigned int)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)replacePlaybackQueueWithIntent:(id)arg1 preventingAutomaticPlayback:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)prepareToHandleMediaRemoteCommands;
- (void)setupPlaybackEngine;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

