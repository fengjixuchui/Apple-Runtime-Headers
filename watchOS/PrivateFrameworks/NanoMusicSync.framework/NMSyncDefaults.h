//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <NanoMusicSync/NMSNotificationDispatcherDelegate-Protocol.h>

@class MPMediaPlaylist, NMSNotificationDispatcher, NPSDomainAccessor, NSArray, NSData, NSDate, NSDictionary, NSNumber, NSSet, NSString;
@protocol OS_dispatch_queue;

@interface NMSyncDefaults : NSObject <NMSNotificationDispatcherDelegate>
{
    _Bool _needsSync;
    NSString *_pairingID;
    NSObject<OS_dispatch_queue> *_domainAccessorQueue;
    NPSDomainAccessor *_domainAccessor;
    NSDictionary *_notifiersDict;
    NMSNotificationDispatcher *_settingsNotifier;
    NMSNotificationDispatcher *_musicPinningSelectionsNotifier;
    NMSNotificationDispatcher *_recoSelectionsNotifier;
    NMSNotificationDispatcher *_libraryRecoNotifier;
    NMSNotificationDispatcher *_storeRecoNotifier;
    NMSNotificationDispatcher *_podcastsPinningSelectionsNotifier;
    NMSNotificationDispatcher *_podcastsSubscriptionMetadataNotifier;
    NMSNotificationDispatcher *_podcastsSizeInfoNotifier;
    NMSNotificationDispatcher *_audiobooksPinningSelectionsNotifier;
    NMSNotificationDispatcher *_audiobooksRecommendationsNotifier;
    NMSNotificationDispatcher *_syncStateNotifier;
    NMSNotificationDispatcher *_syncInfoNotifier;
    NMSNotificationDispatcher *_syncInfoRequestDateNotifier;
    _Bool _allowOffChargerAssetSync;
    NSNumber *_assetSyncLimit;
    NSNumber *_lastFullySentAssetSyncPlaylistPersistentID;
    NSNumber *_lastFullySentAssetSyncPlaylistVersion;
    NSDate *_modificationDate;
    unsigned int _assetSyncLimitType;
    unsigned int _assetSyncType;
    NSNumber *_assetSyncPlaylistPersistentID;
}

+ (id)sharedDefaults;
- (void).cxx_destruct;
@property(nonatomic) _Bool allowOffChargerAssetSync; // @synthesize allowOffChargerAssetSync=_allowOffChargerAssetSync;
@property(retain, nonatomic, setter=setAssetSyncPlaylistPersistentID:) NSNumber *assetSyncPlaylistPersistentID; // @synthesize assetSyncPlaylistPersistentID=_assetSyncPlaylistPersistentID;
@property(nonatomic) unsigned int assetSyncType; // @synthesize assetSyncType=_assetSyncType;
@property(nonatomic) unsigned int assetSyncLimitType; // @synthesize assetSyncLimitType=_assetSyncLimitType;
@property(readonly, nonatomic) NSDate *modificationDate; // @synthesize modificationDate=_modificationDate;
@property(copy, nonatomic) NSNumber *lastFullySentAssetSyncPlaylistVersion; // @synthesize lastFullySentAssetSyncPlaylistVersion=_lastFullySentAssetSyncPlaylistVersion;
@property(copy, nonatomic) NSNumber *lastFullySentAssetSyncPlaylistPersistentID; // @synthesize lastFullySentAssetSyncPlaylistPersistentID=_lastFullySentAssetSyncPlaylistPersistentID;
- (void)_notifyChangesForKey:(id)arg1;
- (void)_setBool:(_Bool)arg1 forKey:(id)arg2;
- (_Bool)_boolForKey:(id)arg1 defaultValue:(_Bool)arg2;
- (void)_removeObjectForKey:(id)arg1;
- (void)_setObject:(id)arg1 forKey:(id)arg2 shouldSynchronizeToPairedDevice:(_Bool)arg3;
- (void)_setObject:(id)arg1 forKey:(id)arg2;
- (void)_setLegacyObject:(id)arg1 forKey:(id)arg2 ifRemoteDeviceMissingCapability:(id)arg3;
- (id)_objectForKey:(id)arg1;
- (id)_defaultWithPrefix:(id)arg1 forBundleIdentifier:(id)arg2;
- (int)dormancyIntervalInHoursForBundleID:(id)arg1;
- (id)installDateForBundleID:(id)arg1;
- (id)lastUserPinningChangeDateForBundleID:(id)arg1;
- (id)lastUserLaunchDateForBundleID:(id)arg1;
- (void)setInstallDateForBundleID:(id)arg1;
- (void)setLastUserPinningChangeDateForBundleID:(id)arg1;
- (void)setLastUserLaunchDateForBundleID:(id)arg1;
- (void)clearAppActivityStatusDefaultsForBundleID:(id)arg1;
- (void)_writeDate:(id)arg1 forKey:(id)arg2 withBundleID:(id)arg3;
- (id)_dateValueForKey:(id)arg1 bundleID:(id)arg2;
- (void)_synchronizeSyncInfoToPhone;
- (_Bool)_shouldSynchronizeSyncInfoToPhoneForBundleIdentifier:(id)arg1;
@property(copy, nonatomic) NSDictionary *audiobooksSyncInfo;
@property(copy, nonatomic) NSDictionary *podcastsSyncInfo;
@property(copy, nonatomic) NSDictionary *musicSyncInfo;
@property(readonly, nonatomic) _Bool debugSyncInfoEnabled;
- (id)lastSyncInfoRequestDateForBundleIdentifier:(id)arg1;
@property(copy, nonatomic) NSDictionary *syncStateDict;
@property(readonly, nonatomic) NSDictionary *clientPinningSettingsToken;
@property(copy, nonatomic) NSDate *lastSiriFaceActiveDate;
@property(copy, nonatomic) NSDate *lastMusicAppActiveDate;
@property(copy, nonatomic) NSData *cachedRecommendationsData;
@property(copy, nonatomic) NSDate *recommendationExpirationDate;
- (void)_preSeed2_setMusicRecommendationDict:(id)arg1;
- (_Bool)_continueUsingMusicRecommendationKey;
@property(copy, nonatomic) NSDictionary *musicRecommendationDict;
@property(nonatomic) _Bool shouldUseLibraryRecommendations;
@property(copy, nonatomic) NSArray *libraryRecommendationPlaylists;
@property(copy, nonatomic) NSArray *libraryRecommendationAlbums;
@property(copy, nonatomic) NSNumber *audiobookDownloadLimit;
@property(copy, nonatomic) NSArray *pinnedAudiobooks;
@property(copy, nonatomic) NSArray *readingNowAudiobooks;
@property(nonatomic) _Bool readingNowEnabled;
@property(copy, nonatomic) NSArray *wantToReadAudiobooks;
@property(nonatomic) _Bool wantToReadEnabled;
- (void)setPodcastSizeEstimationData:(id)arg1;
- (id)podcastSizeEstimationData;
@property(copy, nonatomic) NSNumber *podcastsAssetSyncLimit;
@property(copy, nonatomic) NSSet *pinnedPodcasts;
@property(copy, nonatomic) NSArray *pinnedPodcastIdentifiers;
@property(copy, nonatomic) NSArray *listenNowPodcastEpisodes;
- (void)clearPodcastsDefaults;
@property(copy, nonatomic) NSArray *pinnedPodcastStationUUIDs;
@property(copy, nonatomic) NSArray *pinnedPodcastFeedURLs;
@property(copy, nonatomic) NSArray *listenNowPodcastFeedURLs;
@property(nonatomic) _Bool pinnedPodcastsAreUserSet;
@property(copy, nonatomic) NSDictionary *gizmoPodcastEpisodeLimits;
@property(copy, nonatomic) NSDictionary *gizmoPodcastDownloadOrders;
@property(copy, nonatomic) NSArray *pinnedAlbums;
@property(retain, nonatomic) NSNumber *workoutPlaylistID;
@property(copy, nonatomic) NSArray *pinnedPlaylists;
@property(copy, nonatomic) NSNumber *assetSyncLimit; // @synthesize assetSyncLimit=_assetSyncLimit;
- (void)_clearAssetSyncPlaylistDependentDefaults;
- (void)_setNeedsSynchronize;
- (id)_playlistPersistentIDForPlaylistName:(id)arg1;
- (id)_defaultPlaylistPersistentID;
- (unsigned int)_spaceQuotaForNumberOfSongs:(unsigned int)arg1;
- (void)_removeOldMusicRecommendationsInfoIfPossible;
- (void)_migrateDataIfNecessary;
- (void)_writePropertiesToDefaults;
- (void)_reloadPropertiesFromDefaults;
- (void)_reloadPropertiesFromDefaultsOnMainThread;
- (void)_addCapability:(id)arg1 forCapabilitiesKey:(id)arg2;
- (void)_addWatchCapability:(id)arg1;
- (void)_addPhoneCapability:(id)arg1;
- (_Bool)_deviceHasCapability:(id)arg1 forCapabilitiesKey:(id)arg2;
- (_Bool)_watchHasCapability:(id)arg1;
- (_Bool)_phoneHasCapability:(id)arg1;
- (void)_setupNotifiers;
- (void)dispatcherDidReceiveNotificationFromOtherProcess:(id)arg1;
- (void)dispatcherDidReceiveNotificationFromRemoteDevice:(id)arg1;
- (void)endBatchUpdates;
- (void)beginBatchUpdates;
@property(readonly, copy) NSString *description;
- (id)init;
- (id)_associatedObject;
@property(retain, nonatomic) MPMediaPlaylist *assetSyncPlaylist;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

