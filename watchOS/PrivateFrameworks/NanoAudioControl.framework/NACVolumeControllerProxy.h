//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <NanoAudioControl/NACVolumeController-Protocol.h>

@class NACEventThrottler, NACProxyVolumeControlTarget, NACXPCClient, NSNumber, NSOrderedSet, NSString;
@protocol NACVolumeControllerDelegate, OS_dispatch_source;

__attribute__((visibility("hidden")))
@interface NACVolumeControllerProxy : NSObject <NACVolumeController>
{
    NACProxyVolumeControlTarget *_target;
    NACEventThrottler *_volumeThrottler;
    NACEventThrottler *_hapticThrottler;
    NSObject<OS_dispatch_source> *_setVolumeTimer;
    NSObject<OS_dispatch_source> *_setHapticTimer;
    NSObject<OS_dispatch_source> *_setProminentHapticTimer;
    NSObject<OS_dispatch_source> *_setHapticStateTimer;
    NACXPCClient *_xpcClient;
    _Bool _observingVolume;
    float _lastReceivedVolumeValue;
    float _lastRecievedHapticIntensity;
    _Bool _lastReceivedProminentHapticEnabled;
    int _lastReceivedHapticState;
    NSNumber *_volumeValue;
    NSNumber *_hapticIntensity;
    NSOrderedSet *_availableListeningModes;
    NSString *_currentListeningMode;
    _Bool _observingListeningModes;
    _Bool _volumeControlAvailable;
    _Bool _volumeWarningEnabled;
    _Bool _muted;
    _Bool _systemMuted;
    _Bool _prominentHapticEnabled;
    id <NACVolumeControllerDelegate> _delegate;
    int _volumeWarningState;
    float _EUVolumeLimit;
    int _hapticState;
}

- (void).cxx_destruct;
@property(nonatomic) int hapticState; // @synthesize hapticState=_hapticState;
@property(nonatomic, getter=isProminentHapticEnabled) _Bool prominentHapticEnabled; // @synthesize prominentHapticEnabled=_prominentHapticEnabled;
@property(nonatomic, getter=isSystemMuted) _Bool systemMuted; // @synthesize systemMuted=_systemMuted;
@property(readonly, nonatomic) float EUVolumeLimit; // @synthesize EUVolumeLimit=_EUVolumeLimit;
@property(readonly, nonatomic, getter=isMuted) _Bool muted; // @synthesize muted=_muted;
@property(readonly, nonatomic) int volumeWarningState; // @synthesize volumeWarningState=_volumeWarningState;
@property(readonly, nonatomic, getter=isVolumeWarningEnabled) _Bool volumeWarningEnabled; // @synthesize volumeWarningEnabled=_volumeWarningEnabled;
@property(readonly, nonatomic, getter=isVolumeControlAvailable) _Bool volumeControlAvailable; // @synthesize volumeControlAvailable=_volumeControlAvailable;
@property(nonatomic) __weak id <NACVolumeControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)_applicationWillResignActiveNotification:(id)arg1;
- (void)_applicationDidBecomeActiveNotification:(id)arg1;
- (void)_cancelSetHapticStateTimer;
- (void)_cancelSetProminentHapticTimer;
- (void)_cancelSetHapticTimer;
- (void)_cancelSetVolumeTimer;
- (id)_scheduleTimeoutWithBlock:(CDUnknownBlockType)arg1;
- (void)_notifyDelegateHapticStateChanged;
- (void)_notifyDelegateProminentHapticStateChanged;
- (void)_notifyDelegateSystemMutedStateChanged;
- (void)_notifyDelegateHapticChanged;
- (void)_notifyDelegateVolumeChanged;
- (void)_handleFailedToSetCurrentListeningModeNotification:(id)arg1;
- (void)_currentListeningModeDidChange;
- (void)_availableListeningModesDidChange;
- (void)_volumeWarningDidChange;
- (void)_EUVolumeLimitDidChange;
- (void)_systemMutedStateDidChange;
- (void)_hapticStateDidChange;
- (void)_prominentHapticStateDidChange;
- (void)_hapticIntensityDidChange;
- (void)_mutedStateDidChange;
- (void)_volumeControlAvailabilityDidChange;
- (void)_volumeValueDidChange;
@property(retain, nonatomic) NSString *currentListeningMode;
@property(readonly, nonatomic) NSOrderedSet *availableListeningModes;
- (void)allowUserToExceedEUVolumeLimit;
- (void)_hapticStateTimeout;
- (void)_hapticTimeout;
- (void)_setHapticIntensity:(id)arg1;
- (void)_prominentHapticTimeout;
@property(nonatomic) float hapticIntensity;
- (void)endObservingHaptics;
- (void)beginObservingHaptics;
- (void)setMuted:(_Bool)arg1;
- (void)_volumeTimout;
- (void)_setVolumeValue:(id)arg1;
- (void)setVolumeValue:(float)arg1;
@property(readonly, nonatomic) float volumeValue;
- (void)setVolumeValue:(float)arg1 muted:(_Bool)arg2 overrideEULimit:(_Bool)arg3;
- (void)endObservingListeningModes;
- (void)beginObservingListeningModes;
- (void)endObservingVolume;
- (void)beginObservingVolume;
- (void)dealloc;
- (id)initWithVolumeControlTarget:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

