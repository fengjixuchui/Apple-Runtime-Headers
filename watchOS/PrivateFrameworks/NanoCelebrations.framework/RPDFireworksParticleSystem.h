//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class RPDFireworksRenderProgram, RPDTexture;

@interface RPDFireworksParticleSystem : NSObject
{
    unsigned int _vbo;
    unsigned int _vao;
    float _emitterSize;
    float _zClipThreshold;
    float _averageLifespan;
    float _lifespanRandomness;
    float _averageEmissionSpeed;
    float _emissionSpeedRandomness;
    float _averageEmissionSize;
    float _emissionSizeRandomness;
    RPDTexture *_particleTexture;
    RPDTexture *_opacityMap;
    RPDTexture *_scaleMap;
    struct __GLsync *_emissionFence;
    int _maximumParticleCount;
    RPDFireworksRenderProgram *_renderProgram;
    double _startTime;
    double _systemTime;
    struct CGSize _drawableSize;
    // Error parsing type: , name: _emitterPosition
    // Error parsing type: , name: _acceleration
    // Error parsing type: , name: _baseColor
}

- (void).cxx_destruct;
@property(nonatomic) struct CGSize drawableSize; // @synthesize drawableSize=_drawableSize;
@property(retain, nonatomic) RPDFireworksRenderProgram *renderProgram; // @synthesize renderProgram=_renderProgram;
@property(nonatomic) int maximumParticleCount; // @synthesize maximumParticleCount=_maximumParticleCount;
@property(nonatomic) struct __GLsync *emissionFence; // @synthesize emissionFence=_emissionFence;
@property(nonatomic) double systemTime; // @synthesize systemTime=_systemTime;
@property(nonatomic) double startTime; // @synthesize startTime=_startTime;
@property(retain, nonatomic) RPDTexture *scaleMap; // @synthesize scaleMap=_scaleMap;
@property(retain, nonatomic) RPDTexture *opacityMap; // @synthesize opacityMap=_opacityMap;
@property(retain, nonatomic) RPDTexture *particleTexture; // @synthesize particleTexture=_particleTexture;
// Error parsing type for property baseColor:
// Property attributes: T,N,V_baseColor

// Error parsing type for property acceleration:
// Property attributes: T,N,V_acceleration

@property(nonatomic) float emissionSizeRandomness; // @synthesize emissionSizeRandomness=_emissionSizeRandomness;
@property(nonatomic) float averageEmissionSize; // @synthesize averageEmissionSize=_averageEmissionSize;
@property(nonatomic) float emissionSpeedRandomness; // @synthesize emissionSpeedRandomness=_emissionSpeedRandomness;
@property(nonatomic) float averageEmissionSpeed; // @synthesize averageEmissionSpeed=_averageEmissionSpeed;
@property(nonatomic) float lifespanRandomness; // @synthesize lifespanRandomness=_lifespanRandomness;
@property(nonatomic) float averageLifespan; // @synthesize averageLifespan=_averageLifespan;
@property(nonatomic) float zClipThreshold; // @synthesize zClipThreshold=_zClipThreshold;
@property(nonatomic) float emitterSize; // @synthesize emitterSize=_emitterSize;
// Error parsing type for property emitterPosition:
// Property attributes: T,N,V_emitterPosition

- (void)drawWithSize:(struct CGSize)arg1 animationTime:(double)arg2 context:(id)arg3;
- (void)dealloc;
- (void)updateProjectionMatrix:(struct CGSize)arg1;
- (void)setInitialShaderValues;
- (void)generateVertexDataFromParticleData:(id)arg1;
- (id)generateParticleData;
- (id)initWithMaximumParticleCount:(int)arg1 shader:(id)arg2;

@end

