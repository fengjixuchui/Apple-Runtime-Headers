//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <MetalTools/MTLToolsRenderCommandEncoder.h>

@class MTLDepthStencilDescriptor, MTLRenderPassDescriptor;
@protocol MTLDepthStencilState, MTLRenderPipelineState;

@interface MTLDebugRenderCommandEncoder : MTLToolsRenderCommandEncoder
{
    unsigned int _dirtyBits;
    _Bool _openGLModeEnabled;
    CDStruct_c0454aff *_vertexBuiltinArguments;
    struct {
        unsigned int pixelFormat;
        unsigned int sampleCount;
    } _attachmentInfo[10];
    id <MTLRenderPipelineState> _previousRenderPipelineStateWithWritesToImageBlock;
    unsigned int _resolvedRasterSampleCount;
    CDStruct_24aab684 _vertexBuffers[36];
    CDStruct_24aab684 _vertexTextures[96];
    CDStruct_24aab684 _vertexSamplers[16];
    CDStruct_24aab684 _fragmentBuffers[31];
    CDStruct_24aab684 _fragmentTextures[96];
    CDStruct_24aab684 _fragmentSamplers[16];
    CDStruct_24aab684 _tileBuffers[31];
    CDStruct_24aab684 _tileTextures[96];
    CDStruct_24aab684 _tileSamplers[16];
    CDStruct_24aab684 _threadgroupMemoryArguments[31];
    CDStruct_52c93ad5 _limits;
    unsigned int _encoderState;
    unsigned int _unknownStoreActions;
    struct set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>> *_visibilityOffsets;
    vector_9706d78e _viewports;
    vector_dc8a7a87 _scissorRects;
    struct ResourceTrackingDeferredAttachments _deferredAttachments;
    struct deque<id, std::__1::allocator<id>> _updatedFences;
    _Bool _hasValidViewportsAndScissorRects;
    MTLRenderPassDescriptor *_descriptor;
    unsigned int _frontFacingWinding;
    unsigned int _cullMode;
    unsigned int _depthClipMode;
    float _lineWidth;
    float _depthBias;
    float _depthBiasSlopeScale;
    float _depthBiasClamp;
    unsigned int _triangleFillMode;
    id <MTLRenderPipelineState> _renderPipelineState;
    unsigned int _peakPerSampleStorage;
    unsigned int _resolvedSampleCount;
    id <MTLDepthStencilState> _depthStencilState;
    MTLDepthStencilDescriptor *_defaultDepthStencilDescriptor;
    unsigned int _frontStencilRef;
    unsigned int _backStencilRef;
    unsigned int _visibilityResultMode;
    unsigned int _visibilityResultOffset;
    float _blendColorRed;
    float _blendColorGreen;
    float _blendColorBlue;
    float _blendColorAlpha;
    unsigned int _width;
    unsigned int _height;
    unsigned int _tessellationFactorBufferInstanceStride;
    float _tessellationFactorScale;
    CDStruct_24aab684 _tessellationFactorBufferArgument;
}

- (id).cxx_construct;
- (void).cxx_destruct;
@property(readonly, nonatomic) float tessellationFactorScale; // @synthesize tessellationFactorScale=_tessellationFactorScale;
@property(readonly, nonatomic) unsigned int tessellationFactorBufferInstanceStride; // @synthesize tessellationFactorBufferInstanceStride=_tessellationFactorBufferInstanceStride;
@property(readonly, nonatomic) CDStruct_24aab684 tessellationFactorBufferArgument; // @synthesize tessellationFactorBufferArgument=_tessellationFactorBufferArgument;
@property(readonly) unsigned int height; // @synthesize height=_height;
@property(readonly) unsigned int width; // @synthesize width=_width;
@property(readonly, nonatomic) float blendColorAlpha; // @synthesize blendColorAlpha=_blendColorAlpha;
@property(readonly, nonatomic) float blendColorBlue; // @synthesize blendColorBlue=_blendColorBlue;
@property(readonly, nonatomic) float blendColorGreen; // @synthesize blendColorGreen=_blendColorGreen;
@property(readonly, nonatomic) float blendColorRed; // @synthesize blendColorRed=_blendColorRed;
@property(readonly, nonatomic) unsigned int visibilityResultOffset; // @synthesize visibilityResultOffset=_visibilityResultOffset;
@property(readonly, nonatomic) unsigned int visibilityResultMode; // @synthesize visibilityResultMode=_visibilityResultMode;
@property(readonly, nonatomic) unsigned int backStencilRef; // @synthesize backStencilRef=_backStencilRef;
@property(readonly, nonatomic) unsigned int frontStencilRef; // @synthesize frontStencilRef=_frontStencilRef;
@property(readonly, nonatomic) MTLDepthStencilDescriptor *defaultDepthStencilDescriptor; // @synthesize defaultDepthStencilDescriptor=_defaultDepthStencilDescriptor;
@property(readonly, nonatomic) id <MTLDepthStencilState> depthStencilState; // @synthesize depthStencilState=_depthStencilState;
@property(readonly, nonatomic) unsigned int resolvedSampleCount; // @synthesize resolvedSampleCount=_resolvedSampleCount;
@property(readonly, nonatomic) unsigned int peakPerSampleStorage; // @synthesize peakPerSampleStorage=_peakPerSampleStorage;
@property(readonly, nonatomic) id <MTLRenderPipelineState> renderPipelineState; // @synthesize renderPipelineState=_renderPipelineState;
@property(readonly, nonatomic) unsigned int triangleFillMode; // @synthesize triangleFillMode=_triangleFillMode;
@property(readonly, nonatomic) float depthBiasClamp; // @synthesize depthBiasClamp=_depthBiasClamp;
@property(readonly, nonatomic) float depthBiasSlopeScale; // @synthesize depthBiasSlopeScale=_depthBiasSlopeScale;
@property(readonly, nonatomic) float depthBias; // @synthesize depthBias=_depthBias;
@property(readonly, nonatomic) float lineWidth; // @synthesize lineWidth=_lineWidth;
@property(readonly, nonatomic) unsigned int depthClipMode; // @synthesize depthClipMode=_depthClipMode;
@property(readonly, nonatomic) unsigned int cullMode; // @synthesize cullMode=_cullMode;
@property(readonly, nonatomic) unsigned int frontFacingWinding; // @synthesize frontFacingWinding=_frontFacingWinding;
@property(readonly, copy, nonatomic) MTLRenderPassDescriptor *descriptor; // @synthesize descriptor=_descriptor;
- (void)executeCommandsInBuffer:(id)arg1 indirectBuffer:(id)arg2 indirectBufferOffset:(unsigned int)arg3;
- (void)executeCommandsInBuffer:(id)arg1 withRange:(struct _NSRange)arg2;
- (void)memoryBarrierWithResources:(const id *)arg1 count:(unsigned int)arg2 afterStages:(unsigned int)arg3 beforeStages:(unsigned int)arg4;
- (void)memoryBarrierWithScope:(unsigned int)arg1 afterStages:(unsigned int)arg2 beforeStages:(unsigned int)arg3;
- (void)_resourceTrackingRecordDispatchAccesses;
- (void)filterCounterRangeWithFirstBatch:(unsigned int)arg1 lastBatch:(unsigned int)arg2 filterIndex:(unsigned int)arg3;
- (void)_resourceTrackingRecordBoundResourceAccesses;
- (void)_resourceTrackingRecordRenderTargetAccessesForEndEncoding:(_Bool)arg1;
- (void)_resourceTrackingRecordDrawAccesses;
- (void)drawIndexedPatches:(unsigned int)arg1 patchIndexBuffer:(id)arg2 patchIndexBufferOffset:(unsigned int)arg3 controlPointIndexBuffer:(id)arg4 controlPointIndexBufferOffset:(unsigned int)arg5 indirectBuffer:(id)arg6 indirectBufferOffset:(unsigned int)arg7;
- (void)drawIndexedPatches:(unsigned int)arg1 patchStart:(unsigned int)arg2 patchCount:(unsigned int)arg3 patchIndexBuffer:(id)arg4 patchIndexBufferOffset:(unsigned int)arg5 controlPointIndexBuffer:(id)arg6 controlPointIndexBufferOffset:(unsigned int)arg7 instanceCount:(unsigned int)arg8 baseInstance:(unsigned int)arg9;
- (void)drawPatches:(unsigned int)arg1 patchIndexBuffer:(id)arg2 patchIndexBufferOffset:(unsigned int)arg3 indirectBuffer:(id)arg4 indirectBufferOffset:(unsigned int)arg5;
- (void)drawPatches:(unsigned int)arg1 patchStart:(unsigned int)arg2 patchCount:(unsigned int)arg3 patchIndexBuffer:(id)arg4 patchIndexBufferOffset:(unsigned int)arg5 instanceCount:(unsigned int)arg6 baseInstance:(unsigned int)arg7;
- (void)setTessellationFactorScale:(float)arg1;
- (void)setTessellationFactorBuffer:(id)arg1 offset:(unsigned int)arg2 instanceStride:(unsigned int)arg3;
- (void)endEncoding;
- (void)waitForFence:(id)arg1 beforeStages:(unsigned int)arg2;
- (void)updateFence:(id)arg1 afterStages:(unsigned int)arg2;
- (void)drawIndexedPrimitives:(unsigned int)arg1 indexType:(unsigned int)arg2 indexBuffer:(id)arg3 indexBufferOffset:(unsigned int)arg4 indirectBuffer:(id)arg5 indirectBufferOffset:(unsigned int)arg6;
- (void)drawPrimitives:(unsigned int)arg1 indirectBuffer:(id)arg2 indirectBufferOffset:(unsigned int)arg3;
- (void)drawIndexedPrimitives:(unsigned int)arg1 indexCount:(unsigned int)arg2 indexType:(unsigned int)arg3 indexBuffer:(id)arg4 indexBufferOffset:(unsigned int)arg5 instanceCount:(unsigned int)arg6 baseVertex:(int)arg7 baseInstance:(unsigned int)arg8;
- (void)drawPrimitives:(unsigned int)arg1 vertexStart:(unsigned int)arg2 vertexCount:(unsigned int)arg3 instanceCount:(unsigned int)arg4 baseInstance:(unsigned int)arg5;
- (void)drawIndexedPrimitives:(unsigned int)arg1 indexCount:(unsigned int)arg2 indexType:(unsigned int)arg3 indexBuffer:(id)arg4 indexBufferOffset:(unsigned int)arg5;
- (void)drawIndexedPrimitives:(unsigned int)arg1 indexCount:(unsigned int)arg2 indexType:(unsigned int)arg3 indexBuffer:(id)arg4 indexBufferOffset:(unsigned int)arg5 instanceCount:(unsigned int)arg6;
- (void)validateDrawIndexedPrimitives:(unsigned int)arg1 indexCount:(unsigned int)arg2 indexType:(unsigned int)arg3 indexBuffer:(id)arg4 indexBufferOffset:(unsigned int)arg5 instanceCount:(unsigned int)arg6 function:(const char *)arg7;
- (void)drawPrimitives:(unsigned int)arg1 vertexStart:(unsigned int)arg2 vertexCount:(unsigned int)arg3;
- (void)drawPrimitives:(unsigned int)arg1 vertexStart:(unsigned int)arg2 vertexCount:(unsigned int)arg3 instanceCount:(unsigned int)arg4;
- (void)validateDrawPrimitives:(unsigned int)arg1 vertexStart:(unsigned int)arg2 vertexCount:(unsigned int)arg3 instanceCount:(unsigned int)arg4 function:(const char *)arg5;
- (void)_validateAllFunctionArguments;
- (void)validateCommonDrawErrors:(unsigned int)arg1 instanceCount:(unsigned int)arg2 baseInstance:(unsigned int)arg3 maxVertexID:(unsigned int)arg4;
- (void)updatePipelineData;
- (void)setStencilResolveTexture:(id)arg1 slice:(unsigned int)arg2 depthPlane:(unsigned int)arg3 level:(unsigned int)arg4 yInvert:(_Bool)arg5;
- (void)setStencilResolveTexture:(id)arg1 slice:(unsigned int)arg2 depthPlane:(unsigned int)arg3 level:(unsigned int)arg4;
- (void)setDepthResolveTexture:(id)arg1 slice:(unsigned int)arg2 depthPlane:(unsigned int)arg3 level:(unsigned int)arg4 yInvert:(_Bool)arg5;
- (void)setDepthResolveTexture:(id)arg1 slice:(unsigned int)arg2 depthPlane:(unsigned int)arg3 level:(unsigned int)arg4;
- (void)setColorResolveTexture:(id)arg1 slice:(unsigned int)arg2 depthPlane:(unsigned int)arg3 level:(unsigned int)arg4 yInvert:(_Bool)arg5 atIndex:(unsigned int)arg6;
- (void)setColorResolveTexture:(id)arg1 slice:(unsigned int)arg2 depthPlane:(unsigned int)arg3 level:(unsigned int)arg4 atIndex:(unsigned int)arg5;
- (void)setBlendColorRed:(float)arg1 green:(float)arg2 blue:(float)arg3 alpha:(float)arg4;
- (void)setVisibilityResultMode:(unsigned int)arg1 offset:(unsigned int)arg2;
- (void)setStencilStoreActionOptions:(unsigned int)arg1;
- (void)setDepthStoreActionOptions:(unsigned int)arg1;
- (void)setColorStoreActionOptions:(unsigned int)arg1 atIndex:(unsigned int)arg2;
- (void)setStencilStoreAction:(unsigned int)arg1;
- (void)setDepthStoreAction:(unsigned int)arg1;
- (void)setColorStoreAction:(unsigned int)arg1 atIndex:(unsigned int)arg2;
- (void)setStencilFrontReferenceValue:(unsigned int)arg1 backReferenceValue:(unsigned int)arg2;
- (void)setStencilReferenceValue:(unsigned int)arg1;
- (void)setDepthStencilState:(id)arg1;
- (void)setTriangleFillMode:(unsigned int)arg1;
- (void)setTriangleFrontFillMode:(unsigned int)arg1 backFillMode:(unsigned int)arg2;
- (void)setTransformFeedbackState:(unsigned int)arg1;
- (void)setScissorRects:(const CDStruct_0a4f9365 *)arg1 count:(unsigned int)arg2;
- (void)setScissorRect:(CDStruct_0a4f9365)arg1;
- (void)setDepthBias:(float)arg1 slopeScale:(float)arg2 clamp:(float)arg3;
- (void)setLineWidth:(float)arg1;
- (void)setDepthClipMode:(unsigned int)arg1;
- (void)setCullMode:(unsigned int)arg1;
- (void)setFrontFacingWinding:(unsigned int)arg1;
- (void)setViewports:(const CDStruct_8727d297 *)arg1 count:(unsigned int)arg2;
- (void)setViewport:(CDStruct_8727d297)arg1;
- (void)useHeaps:(const id *)arg1 count:(unsigned int)arg2 stages:(unsigned int)arg3;
- (void)useHeaps:(const id *)arg1 count:(unsigned int)arg2;
- (void)useHeap:(id)arg1 stages:(unsigned int)arg2;
- (void)useHeap:(id)arg1;
- (void)useResources:(const id *)arg1 count:(unsigned int)arg2 usage:(unsigned int)arg3 stages:(unsigned int)arg4;
- (void)useResources:(const id *)arg1 count:(unsigned int)arg2 usage:(unsigned int)arg3;
- (void)useResource:(id)arg1 usage:(unsigned int)arg2 stages:(unsigned int)arg3;
- (void)useResource:(id)arg1 usage:(unsigned int)arg2;
- (void)setThreadgroupMemoryLength:(unsigned int)arg1 offset:(unsigned int)arg2 atIndex:(unsigned int)arg3;
- (void)dispatchThreadsPerTile:(CDStruct_32a7f38a)arg1;
- (void)setTileSamplerStates:(const id *)arg1 lodMinClamps:(const float *)arg2 lodMaxClamps:(const float *)arg3 withRange:(struct _NSRange)arg4;
- (void)setTileSamplerState:(id)arg1 lodMinClamp:(float)arg2 lodMaxClamp:(float)arg3 atIndex:(unsigned int)arg4;
- (void)setTileSamplerStates:(const id *)arg1 withRange:(struct _NSRange)arg2;
- (void)setTileSamplerState:(id)arg1 atIndex:(unsigned int)arg2;
- (void)setTileTextures:(const id *)arg1 withRange:(struct _NSRange)arg2;
- (void)setTileTexture:(id)arg1 atIndex:(unsigned int)arg2;
- (void)setTileBuffers:(const id *)arg1 offsets:(const unsigned int *)arg2 withRange:(struct _NSRange)arg3;
- (void)setTileBufferOffset:(unsigned int)arg1 atIndex:(unsigned int)arg2;
- (void)setTileBuffer:(id)arg1 offset:(unsigned int)arg2 atIndex:(unsigned int)arg3;
- (void)setTileBytes:(const void *)arg1 length:(unsigned int)arg2 atIndex:(unsigned int)arg3;
- (void)setFragmentTexture:(id)arg1 atTextureIndex:(unsigned int)arg2 samplerState:(id)arg3 atSamplerIndex:(unsigned int)arg4;
- (void)setFragmentSamplerStates:(const id *)arg1 lodMinClamps:(const float *)arg2 lodMaxClamps:(const float *)arg3 withRange:(struct _NSRange)arg4;
- (void)setFragmentSamplerState:(id)arg1 lodMinClamp:(float)arg2 lodMaxClamp:(float)arg3 lodBias:(float)arg4 atIndex:(unsigned int)arg5;
- (void)setFragmentSamplerState:(id)arg1 lodMinClamp:(float)arg2 lodMaxClamp:(float)arg3 atIndex:(unsigned int)arg4;
- (void)setFragmentSamplerStates:(const id *)arg1 withRange:(struct _NSRange)arg2;
- (void)setFragmentSamplerState:(id)arg1 atIndex:(unsigned int)arg2;
- (void)setFragmentTextures:(const id *)arg1 withRange:(struct _NSRange)arg2;
- (void)setFragmentTexture:(id)arg1 atIndex:(unsigned int)arg2;
- (void)setFragmentBuffers:(const id *)arg1 offsets:(const unsigned int *)arg2 withRange:(struct _NSRange)arg3;
- (void)setFragmentBufferOffset:(unsigned int)arg1 atIndex:(unsigned int)arg2;
- (void)setFragmentBuffer:(id)arg1 offset:(unsigned int)arg2 atIndex:(unsigned int)arg3;
- (void)setFragmentBytes:(const void *)arg1 length:(unsigned int)arg2 atIndex:(unsigned int)arg3;
- (void)setVertexSamplerStates:(const id *)arg1 lodMinClamps:(const float *)arg2 lodMaxClamps:(const float *)arg3 withRange:(struct _NSRange)arg4;
- (void)setVertexSamplerState:(id)arg1 lodMinClamp:(float)arg2 lodMaxClamp:(float)arg3 lodBias:(float)arg4 atIndex:(unsigned int)arg5;
- (void)setVertexSamplerState:(id)arg1 lodMinClamp:(float)arg2 lodMaxClamp:(float)arg3 atIndex:(unsigned int)arg4;
- (void)setVertexSamplerStates:(const id *)arg1 withRange:(struct _NSRange)arg2;
- (void)setVertexSamplerState:(id)arg1 atIndex:(unsigned int)arg2;
- (void)setVertexTextures:(const id *)arg1 withRange:(struct _NSRange)arg2;
- (void)setVertexTexture:(id)arg1 atIndex:(unsigned int)arg2;
- (void)setVertexBuffers:(const id *)arg1 offsets:(const unsigned int *)arg2 withRange:(struct _NSRange)arg3;
- (void)setVertexBufferOffset:(unsigned int)arg1 atIndex:(unsigned int)arg2;
- (void)setVertexBuffer:(id)arg1 offset:(unsigned int)arg2 atIndex:(unsigned int)arg3;
- (void)setVertexBytes:(const void *)arg1 length:(unsigned int)arg2 atIndex:(unsigned int)arg3;
- (void)setRenderPipelineState:(id)arg1;
- (void)validateFramebufferWithRenderPipelineState:(id)arg1;
- (id)description;
- (id)formattedDescription:(unsigned int)arg1;
- (void)dealloc;
- (id)initWithRenderCommandEncoder:(id)arg1 parent:(id)arg2 descriptor:(id)arg3;
- (void)_setDefaults;
- (void)enumerateThreadgroupMemoryUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateTileSamplersUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateTileTexturesUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateTileBuffersUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateFragmentSamplersUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateFragmentTexturesUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateFragmentBuffersUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateVertexSamplersUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateVertexTexturesUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateVertexBuffersUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) CDStruct_0a4f9365 scissorRect;
@property(readonly, nonatomic) CDStruct_8727d297 viewport;
@property(readonly, nonatomic) vector_dc8a7a87 *scissorRects;
@property(readonly, nonatomic) vector_9706d78e *viewports;

@end

