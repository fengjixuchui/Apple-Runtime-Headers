//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <NanoTimeKit/NTKFaceViewComplicationFactory-Protocol.h>

@class CLKDevice, CLKFont, NSString, NTKFaceView;
@protocol NTKUtilityComplicationFactoryDelegate, NTKUtilityFlatComplicationViewDelegate;

@interface NTKUtilityComplicationFactory : NSObject <NTKFaceViewComplicationFactory>
{
    _Bool _accommodatesTwoTopComplications;
    CLKDevice *_device;
    id <NTKUtilityComplicationFactoryDelegate> _delegate;
    float _normalSidePadding;
    float _normalVerticalPadding;
    float _deselectedKeylineSideInnerPadding;
    float _deselectedKeylineVerticalInnerPadding;
    float _deselectedKeylineCircularInnerPadding;
    float _selectedKeylineSideInnerPadding;
    float _selectedKeylineVerticalInnerContentSpacer;
    float _selectedKeylineHeight;
    float _foregroundAlpha;
    float _foregroundImageAlpha;
    float _maxNormalLongWidth;
    float _crownIndicatorGap;
    CLKFont *_topBezelLabelFont;
    float _bezelLabelMaxWidthInDegree;
    float _bezelLabelTopPadding;
    float _bezelKeylineInnerCircleOffset;
    float _dialDiameter;
    NTKFaceView<NTKUtilityFlatComplicationViewDelegate> *_faceView;
    float _dateKeylineMaxWidth;
    float _dateHorizontalCenterOffset;
    float _dateVerticalCenterOffset;
    int _bottomCenterLayout;
    struct CGSize _normalCircularPadding;
    struct UIEdgeInsets _screenEdgeInsets;
}

+ (void)curvedCircleRadius:(float *)arg1 centerAngle:(float *)arg2 maxAngularWidth:(float *)arg3 circleCenter:(struct CGPoint *)arg4 interior:(_Bool *)arg5 forSlot:(int)arg6 forDevice:(id)arg7;
+ (unsigned int)placementForSlot:(int)arg1;
- (void).cxx_destruct;
@property(nonatomic) int bottomCenterLayout; // @synthesize bottomCenterLayout=_bottomCenterLayout;
@property(nonatomic) float dateVerticalCenterOffset; // @synthesize dateVerticalCenterOffset=_dateVerticalCenterOffset;
@property(nonatomic) float dateHorizontalCenterOffset; // @synthesize dateHorizontalCenterOffset=_dateHorizontalCenterOffset;
@property(nonatomic) float dateKeylineMaxWidth; // @synthesize dateKeylineMaxWidth=_dateKeylineMaxWidth;
@property(nonatomic) __weak NTKFaceView<NTKUtilityFlatComplicationViewDelegate> *faceView; // @synthesize faceView=_faceView;
@property(nonatomic) float dialDiameter; // @synthesize dialDiameter=_dialDiameter;
@property(nonatomic) float bezelKeylineInnerCircleOffset; // @synthesize bezelKeylineInnerCircleOffset=_bezelKeylineInnerCircleOffset;
@property(nonatomic) float bezelLabelTopPadding; // @synthesize bezelLabelTopPadding=_bezelLabelTopPadding;
@property(nonatomic) float bezelLabelMaxWidthInDegree; // @synthesize bezelLabelMaxWidthInDegree=_bezelLabelMaxWidthInDegree;
@property(retain, nonatomic) CLKFont *topBezelLabelFont; // @synthesize topBezelLabelFont=_topBezelLabelFont;
@property(nonatomic) float crownIndicatorGap; // @synthesize crownIndicatorGap=_crownIndicatorGap;
@property(nonatomic) struct UIEdgeInsets screenEdgeInsets; // @synthesize screenEdgeInsets=_screenEdgeInsets;
@property(nonatomic) float maxNormalLongWidth; // @synthesize maxNormalLongWidth=_maxNormalLongWidth;
@property(nonatomic) float foregroundImageAlpha; // @synthesize foregroundImageAlpha=_foregroundImageAlpha;
@property(nonatomic) float foregroundAlpha; // @synthesize foregroundAlpha=_foregroundAlpha;
@property(nonatomic) float selectedKeylineHeight; // @synthesize selectedKeylineHeight=_selectedKeylineHeight;
@property(nonatomic) float selectedKeylineVerticalInnerContentSpacer; // @synthesize selectedKeylineVerticalInnerContentSpacer=_selectedKeylineVerticalInnerContentSpacer;
@property(nonatomic) float selectedKeylineSideInnerPadding; // @synthesize selectedKeylineSideInnerPadding=_selectedKeylineSideInnerPadding;
@property(nonatomic) float deselectedKeylineCircularInnerPadding; // @synthesize deselectedKeylineCircularInnerPadding=_deselectedKeylineCircularInnerPadding;
@property(nonatomic) float deselectedKeylineVerticalInnerPadding; // @synthesize deselectedKeylineVerticalInnerPadding=_deselectedKeylineVerticalInnerPadding;
@property(nonatomic) float deselectedKeylineSideInnerPadding; // @synthesize deselectedKeylineSideInnerPadding=_deselectedKeylineSideInnerPadding;
@property(nonatomic) struct CGSize normalCircularPadding; // @synthesize normalCircularPadding=_normalCircularPadding;
@property(nonatomic) float normalVerticalPadding; // @synthesize normalVerticalPadding=_normalVerticalPadding;
@property(nonatomic) float normalSidePadding; // @synthesize normalSidePadding=_normalSidePadding;
@property(nonatomic) _Bool accommodatesTwoTopComplications; // @synthesize accommodatesTwoTopComplications=_accommodatesTwoTopComplications;
@property(nonatomic) __weak id <NTKUtilityComplicationFactoryDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) CLKDevice *device; // @synthesize device=_device;
- (int)_utilitySlotForSlot:(id)arg1;
- (id)newLegacyViewForComplication:(id)arg1 family:(int)arg2 slot:(id)arg3;
- (void)loadLayoutRules;
- (void)curvedComplicationCircleRadius:(float *)arg1 centerAngle:(float *)arg2 maxAngularWidth:(float *)arg3 circleCenter:(struct CGPoint *)arg4 interior:(_Bool *)arg5 forSlot:(id)arg6;
- (_Bool)slotSupportsCurvedText:(id)arg1;
- (int)legacyLayoutOverrideforComplicationType:(unsigned int)arg1 slot:(id)arg2;
- (id)keylineViewForComplicationSlot:(id)arg1;
- (unsigned int)keylineLabelAlignmentForComplicationSlot:(id)arg1;
- (id)pickerMaskForSlot:(id)arg1;
- (void)configureComplicationView:(id)arg1 forSlot:(id)arg2;
- (int)complicationPickerStyleForSlot:(id)arg1;
- (float)_maxWidthForKeylineAndPadding;
- (float)maxDateWidthLeavingRoomForKeylines;
- (float)_maxDateWidthLeavingRoomForKeylines;
- (float)_maxBottomCenterWidthLeavingRoomForKeylines:(struct CGRect)arg1;
- (float)_maxBottomCornerWidthLeavingRoomForKeylines:(struct CGRect)arg1;
- (float)_maxTopCornerWidthLeavingRoomForKeylines:(struct CGRect)arg1;
- (void)_configureLayout:(id)arg1 withNormalSize:(struct CGSize)arg2 editingSize:(struct CGSize)arg3 variant:(_Bool)arg4 addCircleOverrides:(_Bool)arg5 makeRuleBlock:(CDUnknownBlockType)arg6;
- (void)_configureUpNextTopRightLayout:(id)arg1 withBounds:(struct CGRect)arg2;
- (void)_configureBottomRightLongLayout:(id)arg1 withBounds:(struct CGRect)arg2;
- (void)_configureBottomRightBelowLayout:(id)arg1 withBounds:(struct CGRect)arg2;
- (void)_configureBottomRightAboveLayout:(id)arg1 withBounds:(struct CGRect)arg2;
- (void)_configureTopRightBelowLayout:(id)arg1 withBounds:(struct CGRect)arg2;
- (void)_configureTopRightAboveLayout:(id)arg1 withBounds:(struct CGRect)arg2;
- (void)_configureDateLayout:(id)arg1 withBounds:(struct CGRect)arg2;
- (void)_configureBottomCenterLayout:(id)arg1 withBounds:(struct CGRect)arg2 variant:(_Bool)arg3;
- (void)_configureTopBezelLayout:(id)arg1 withBounds:(struct CGRect)arg2 dialDiameter:(float)arg3;
- (void)_configureBottomRightLayout:(id)arg1 withBounds:(struct CGRect)arg2 variant:(_Bool)arg3;
- (void)_configureBottomLeftLayout:(id)arg1 withBounds:(struct CGRect)arg2 variant:(_Bool)arg3;
- (void)_configureTopRightLayout:(id)arg1 withBounds:(struct CGRect)arg2 variant:(_Bool)arg3;
- (void)_configureTopLeftLayout:(id)arg1 withBounds:(struct CGRect)arg2 variant:(_Bool)arg3;
- (id)_viewForDateComplication:(id)arg1;
- (float)foregroundImageAlphaForTransitionFraction:(float)arg1 fromEditMode:(int)arg2 toEditMode:(int)arg3;
- (float)foregroundImageAlphaForEditing:(_Bool)arg1;
- (float)foregroundAlphaForTransitionFraction:(float)arg1 fromEditMode:(int)arg2 toEditMode:(int)arg3;
- (float)foregroundAlphaForEditing:(_Bool)arg1;
- (id)curvedMaskForSlot:(int)arg1;
- (unsigned int)keylineLabelAlignmentForSlot:(int)arg1;
- (float)keylineCornerRadiusForSlot:(int)arg1;
- (id)keylineViewForSlot:(int)arg1 dialDiameter:(float)arg2;
- (id)keylineViewForSlot:(int)arg1;
- (id)_curvedImageForSlot:(int)arg1 filled:(_Bool)arg2;
- (id)_curvedMaskImageForSlot:(int)arg1;
- (id)_curvedKeylineImageForSlot:(int)arg1;
- (void)configureComplicationLayout:(id)arg1 forSlot:(int)arg2 bounds:(struct CGRect)arg3 dialDiameter:(float)arg4;
- (void)configureComplicationLayout:(id)arg1 forSlot:(int)arg2 withBounds:(struct CGRect)arg3;
- (float)bezelComplicationMaxAngularWidth;
- (float)bezelComplicationRadiusWithDialDiameter:(float)arg1;
- (void)configureComplicationView:(id)arg1 forSlot:(id)arg2 dialDiameter:(float)arg3;
- (id)newViewForComplication:(id)arg1 family:(int)arg2 forSlot:(int)arg3;
- (int)layoutOverrideForComplicationType:(unsigned int)arg1 inSlot:(int)arg2;
- (id)initForDevice:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

