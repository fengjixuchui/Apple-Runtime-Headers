//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import <NanoTimeKit/CLKSensitiveUIStateObserver-Protocol.h>
#import <NanoTimeKit/CSLPIButtonHandlerProtocol-Protocol.h>
#import <NanoTimeKit/CSLSAOTModeProvider-Protocol.h>
#import <NanoTimeKit/CSLSScreenWakeProvider-Protocol.h>
#import <NanoTimeKit/NCEClockCelebrationViewControllerDelegate-Protocol.h>
#import <NanoTimeKit/NPTOUserPhotoFaceServerDelegateProtocol-Protocol.h>
#import <NanoTimeKit/NTKClockStatusBarViewControllerStatusObserver-Protocol.h>
#import <NanoTimeKit/NTKClockViewDelegate-Protocol.h>
#import <NanoTimeKit/NTKClockWakeControllerProvider-Protocol.h>
#import <NanoTimeKit/NTKFaceCollectionObserver-Protocol.h>
#import <NanoTimeKit/NTKFaceLibraryViewControllerDelegate-Protocol.h>
#import <NanoTimeKit/NTKFaceObserver-Protocol.h>
#import <NanoTimeKit/NTKFaceViewControllerDelegate-Protocol.h>
#import <NanoTimeKit/NTKTritiumAnimationControllerDelegate-Protocol.h>
#import <NanoTimeKit/NTKTritiumToolControllerDelegate-Protocol.h>
#import <NanoTimeKit/NTKTritiumViewControllerDelegate-Protocol.h>
#import <NanoTimeKit/ORBTapGestureRecognizerDelegate-Protocol.h>
#import <NanoTimeKit/UIGestureRecognizerDelegate-Protocol.h>

@class CSLPITimer, NCEClockCelebrationViewController, NSLock, NSSet, NSString, NSTimer, NTKAggdReporter, NTKComplicationLocationManager, NTKFaceLibraryViewController, NTKFaceSnapshotClient, NTKFaceViewController, NTKPersistentFaceCollection, NTKTransientFaceCollection, NTKTritiumAnimationController, NTKTritiumToolController, NTKTritiumViewController, NTKTritiumWakeController, NTKUpNextUseMonitor, ORBAnimator, ORBTapGestureRecognizer, PPTNTKBlankFaceCollection, UILongPressGestureRecognizer, UITapGestureRecognizer, UIView;
@protocol CSLSFlipbookFrameCoordinator, CSLSScreenWakeProviderDelegate, NTKClockWakeController, NTKTritiumAnimationControllerViewProvider;

@interface NTKClockViewController : UIViewController <NTKClockViewDelegate, NTKFaceViewControllerDelegate, NTKFaceLibraryViewControllerDelegate, ORBTapGestureRecognizerDelegate, CSLPIButtonHandlerProtocol, UIGestureRecognizerDelegate, NPTOUserPhotoFaceServerDelegateProtocol, NTKFaceCollectionObserver, CLKSensitiveUIStateObserver, NCEClockCelebrationViewControllerDelegate, CSLSScreenWakeProvider, NTKClockStatusBarViewControllerStatusObserver, NTKClockWakeControllerProvider, NTKFaceObserver, CSLSAOTModeProvider, NTKTritiumToolControllerDelegate, NTKTritiumViewControllerDelegate, NTKTritiumAnimationControllerDelegate>
{
    Class _statusBarViewControllerClass;
    NTKPersistentFaceCollection *_libraryFaceCollection;
    NTKPersistentFaceCollection *_addableFaceCollection;
    NTKTransientFaceCollection *_fallbackLibraryFaceCollection;
    PPTNTKBlankFaceCollection *_pptBlankFaceCollection;
    _Bool _showsPPTBlankFaceCollection;
    NTKFaceSnapshotClient *_snapshotClient;
    NTKFaceViewController *_faceViewController;
    _Bool _faceViewControllerIsBorrowed;
    NTKFaceViewController *_borrowedFaceViewController;
    _Bool _pendingRecreateFaceContentAfterBorrowing;
    NTKFaceLibraryViewController *_libraryViewController;
    _Bool _libraryViewIsPresented;
    ORBTapGestureRecognizer *_orbRecognizer;
    ORBAnimator *_orbAnimator;
    _Bool _orbZoomActive;
    UILongPressGestureRecognizer *_speakTimeGestureRecognizer;
    UITapGestureRecognizer *_cancelSpeakTimeGestureRecognizer;
    _Bool _haveLoadedView;
    _Bool _haveFinishedLoadingView;
    CSLPITimer *_complicationRefreshTimer;
    NTKAggdReporter *_aggdReporter;
    NSTimer *_libraryTimeoutTimer;
    NCEClockCelebrationViewController *_celebrationViewController;
    NTKComplicationLocationManager *_complicationLocationManager;
    _Bool _needsEvaluatePrideAvailable;
    NTKUpNextUseMonitor *_upNextUseMonitor;
    UIView *_contentView;
    NTKTritiumAnimationController *_tritiumAnimationController;
    NTKTritiumViewController *_tritiumViewController;
    NTKTritiumToolController *_tritiumToolController;
    id <CSLSFlipbookFrameCoordinator> _frameCoordinator;
    NTKTritiumWakeController *_tritiumWakeController;
    _Bool _tritiumVisibleBeforeFaceChange;
    _Bool _tritiumIsDismissingLibrary;
    NSTimer *_tritiumTouchOverlayDelayTimer;
    id <NTKClockWakeController> _normalWakeController;
    _Bool _finishedLoading;
    NSLock *_finishedLoadingLock;
    _Bool _lockScreenBorrowed;
    NSSet *_pauseReasons;
}

- (void).cxx_destruct;
@property(nonatomic, getter=isLockScreenBorrowed) _Bool lockScreenBorrowed; // @synthesize lockScreenBorrowed=_lockScreenBorrowed;
@property(copy, nonatomic) NSSet *pauseReasons; // @synthesize pauseReasons=_pauseReasons;
- (void)tritiumAnimationController:(id)arg1 cleanupAfterTritiumTransitionAnimated:(_Bool)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (_Bool)tritiumAnimationController:(id)arg1 prepareForTransitionToTritiumOnAnimated:(_Bool)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (void)faceConfigurationsDidChangeInTritiumViewController:(id)arg1;
- (void)invalidateFramesInTritiumViewController:(id)arg1 withReason:(id)arg2;
- (void)tritium_cancelTouchOverlayAnimationWithFlags:(unsigned int)arg1;
- (_Bool)tritium_playTouchOverlayAnimationWithContinueBlock:(CDUnknownBlockType)arg1;
- (void)tritium_handleSelectedFaceViewOrFaceConfigurationsDidChange;
- (void)tritium_handleSelectedFaceViewDidChange;
- (void)tritium_handleSelectedFaceViewWillChange;
@property(readonly) _Bool wake_canPerformWristRaiseAnimation;
@property(readonly, nonatomic) NTKFaceViewController *wake_faceViewController;
@property(readonly, nonatomic) UIView *wake_clockContentView;
@property(readonly, nonatomic) UIViewController<NTKTritiumAnimationControllerViewProvider> *wake_viewProvider;
@property(readonly, nonatomic) id <CSLSFlipbookFrameCoordinator> wake_frameCoordinator;
@property(readonly, nonatomic) NTKTritiumAnimationController *wake_tritiumAnimationController;
@property(readonly, nonatomic) NTKTritiumViewController *wake_tritiumViewController;
- (struct CGRect)launchRectForComplicationApplicationIdentifier:(id)arg1;
- (void)_handleDeviceLockChange;
- (void)_preloadAddableFacesWithCompletion:(CDUnknownBlockType)arg1;
- (void)_handleTimeOffsetChange;
- (void)_significantTimeChangeNotification;
- (void)_localeDidChangeNotification;
- (void)faceCollectionDidLoad:(id)arg1;
- (void)faceCollection:(id)arg1 didSelectFace:(id)arg2 atIndex:(unsigned int)arg3;
- (void)faceCollection:(id)arg1 didRemoveFace:(id)arg2 atIndex:(unsigned int)arg3;
- (void)faceCollection:(id)arg1 didAddFace:(id)arg2 atIndex:(unsigned int)arg3;
- (void)faceConfigurationDidChange:(id)arg1;
- (void)statusBarDidChange;
- (id)aotBrightnessCurve;
- (id)aotViewController;
- (_Bool)createNewCustomPhotoFaceFromFaceStyle:(int)arg1 andPath:(id)arg2;
- (_Bool)createNewKaleidoscopeFaceFromPath:(id)arg1;
- (_Bool)createNewUserPhotoFaceFromPath:(id)arg1;
- (void)clockFaceCountCurrent:(unsigned int *)arg1 max:(unsigned int *)arg2;
- (id)userPhotoFaceDirectory;
- (void)PPTCleanupLastComplication;
- (void)PPTCreateComplication:(id)arg1 forSlot:(id)arg2 synchronously:(_Bool)arg3;
- (void)PPTPrepareComplicationTest;
- (id)PPTDescriptionForComplication:(id)arg1;
- (id)PPTUniqueComplicationsToSlotForCurrentFace;
- (void)PPTRestoreLibrary;
- (void)PPTUseBlankFaceLibrary;
- (int)PPTFaceStyleForPPTFaceName:(id)arg1;
- (int)PPTFaceIndexForPPTFaceName:(id)arg1;
- (void)PPTSetupLibraryForSwitchToFacePPT:(int)arg1 isTargetFaceInDock:(_Bool)arg2;
- (int)PPTFaceIndexForFaceStyle:(int)arg1;
- (unsigned int)PPTCurrentFaceStyle;
- (void)PPTRunScrollTestNamed:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)PPTSwitchToFaceAtIndex:(unsigned int)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)PPTCreateFaceOfStyle:(int)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)PPTScrubToDate:(id)arg1;
- (void)PPTEndScrubbingAnimated:(_Bool)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)PPTStartScrubbingAnimated:(_Bool)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)PPTHideFaceSwitcherWithCompletion:(CDUnknownBlockType)arg1;
- (void)PPTShowFaceSwitcherWithCompletion:(CDUnknownBlockType)arg1;
- (void)celebrationViewControllerStoppedAnimation:(id)arg1;
- (void)celebrationViewControllerStartedAnimation:(id)arg1;
- (void)_updateCelebrationsEnableAnimatationsState;
- (void)_refreshComplicationData;
- (void)_handleBatteryStateChange;
- (_Bool)_wakeAnimationsEnabled;
- (void)cancelWristRaiseAnimation;
- (void)prepareWristRaiseAnimation;
- (void)performWristRaiseAnimation;
- (_Bool)handleButton:(unsigned int)arg1 eventType:(unsigned int)arg2;
- (void)_wheelChangedWithEvent:(id)arg1;
- (void)_maybeSetOrbEnabled:(_Bool)arg1;
- (void)_endOrbZoom:(_Bool)arg1;
- (void)_setOrbZoomProgress:(float)arg1;
- (void)_beginOrbZoom;
- (void)ORBTapGestureRecognizer:(id)arg1 setScaleFactor:(float)arg2;
- (void)ORBTapGestureRecognizerDidLatch:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (_Bool)_canHandleSpeakTimeGesture;
- (void)_handleCancelSpeakTimeGesture:(id)arg1;
- (void)_handleSpeakTimeGesture:(id)arg1;
- (void)_removePrideFaceFromCollection:(id)arg1 reloadCollection:(CDUnknownBlockType)arg2;
- (_Bool)_faceCollectionContainsPrideFace:(id)arg1;
- (void)_addPrideFacesToAddableFaceCollectionIfNecessary;
- (unsigned int)_indexForFaceInAddableFaces:(int)arg1;
- (void)_updatePrideFaceAvailability;
- (void)faceLibraryViewControllerDidEndSwiping:(id)arg1;
- (void)faceLibraryViewControllerDidStartSwiping:(id)arg1;
- (void)faceLibraryViewControllerDidCompleteSelection:(id)arg1;
- (void)faceLibraryViewControllerWillCompleteSelection:(id)arg1;
- (id)faceLibraryViewController:(id)arg1 newViewControllerForFace:(id)arg2 configuration:(CDUnknownBlockType)arg3;
- (void)faceViewControllerWillExitTimeTravel;
- (void)faceViewControllerWillEnterTimeTravel;
- (id)blurSourceImageForClockView:(id)arg1;
- (void)_notifyDuetOfComplicationActivation;
- (id)currentComplicationApplicationIdentifiers;
- (id)currentOrderedComplicationApplicationIdentifiers;
- (void)_ensureStatusBarForFaceViewController:(id)arg1;
- (void)_putLibraryViewControllerIntoClockViewController;
- (void)_putFaceViewControllerIntoClockViewController;
- (id)_borrowFaceViewController;
- (void)_removeLibraryController;
- (void)_endFaceLibraryControllerPresentation;
- (void)__removeChildViewController:(id)arg1;
- (void)__addChildViewController:(id)arg1;
- (void)_prepareToPresentLibraryViewController;
- (void)_showLibraryViewControllerAnimated:(_Bool)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)_showLibraryViewControllerWithCompletion:(CDUnknownBlockType)arg1;
- (id)_newFaceControllerForFace:(id)arg1 withConfiguration:(CDUnknownBlockType)arg2;
- (id)currentComplicationReportingValues;
- (id)currentFaceReportingValue;
- (id)siriContextFaceIdentifier;
- (id)powerLogDescription;
- (id)currentFaceClass;
- (id)currentFaceDescription;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)_didReceiveTritiumSettingChangeNotification;
- (void)_teardownExistingFaceViewControllerIfNeeded;
- (void)_finishLoadingViewIfNecessary;
- (_Bool)_hasRealFaceCollections;
- (void)_createOrRecreateFaceContent;
- (id)_currentFaceCollection;
- (void)loadView;
- (_Bool)handleCrownPressed;
- (void)handleScreenBlanked;
@property(nonatomic) __weak id <CSLSFlipbookFrameCoordinator> frameCoordinator;
- (void)handleAOTEnabled:(_Bool)arg1;
- (void)handleScreenOffAnimated:(_Bool)arg1 flags:(unsigned int)arg2 brightnessRamp:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;
- (void)handleScreenOnAnimated:(_Bool)arg1 flags:(unsigned int)arg2 brightnessRamp:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;
- (_Bool)_canPerformWristRaiseAnimation;
- (void)disableSlowMode;
- (void)enableSlowMode;
@property(readonly, nonatomic, getter=isFinishedLoading) _Bool finishedLoading;
- (void)_resumeUpdates;
- (void)_pauseUpdates;
- (void)_ensureFaceViewControllerExists;
- (_Bool)currentFaceIsAnalog;
- (id)currentFace;
- (id)lifeCycleTrackingFaceViewController;
- (void)restoreIconZoomController;
- (id)borrowIconZoomController;
- (void)updateSnapshotsSynchronously;
- (_Bool)canBecomeFirstResponder;
- (void)_markLibraryFinishedLoading;
- (void)_cancelLibraryTimeoutTimer;
- (void)_libraryTimeoutTimerFired;
- (void)_startLibraryTimeoutTimer;
- (void)_prewarmFaceContentIfNeeded;
- (void)dealloc;
- (void)sensitiveUIStateChanged;
- (id)initWithStatusViewControllerClass:(Class)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) __weak id <CSLSScreenWakeProviderDelegate> delegate;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;
@property(readonly, nonatomic) _Bool usesFlipbook;

@end

