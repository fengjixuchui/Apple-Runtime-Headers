//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <Carousel/BSDescriptionProviding-Protocol.h>
#import <Carousel/BSTransactionObserver-Protocol.h>
#import <Carousel/CSLEventQueueDelegate-Protocol.h>
#import <Carousel/IOSSHLTransactionWatchdogDelegate-Protocol.h>
#import <Carousel/IOSSHLTransactionWatchdogHandlerDelegate-Protocol.h>

@class BSEventQueueLock, BSTransaction, CSLContinuingTransactions, CSLEventQueue, CSLSConcurrentObserverStore, CSLWorkspaceTransitionRequest, IOSSHLTransactionWatchdog, IOSSHLTransactionWatchdogHandler, NSString;
@protocol CSLTransactionQueueDelegate, OS_dispatch_queue;

@interface CSLTransactionQueue : NSObject <BSTransactionObserver, IOSSHLTransactionWatchdogDelegate, CSLEventQueueDelegate, IOSSHLTransactionWatchdogHandlerDelegate, BSDescriptionProviding>
{
    NSObject<OS_dispatch_queue> *_queue;
    CSLEventQueue *_eventQueue;
    BSEventQueueLock *_eventQueueLock;
    BSEventQueueLock *_secondaryEventQueueLock;
    BSTransaction *_currentTransaction;
    IOSSHLTransactionWatchdog *_transactionWatchdog;
    IOSSHLTransactionWatchdogHandler *_watchdogHandler;
    CSLWorkspaceTransitionRequest *_activeTransitionRequest;
    unsigned long long _stateHandler;
    CSLSConcurrentObserverStore *_transactionObservers;
    _Bool _shouldContinueAfterWatchdog;
    id <CSLTransactionQueueDelegate> _delegate;
    NSString *_name;
    unsigned int _watchdogPolicy;
    CSLContinuingTransactions *_continuingTransactions;
    CSLTransactionQueue *_secondaryQueueToLockWhileExecuting;
}

- (void).cxx_destruct;
@property(retain, nonatomic) CSLTransactionQueue *secondaryQueueToLockWhileExecuting; // @synthesize secondaryQueueToLockWhileExecuting=_secondaryQueueToLockWhileExecuting;
@property(readonly, nonatomic) CSLContinuingTransactions *continuingTransactions; // @synthesize continuingTransactions=_continuingTransactions;
@property(readonly, nonatomic) unsigned int watchdogPolicy; // @synthesize watchdogPolicy=_watchdogPolicy;
@property(readonly, nonatomic) _Bool shouldContinueAfterWatchdog; // @synthesize shouldContinueAfterWatchdog=_shouldContinueAfterWatchdog;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) id <CSLTransactionQueueDelegate> delegate; // @synthesize delegate=_delegate;
- (id)descriptionBuilderWithMultilinePrefix:(id)arg1;
- (id)descriptionWithMultilinePrefix:(id)arg1;
- (id)succinctDescriptionBuilder;
- (id)succinctDescription;
- (void)watchdog:(id)arg1 timerFireDeclinedForReason:(id)arg2;
- (void)watchdogHandler:(id)arg1 didContinueAfterWatchdogForContext:(id)arg2;
- (_Bool)watchdogShouldFire:(id)arg1 declineReason:(id *)arg2;
- (void)watchdogFired:(id)arg1;
- (void)transactionDidComplete:(id)arg1;
- (void)transactionDidFinishWork:(id)arg1;
- (void)transactionDidBegin:(id)arg1;
- (void)transactionWillBegin:(id)arg1;
- (void)noteQueueDidUnlock;
- (void)noteQueueDidLock;
- (void)_unlockSecondaryQueue;
- (void)_lockSecondaryQueue;
- (void)_clearCurrentTransaction;
- (void)_scheduleWatchdogWithTransaction:(id)arg1;
- (void)_setCurrentTransaction:(id)arg1;
@property(readonly, nonatomic) CSLWorkspaceTransitionRequest *activeTransitionRequest;
@property(readonly, nonatomic) BSTransaction *currentTransaction;
@property(readonly, nonatomic) _Bool isBusyWithTransaction;
- (_Bool)isBusy;
- (void)cancelPendingTransactions;
- (void)failCurrentTransactionWithReason:(id)arg1;
- (id)lockWithReason:(id)arg1;
- (void)executeOrInsertEvent:(id)arg1 atPosition:(int)arg2;
- (void)executeOrInsertTransactionWithName:(id)arg1 atPosition:(int)arg2 fromFactory:(CDUnknownBlockType)arg3;
- (void)executeOrAppendTransaction:(id)arg1 withName:(id)arg2;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (void)removeTransactionObserver:(id)arg1;
- (void)addTransactionObserver:(id)arg1;
- (id)initWithName:(id)arg1 onQueue:(id)arg2 watchdogPolicy:(unsigned int)arg3;
- (id)initWithName:(id)arg1 onQueue:(id)arg2 shouldContinueAfterWatchdog:(_Bool)arg3;
- (id)init;

// Remaining properties
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

