//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <Carousel/CSLStuckTransactionDialogDelegate-Protocol.h>

@class BKSAssertion, BSCFBundle, CSLApplicationInfo, CSLPPTApplicationConfiguration, CSLSceneSnapshot, CSLStackshotAndSysdiagnoseWriter, CSLStuckTransactionDialog, FBProcess, IOSSHLBackedUpDataStore, NSArray, NSDictionary, NSSet, NSString, PUICClassicModeConfiguration, RBSAssertion, UIApplicationSceneClientSettings, UISDisplayContext, XBApplicationSnapshotManifest;

@interface IOSSHLApplication : NSObject <CSLStuckTransactionDialogDelegate>
{
    unsigned long long _canary1;
    unsigned long long _canary2;
    FBProcess *_process;
    int _failedLaunchCount;
    unsigned int _isAnimatingActivation:1;
    unsigned int _isAnimatingDeactivation:1;
    unsigned int _hasBeenFrontmost:1;
    unsigned int _uninstalled:1;
    unsigned int _isNewlyInstalled:3;
    struct _opaque_pthread_mutex_t _appBundleMutex;
    BSCFBundle *_cachedBundle;
    NSDictionary *_cachedLocalizedInfoDictionary;
    int _applicationRestorationCheckState;
    IOSSHLBackedUpDataStore *_dataStore;
    int _lastExitType;
    unsigned int _applicationState;
    int _activationState;
    unsigned int _activationToken;
    int _showsProgress;
    XBApplicationSnapshotManifest *_snapshotManifest;
    int _finishedLaunchingFrontmost;
    struct _opaque_pthread_mutex_t _processMutex;
    struct os_unfair_lock_s _stateUnfairLock;
    CSLStuckTransactionDialog *_canaryDialog;
    CSLStackshotAndSysdiagnoseWriter *_diagnosticWriter;
    RBSAssertion *_subordinateProcessAssertion;
    struct os_unfair_lock_s _nowPlayingWithAudioLock;
    _Bool _nowPlayingWithAudio;
    BKSAssertion *_nowPlayingWithAudioAssertion;
    _Bool _appSnapshotSequenceID;
    _Bool _hasBeenFrontMost;
    _Bool _enableTestsInNextTransitionContext;
    _Bool _restricted;
    _Bool _committedSceneUpdate;
    NSString *_bundleIdentifier;
    NSSet *_idleTimerDisabledReasons;
    NSArray *_runningReasons;
    NSArray *_domainsToPreheat;
    NSString *_currentTestNameToMarkActivation;
    CSLPPTApplicationConfiguration *_testingConfiguration;
    NSDictionary *_alertSuppressionContextsBySectionIdentifier;
    CSLApplicationInfo *_appInfo;
    UIApplicationSceneClientSettings *_sceneClientSettings;
    CSLSceneSnapshot *_cachedSceneSnapshot;
    double _watchdogExtension;
}

+ (id)defaultValueForKey:(id)arg1 presentationIdentifier:(id)arg2 urlScheme:(id)arg3;
+ (void)setDefaultValue:(id)arg1 forKey:(id)arg2 presentationIdentifier:(id)arg3;
+ (id)_defaultDisplayState;
+ (void)setMaxRelaunchCountUser:(int)arg1;
+ (int)maxRelaunchCountUser;
+ (void)setMaxRelaunchCountSystem:(int)arg1;
+ (int)maxRelaunchCountSystem;
+ (void)setGoToSafeModeAfterCount:(int)arg1;
+ (int)goToSafeModeAfterCount;
+ (void)initialize;
+ (id)snapshotExtendedDataClasses;
- (void).cxx_destruct;
@property(nonatomic, getter=hasCommittedSceneUpdate) _Bool committedSceneUpdate; // @synthesize committedSceneUpdate=_committedSceneUpdate;
@property(nonatomic, getter=isRestricted) _Bool restricted; // @synthesize restricted=_restricted;
@property(retain, nonatomic) CSLSceneSnapshot *cachedSceneSnapshot; // @synthesize cachedSceneSnapshot=_cachedSceneSnapshot;
@property(retain, nonatomic) UIApplicationSceneClientSettings *sceneClientSettings; // @synthesize sceneClientSettings=_sceneClientSettings;
@property(retain) CSLApplicationInfo *appInfo; // @synthesize appInfo=_appInfo;
@property(nonatomic) double watchdogExtension; // @synthesize watchdogExtension=_watchdogExtension;
@property(retain, nonatomic) NSDictionary *alertSuppressionContextsBySectionIdentifier; // @synthesize alertSuppressionContextsBySectionIdentifier=_alertSuppressionContextsBySectionIdentifier;
@property(retain, nonatomic) CSLPPTApplicationConfiguration *testingConfiguration; // @synthesize testingConfiguration=_testingConfiguration;
@property(retain, nonatomic) NSString *currentTestNameToMarkActivation; // @synthesize currentTestNameToMarkActivation=_currentTestNameToMarkActivation;
@property(nonatomic) _Bool enableTestsInNextTransitionContext; // @synthesize enableTestsInNextTransitionContext=_enableTestsInNextTransitionContext;
@property(nonatomic) _Bool hasBeenFrontMost; // @synthesize hasBeenFrontMost=_hasBeenFrontMost;
@property(readonly, nonatomic) NSArray *domainsToPreheat; // @synthesize domainsToPreheat=_domainsToPreheat;
@property(retain, nonatomic) NSArray *runningReasons; // @synthesize runningReasons=_runningReasons;
@property(readonly, nonatomic) NSSet *idleTimerDisabledReasons; // @synthesize idleTimerDisabledReasons=_idleTimerDisabledReasons;
@property(readonly, nonatomic) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;
@property(nonatomic) _Bool appSnapshotSequenceID; // @synthesize appSnapshotSequenceID=_appSnapshotSequenceID;
- (void)stuckTransactionDialogDidTapButton:(id)arg1;
- (void)stuckTransactionDialogDidDismiss:(id)arg1;
- (void)_showCanaryDialog;
- (void)_checkCanariesIfInternalInstall;
- (void)setNowPlayingWithAudio:(_Bool)arg1;
- (void)_withNowPlayingAudioLock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) UISDisplayContext *displayContext;
@property(readonly, nonatomic) PUICClassicModeConfiguration *classicModeConfiguration;
- (struct CGRect)sceneFrame;
- (struct CGRect)sceneBounds;
- (id)watchdogProvider;
- (_Bool)wantsIndependentWatchdogForSceneCreate;
- (id)_snapshotManifest;
- (void)_setApplicationRestorationCheckState:(int)arg1;
- (int)_applicationRestorationCheckState;
- (_Bool)hasBeenFrontmost;
@property(readonly, nonatomic) NSString *runningBundleIdentifier;
- (id)displayIdentifier;
- (id)_searchDomainLaunchInfo;
- (_Bool)_isMainSceneID:(id)arg1;
- (id)mainSceneID;
- (id)sceneIdentifierForDisplayIdentity:(id)arg1 displayConfiguration:(id)arg2;
- (id)mainScene;
- (id)sceneSpecification;
- (id)mainSceneInitialClientSettings;
- (_Bool)canAccessScreen:(id)arg1;
- (_Bool)isSameExecutableAsApplication:(id)arg1;
- (void)setBundleIdentifier:(id)arg1;
- (id)badgeValue;
- (void)setBadgeValue:(id)arg1;
- (void)bulletinWithLocalNotificationShouldLaunchSuspended;
- (void)bulletinWithLocalNotificationShouldLaunchWithActions:(id)arg1;
- (_Bool)isUninstalled;
- (double)lastBadgeClearTime;
- (void)_noteIconDataSourceDidChange;
- (_Bool)shouldSuppressAlertForSuppressionContexts:(id)arg1 sectionIdentifier:(id)arg2;
- (void)setBadge:(id)arg1;
- (id)badgeNumberOrString;
- (_Bool)badgeHasBeenSetLocally;
- (void)noteBadgeSetLocally;
@property(readonly, nonatomic) _Bool requiresRLNDataProvider;
- (void)deactivate;
- (void)activate;
- (double)autoLockTime;
- (double)autoDimTime;
- (_Bool)suppressesNotifications;
- (_Bool)allowsEventOnlySuspension;
- (int)effectiveStatusBarStyle;
- (int)statusBarStyle;
- (_Bool)statusBarHidden;
@property(readonly, nonatomic) _Bool newlyInstalled;
- (id)_copyApplicationMetadata;
@property(readonly, nonatomic) double modificationDate;
@property(readonly, nonatomic) NSString *sandboxPath;
- (id)bundleContainerPath;
- (id)dataContainerPath;
@property(readonly, nonatomic) NSString *path;
- (void)autoLaunchIfNecessaryOnBootOrInstall:(_Bool)arg1;
- (_Bool)shouldAutoRelaunchAfterExit;
- (_Bool)shouldAutoLaunchOnBootOrInstall;
- (_Bool)_shouldAutoLaunchOnBootOrInstall:(_Bool)arg1;
- (_Bool)_shouldAutoRelaunchForEA;
- (void)prepareForUninstallation;
- (int)launchingInterfaceOrientationForOrientation:(int)arg1;
- (int)launchingInterfaceOrientationForCurrentOrientation;
- (int)statusBarOrientation;
- (void)didAnimateDeactivation;
- (void)willAnimateDeactivation:(_Bool)arg1;
- (void)didAnimateActivation;
- (void)willAnimateActivation;
- (void)didDeactivateForEventsOnly:(_Bool)arg1;
- (void)willDeactivateForEventsOnly:(_Bool)arg1;
- (void)didFailToActivate;
- (_Bool)didActivateWithTransactionID:(unsigned int)arg1;
- (void)setActivateTransactionID:(unsigned int)arg1;
- (void)willActivate;
- (_Bool)isActivating;
- (void)_setActivationState:(int)arg1;
@property(readonly, nonatomic) int activationState;
@property(nonatomic) unsigned int applicationState;
- (_Bool)isBeingDebugged;
- (id)activationStateToString;
- (id)_stringForActivationState:(int)arg1;
- (void)didSuspend;
- (_Bool)suspendingUnsupported;
- (_Bool)shouldLaunchPNGless;
- (void)_setHasBeenLaunched;
- (void)didExitWithType:(int)arg1 terminationReason:(int)arg2;
- (void)processDidLaunch:(id)arg1;
- (void)processWillLaunch:(id)arg1;
- (void)_setNewlyInstalled:(_Bool)arg1;
- (_Bool)_isNewlyInstalled;
- (id)extensionProcess;
- (id)applicationProcess;
- (id)process;
@property(readonly, nonatomic, getter=isRunning) _Bool running;
@property(readonly, nonatomic) int pid;
- (void)_withMutex:(struct _opaque_pthread_mutex_t)arg1 call:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)initWithApplicationInfo:(id)arg1;
- (int)applicationSignatureState;
@property(readonly, nonatomic) NSString *signerIdentity;
@property(readonly, nonatomic) _Bool provisioningProfileValidated;
- (void)markApplicationIdentityAsTrusted;
- (void)terminationAssertionRemoved:(id)arg1;
- (void)terminationAssertionAdded:(id)arg1;
- (_Bool)isAnyTerminationAssertionHeld;
- (void)purgeAllCaches;
- (void)purgeBundleCaches;
@property(readonly, nonatomic) NSDictionary *localizedPlistDictionary;
- (id)bundle;
@property(nonatomic) _Bool showsProgress;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
- (_Bool)isDemoApp;
- (_Bool)isSetupAssistant;
- (void)_noteSnapshotDidUpdate;
- (id)_snapshotDataProviderForScene:(id)arg1 snapshot:(id)arg2;
- (id)_screenFromSceneID:(id)arg1;
- (id)_snapshotCreationDeletionQueueForSceneID:(id)arg1;
- (id)snapshotCreationDate;
- (_Bool)isSnapshotStale;
- (id)snapshotStaleDate;
- (id)cslsSnapshotContext;
- (void)setCSLSSnapshotContext:(id)arg1;
- (id)extendedSnapshotData;
- (id)snapshotImage;
- (id)splashBoardMetadata;
- (id)_firstValidSnapshot;
- (void)saveSnapshotForScene:(id)arg1 context:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)deleteSnapshotForContext:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)deleteAllSnapshots;
- (void)flushSnapshotsForSceneID:(id)arg1;
- (void)flushSnapshotsForAllScenes;

// Remaining properties
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

