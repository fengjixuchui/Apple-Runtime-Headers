//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <Carousel/CSLAlertEngineDelegate-Protocol.h>
#import <Carousel/CSLAlertRootViewControllerDelegate-Protocol.h>
#import <Carousel/CSLDNDSource-Protocol.h>
#import <Carousel/CSLStickyAlertPolicyDelegate-Protocol.h>
#import <Carousel/CSLUIStateProviding-Protocol.h>
#import <Carousel/CSLWorkspaceRequestHandling-Protocol.h>
#import <Carousel/CUISAlertProviderDelegate-Protocol.h>

@class CSLAlertClientSoundPolicy, CSLAlertEngine, CSLAlertManagerUpdate, CSLAlertPolicy, CSLAlertRootViewController, CSLAlertWindow, CSLPIBacklightAssertion, CSLPITimer, FBDisplayLayoutElement, NSMutableArray, NSString;
@protocol BSInvalidatable;

@interface CSLAlertManager : NSObject <CUISAlertProviderDelegate, CSLAlertRootViewControllerDelegate, CSLAlertEngineDelegate, CSLDNDSource, CSLStickyAlertPolicyDelegate, CSLWorkspaceRequestHandling, CSLUIStateProviding>
{
    CSLAlertWindow *_alertWindow;
    CSLAlertRootViewController *_alertViewController;
    NSMutableArray *_providers;
    _Bool _alertWindowHasBeenShown;
    CSLAlertEngine *_alertEngine;
    CSLAlertPolicy *_alertPolicy;
    CSLAlertClientSoundPolicy *_clientSoundPolicy;
    int _updateCount;
    CSLAlertManagerUpdate *_update;
    CSLPITimer *_autoDismissTimer;
    _Bool _autoDismissTimerScheduled;
    FBDisplayLayoutElement *_displayLayoutElement;
    unsigned long long _stateHandler;
    CSLPIBacklightAssertion *_coverGestureAssertion;
    id <BSInvalidatable> _screenWakeProviderAssertion;
}

+ (void)createSharedInstance;
+ (id)sharedInstance;
- (void).cxx_destruct;
- (struct os_state_data_s *)_stateDataWithHints:(struct os_state_hints_s *)arg1;
- (_Bool)stickyAlertPolicy:(id)arg1 isAlertItemSticky:(id)arg2;
- (void)handleWorkspaceRequest:(id)arg1 withTransitionCoordinator:(id)arg2;
- (void)populateUIState:(id)arg1;
- (id)policyAssertionForPolicy:(id)arg1;
- (void)doNotDisturbGestureRecognized:(id)arg1;
- (void)doNotDisturbGestureStartedRecognition:(id)arg1;
- (_Bool)shouldDNDGestureRecognize;
- (id)existingAlertItemForViewController:(id)arg1;
- (id)_currentUpdate;
- (id)alertsTransactionForCurrentState;
- (void)updateSuppressedAlertsForUpdate:(id)arg1;
- (void)changeAlertActivationStateForUpdate:(id)arg1;
- (void)executeUpdate:(id)arg1 withTransaction:(id)arg2;
- (void)endUpdates;
- (void)beginUpdates;
- (id)visibleAlertUnderAlert:(id)arg1;
- (void)updateAlertBackgroundsIfNeededForAlert:(id)arg1;
- (void)alertEngineDidChangeActivatedItems:(id)arg1;
- (void)alertEngineWillChangeActivatedItems:(id)arg1;
- (_Bool)isAlertViewControllerTopmost:(id)arg1;
- (unsigned int)alertProvider:(id)arg1 preflightActivationForViewController:(id)arg2;
- (void)audioFeedbackAllowedForAlertName:(id)arg1 options:(unsigned int)arg2 completion:(CDUnknownBlockType)arg3;
- (void)audioFeedbackAllowedForAlertName:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (unsigned int)audioFeedbackAllowedForAlertName:(id)arg1 options:(unsigned int)arg2;
- (unsigned int)audioFeedbackAllowedForAlertName:(id)arg1;
- (_Bool)alertProviderIsUILocked:(id)arg1;
- (_Bool)alertProvider:(id)arg1 requestReplaceAlert:(id)arg2 withAlert:(id)arg3 animator:(id)arg4;
- (void)alertProvider:(id)arg1 requestDeactivate:(id)arg2 launchApp:(id)arg3 withURL:(id)arg4 annotation:(id)arg5 actions:(id)arg6 animated:(_Bool)arg7;
- (void)alertProvider:(id)arg1 requestDeactivate:(id)arg2 launchApp:(id)arg3 withURL:(id)arg4 annotation:(id)arg5 animated:(_Bool)arg6;
- (void)alertProvider:(id)arg1 requestDeactivate:(id)arg2 launchApp:(id)arg3 withURL:(id)arg4 animated:(_Bool)arg5;
- (void)alertProvider:(id)arg1 requestDeactivate:(id)arg2 launchApp:(id)arg3 withURL:(id)arg4;
- (void)alertProvider:(id)arg1 requestDeactivate:(id)arg2 animated:(_Bool)arg3;
- (void)alertProvider:(id)arg1 requestDeactivate:(id)arg2;
- (_Bool)validateRequestFromProvider:(id)arg1 controller:(id)arg2;
- (unsigned int)alertProvider:(id)arg1 requestActivate:(id)arg2 animated:(_Bool)arg3;
- (void)alertProvider:(id)arg1 requestActivate:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)alertRootViewController:(id)arg1 willBeginCustomTransitionFromAlert:(id)arg2 toAlert:(id)arg3 withAnimator:(id)arg4;
- (void)alertRootViewController:(id)arg1 willBeginDisplayingAlert:(id)arg2;
- (void)alertRootViewController:(id)arg1 willPresentAlert:(id)arg2;
- (void)alertRootViewControllerDidEndPresentingAlerts:(id)arg1;
- (void)alertRootViewController:(id)arg1 didPresentAlert:(id)arg2;
- (void)_checkCoverGestureAssertionForIncomingAlert:(id)arg1;
- (void)autoDismissDisplayedAlertsBecauseScreenCovered;
- (void)autoDismissDisplayedAlertsWithReason:(unsigned int)arg1;
- (void)_autoDismissTimerFired;
- (void)_stopAutoDismissTimer;
- (void)_startAutoDismissTimer;
- (void)_backlightDidTurnOff:(id)arg1;
- (void)_backlightDidTurnOn:(id)arg1;
- (void)dismissAllAlertsAnimated:(_Bool)arg1 configurationBlock:(CDUnknownBlockType)arg2;
- (id)alertProvidersPassingTest:(CDUnknownBlockType)arg1;
- (id)_alertViewController;
- (id)topAlertOnStack;
- (id)currentActiveAlert;
- (_Bool)_popTopAlertIfPossibleForButtonPress:(unsigned int)arg1 eventType:(unsigned int)arg2;
- (_Bool)handleButtonPressed:(unsigned int)arg1 eventType:(unsigned int)arg2;
- (void)_createAlertWindow;
- (id)alertWindow;
- (void)_dismissAlertWindow;
- (void)_showAlertWindowIfNeeded;
- (void)addScreenWakeProviderIfPossible;
- (void)_notifyAlertPresentationDidEnd;
- (void)_notifyAlertPresentationDidBegin;
- (void)_notifyAlertPresentationWillBegin;
- (void)_notifyAlertPresentationWillEnd;
- (void)_notifyAlertWindowDismissed;
- (void)_notifyAlertWindowPresented;
- (id)currentAlertStack;
- (unsigned int)visibleAlertStackCount;
- (id)init;
- (void)loadAlertBundles;
- (void)registerAlertProvider:(id)arg1;
@property(readonly, copy) NSString *description;
- (_Bool)runTest:(id)arg1 options:(id)arg2;
- (_Bool)canOpenURL:(id)arg1;
- (_Bool)openURL:(id)arg1;
- (_Bool)continueUserActivity:(id)arg1;
- (_Bool)canContinueUserActivity:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

