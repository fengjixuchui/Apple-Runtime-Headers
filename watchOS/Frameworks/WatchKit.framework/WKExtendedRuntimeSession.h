//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <WatchKit/CSLSSessionDelegate-Protocol.h>

@class CSLSSession, NSDate, NSError, NSMutableArray, NSString, NSTimer;
@protocol WKExtendedRuntimeSessionDelegate;

@interface WKExtendedRuntimeSession : NSObject <CSLSSessionDelegate>
{
    _Bool _waitingForCSLSSessionCreation;
    _Bool _startRequested;
    _Bool _scheduleRequested;
    _Bool _sessionDidStopCalled;
    id <WKExtendedRuntimeSessionDelegate> _delegate;
    int _state;
    NSDate *_expirationDate;
    CSLSSession *_continuousRuntimeSession;
    NSTimer *_willExpireTimer;
    NSError *_sessionCreationError;
    NSMutableArray *_cslsSessionCreationCompletions;
    NSDate *_scheduleDateRequested;
    NSTimer *_playHapticTimer;
}

+ (id)errorForWKExtendedRuntimeSessionErrorCode:(int)arg1;
+ (_Bool)cslsSessionWasRecovered:(id)arg1;
+ (_Bool)cslsSessionWasCreatedInThisProcess:(id)arg1;
+ (_Bool)_currentRunningSessionWasScheduled;
+ (id)session;
@property(nonatomic) _Bool sessionDidStopCalled; // @synthesize sessionDidStopCalled=_sessionDidStopCalled;
@property(retain, nonatomic) NSTimer *playHapticTimer; // @synthesize playHapticTimer=_playHapticTimer;
@property(nonatomic) _Bool scheduleRequested; // @synthesize scheduleRequested=_scheduleRequested;
@property(nonatomic) _Bool startRequested; // @synthesize startRequested=_startRequested;
@property(retain, nonatomic) NSDate *scheduleDateRequested; // @synthesize scheduleDateRequested=_scheduleDateRequested;
@property(retain, nonatomic) NSMutableArray *cslsSessionCreationCompletions; // @synthesize cslsSessionCreationCompletions=_cslsSessionCreationCompletions;
@property(nonatomic) _Bool waitingForCSLSSessionCreation; // @synthesize waitingForCSLSSessionCreation=_waitingForCSLSSessionCreation;
@property(retain, nonatomic) NSError *sessionCreationError; // @synthesize sessionCreationError=_sessionCreationError;
@property(retain, nonatomic) NSTimer *willExpireTimer; // @synthesize willExpireTimer=_willExpireTimer;
@property(retain, nonatomic) CSLSSession *continuousRuntimeSession; // @synthesize continuousRuntimeSession=_continuousRuntimeSession;
@property(retain, nonatomic) NSDate *expirationDate; // @synthesize expirationDate=_expirationDate;
@property(nonatomic) int state; // @synthesize state=_state;
@property(nonatomic) __weak id <WKExtendedRuntimeSessionDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (int)_invalidationReasonAndDelegateCallbackErrorForError:(id)arg1 outCallbackError:(id *)arg2;
@property(readonly, copy) NSString *description;
- (void)_sessionDidStopWithError:(id)arg1;
- (void)sessionDidStop:(id)arg1 error:(id)arg2;
- (void)_notifyUserWithHaptic:(int)arg1 repeatHandler:(CDUnknownBlockType)arg2;
- (void)notifyUserWithHaptic:(int)arg1 repeatHandler:(CDUnknownBlockType)arg2;
- (void)_invalidateWithError:(id)arg1;
- (void)invalidate;
- (void)_sessionDidStart;
- (void)sessionDidStart:(id)arg1;
- (void)_startAtDate:(id)arg1;
- (void)startAtDate:(id)arg1;
- (void)_start;
- (void)start;
- (void)_performAfterCSLSSessionCreation:(CDUnknownBlockType)arg1;
- (void)_setupWillExpireTimer;
- (void)dealloc;
- (id)initWithCSLSSession:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

