//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <LocalAuthentication/NSSecureCoding-Protocol.h>

@class LAClient, NSData, NSNumber, NSString;
@protocol LAPrearmContextXPC, LAUIDelegate;

@interface LAContext : NSObject <NSSecureCoding>
{
    LAClient *_client;
    id <LAPrearmContextXPC> _prearmContext;
    NSNumber *_maxBiometryFailures;
    NSData *_evaluatedPolicyDomainState;
    NSString *_localizedReason;
    NSData *_externalizedContext;
    NSNumber *_touchIDAuthenticationRetryLimit;
    unsigned int _instanceId;
    double _touchIDAuthenticationAllowableReuseDuration;
}

+ (unsigned int)newCommandId;
+ (unsigned int)newInstanceId;
+ (_Bool)supportsSecureCoding;
- (void).cxx_destruct;
@property(readonly, nonatomic) unsigned int instanceId; // @synthesize instanceId=_instanceId;
@property(retain, nonatomic) NSNumber *touchIDAuthenticationRetryLimit; // @synthesize touchIDAuthenticationRetryLimit=_touchIDAuthenticationRetryLimit;
@property(retain, nonatomic) NSData *externalizedContext; // @synthesize externalizedContext=_externalizedContext;
@property(copy, nonatomic) NSString *localizedReason; // @synthesize localizedReason=_localizedReason;
@property(nonatomic) double touchIDAuthenticationAllowableReuseDuration; // @synthesize touchIDAuthenticationAllowableReuseDuration=_touchIDAuthenticationAllowableReuseDuration;
@property(retain, nonatomic) NSData *evaluatedPolicyDomainState; // @synthesize evaluatedPolicyDomainState=_evaluatedPolicyDomainState;
@property(retain, nonatomic) NSNumber *maxBiometryFailures; // @synthesize maxBiometryFailures=_maxBiometryFailures;
@property(nonatomic) _Bool interactionNotAllowed;
- (void)setOptionAuthenticationTitle:(id)arg1;
- (id)optionAuthenticationTitle;
- (void)setOptionCallerPID:(id)arg1;
- (id)optionCallerPID;
- (void)setOptionCallerName:(id)arg1;
- (id)optionCallerName;
- (void)setOptionTimeout:(id)arg1;
- (id)optionTimeout;
- (void)setOptionNotInteractive:(id)arg1;
- (id)optionNotInteractive;
@property(nonatomic) __weak id <LAUIDelegate> uiDelegate;
@property(copy, nonatomic) NSString *localizedCancelTitle;
@property(copy, nonatomic) NSString *localizedFallbackTitle;
- (void)_setServerPropertyForOption:(int)arg1 value:(id)arg2 log:(int)arg3;
- (void)_setServerPropertyForOption:(int)arg1 value:(id)arg2;
- (id)_serverPropertyValueForOption:(int)arg1 log:(int)arg2;
- (id)_serverPropertyValueForOption:(int)arg1;
- (void)setShowingCoachingHint:(_Bool)arg1 event:(int)arg2 reply:(CDUnknownBlockType)arg3;
- (void)authMethodWithReply:(CDUnknownBlockType)arg1;
- (void)resetWithReply:(CDUnknownBlockType)arg1;
- (void)prearmTouchIDWithReply:(CDUnknownBlockType)arg1;
- (_Bool)isCredentialSet:(int)arg1;
- (void)_setCredential:(id)arg1 type:(int)arg2 log:(int)arg3 cid:(unsigned int)arg4 reply:(CDUnknownBlockType)arg5;
- (void)setCredential:(id)arg1 type:(int)arg2 reply:(CDUnknownBlockType)arg3;
- (_Bool)_setCredential:(id)arg1 type:(int)arg2 log:(int)arg3 cid:(unsigned int)arg4 error:(id *)arg5;
- (_Bool)setCredential:(id)arg1 type:(int)arg2 error:(id *)arg3;
- (_Bool)setCredential:(id)arg1 type:(int)arg2;
- (id)evaluateAccessControl:(struct __SecAccessControl *)arg1 aksOperation:(void *)arg2 options:(id)arg3 error:(id *)arg4;
- (id)evaluateAccessControl:(struct __SecAccessControl *)arg1 operation:(int)arg2 options:(id)arg3 error:(id *)arg4;
- (void)evaluateAccessControl:(struct __SecAccessControl *)arg1 operation:(int)arg2 localizedReason:(id)arg3 reply:(CDUnknownBlockType)arg4;
- (void)_evaluateAccessControl:(struct __SecAccessControl *)arg1 operation:(id)arg2 options:(id)arg3 log:(int)arg4 cid:(unsigned int)arg5 reply:(CDUnknownBlockType)arg6;
- (void)evaluateAccessControl:(struct __SecAccessControl *)arg1 aksOperation:(void *)arg2 options:(id)arg3 reply:(CDUnknownBlockType)arg4;
- (void)evaluateAccessControl:(struct __SecAccessControl *)arg1 operation:(int)arg2 options:(id)arg3 reply:(CDUnknownBlockType)arg4;
- (void)setCredential:(id)arg1 forProcessedEvent:(int)arg2 credentialType:(int)arg3 reply:(CDUnknownBlockType)arg4;
- (void)resetProcessedEvent:(int)arg1 reply:(CDUnknownBlockType)arg2;
- (void)retryProcessedEvent:(int)arg1 reply:(CDUnknownBlockType)arg2;
- (void)failProcessedEvent:(int)arg1 failureError:(id)arg2 reply:(CDUnknownBlockType)arg3;
- (_Bool)canEvaluatePolicy:(int)arg1 error:(id *)arg2;
- (id)evaluationMechanismsForAccessControl:(struct __SecAccessControl *)arg1 operation:(int)arg2 error:(id *)arg3;
- (id)evaluationMechanismsForPolicy:(int)arg1 error:(id *)arg2;
- (id)_evaluationMechanismsFromReturnedError:(id)arg1 error:(id *)arg2;
- (void)evaluatePolicy:(int)arg1 localizedReason:(id)arg2 reply:(CDUnknownBlockType)arg3;
- (id)_publicErrorFromInternalError:(id)arg1 options:(id)arg2;
- (id)_evaluatePolicy:(int)arg1 options:(id)arg2 log:(int)arg3 cid:(unsigned int)arg4 error:(id *)arg5;
- (id)evaluatePolicy:(int)arg1 options:(id)arg2 error:(id *)arg3;
- (id)_hashWithBundleIdentifier:(id)arg1;
- (void)_evaluatePolicy:(int)arg1 options:(id)arg2 log:(int)arg3 cid:(unsigned int)arg4 reply:(CDUnknownBlockType)arg5;
- (void)evaluatePolicy:(int)arg1 options:(id)arg2 reply:(CDUnknownBlockType)arg3;
- (void)invalidate;
- (void)encodeWithCoder:(id)arg1;
- (unsigned int)hash;
- (_Bool)isEqual:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithExternalizedContext:(id)arg1 uiDelegate:(id)arg2;
- (id)initWithUIDelegate:(id)arg1;
- (id)initWithExternalizedContext:(id)arg1 userSession:(unsigned int *)arg2;
- (id)initWithExternalizedContext:(id)arg1;
- (id)init;

@end

