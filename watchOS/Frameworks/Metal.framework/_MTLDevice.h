//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class MTLCompiler, MTLDeviceFeatureQueries, NSArray, NSString;
@protocol OS_dispatch_queue;

@interface _MTLDevice : NSObject
{
    CDStruct_52c93ad5 _limits;
    void *_supportedGPUFamilies;
    MTLCompiler *_compiler;
    NSObject<OS_dispatch_queue> *_serialQueue;
    NSObject<OS_dispatch_queue> *_pipelineSerializationQueue;
    NSObject<OS_dispatch_queue> *_concurrentQueue;
    _Bool _hasInitSerializationPaths;
    MTLDeviceFeatureQueries *_featureQueries;
    unsigned long long _globalTraceObjectID;
    int _commandQueueCount;
    struct MTLLibraryBuilder *_libraryBuilder;
    struct MTLPipelineLibraryBuilder *_pipelineLibraryBuilder;
    struct MTLPipelineCollection *_pipelineCollection;
    NSString *_pipelineDescriptorsOutputFile;
    NSString *_librariesOutputDirectory;
    _Bool _collectAllLibraries;
    _Bool _gpuAssertionsEnabled;
    _Bool _resourceIndirectionEnabled;
    _Bool _utilityBufferRequired;
    NSArray *_utilityBuffers;
    unsigned int _currentUtilityBufferIndex;
}

+ (_Bool)featureProfile:(unsigned int)arg1 supportsFeatureSet:(unsigned int)arg2;
+ (_Bool)useNewPrimitiveRestartBehavior;
@property(readonly) NSObject<OS_dispatch_queue> *concurrentQueue; // @synthesize concurrentQueue=_concurrentQueue;
@property(readonly) NSObject<OS_dispatch_queue> *serialQueue; // @synthesize serialQueue=_serialQueue;
@property(readonly) unsigned long long globalTraceObjectID; // @synthesize globalTraceObjectID=_globalTraceObjectID;
@property(readonly, getter=isPlacementHeapSupported) _Bool placementHeapSupported; // @dynamic placementHeapSupported;
- (unsigned long long)offsetFromIndirectBufferAddress:(unsigned long long)arg1;
- (unsigned long long)resourceIndexFromIndirectBufferAddress:(unsigned long long)arg1;
- (unsigned long long)indirectBufferAddressForResourceIndex:(unsigned long long)arg1 offset:(unsigned long long)arg2;
- (void)removeResourceFromGlobalResourceTable:(unsigned long long)arg1 resourceType:(unsigned int)arg2;
- (void)addIndirectCommandBufferToGlobalResourceTable:(id)arg1;
- (void)addRenderPipelineStateToGlobalResourceTable:(id)arg1;
- (void)addComputePipelineStateToGlobalResourceTable:(id)arg1;
- (void)addSamplerStateToGlobalResourceTable:(id)arg1;
- (void)addTextureToGlobalResourceTable:(id)arg1;
- (void)addBufferToGlobalResourceTable:(id)arg1;
- (void)reserveResourceIndicesForResourceType:(unsigned int)arg1 indices:(unsigned long long *)arg2 indexCount:(unsigned int)arg3;
- (_Bool)requiresIndirectionForAllResourceTypes;
- (id)newBufferWithBytesNoCopy:(void *)arg1 length:(unsigned int)arg2 options:(unsigned int)arg3 atResourceIndex:(unsigned int)arg4 deallocator:(CDUnknownBlockType)arg5;
- (id)newBufferWithBytes:(const void *)arg1 length:(unsigned int)arg2 options:(unsigned int)arg3 atResourceIndex:(unsigned int)arg4;
- (id)newBufferWithLength:(unsigned int)arg1 options:(unsigned int)arg2 atResourceIndex:(unsigned int)arg3;
- (_Bool)useDeviceResourceTableForType:(unsigned int)arg1;
- (id)utilityBufferForRenderCommandEncoder:(id)arg1;
- (id)utilityBufferForComputeCommandEncoder:(id)arg1;
- (unsigned int)createNewUtilityBuffer;
@property unsigned int currentUtilityBufferIndex;
- (void)setUtilityBuffers:(id)arg1;
@property(readonly, nonatomic) NSArray *utilityBuffers;
@property(getter=isUtilityBufferRequired) _Bool utilityBufferRequired;
@property(getter=isResourceIndirectionEnabled) _Bool resourceIndirectionEnabled;
@property(getter=areGPUAssertionsEnabled, setter=setGPUAssertionsEnabled:) _Bool gpuAssertionsEnabled;
- (id)newSharedEventWithMachPort:(unsigned int)arg1;
- (id)newSharedEventWithHandle:(id)arg1;
- (id)newSharedEvent;
- (id)newEvent;
- (id)newArgumentEncoderWithLayout:(id)arg1;
- (id)newArgumentEncoderWithArguments:(id)arg1;
- (id)newArgumentEncoderWithArguments:(id)arg1 structType:(id *)arg2;
@property(readonly) struct IndirectArgumentBufferCapabilities indirectArgumentBufferCapabilities; // @dynamic indirectArgumentBufferCapabilities;
- (void)getDefaultSamplePositions:(CDStruct_6e3f967a *)arg1 count:(unsigned int)arg2;
- (void)_purgeDevice;
- (id)newCommandQueueWithDescriptor:(id)arg1;
- (id)newCommandQueueWithMaxCommandBufferCount:(unsigned int)arg1;
- (id)newCommandQueue;
- (void)_decrementCommandQueueCount;
- (void)_incrementCommandQueueCount;
@property(readonly) unsigned int maxArgumentBufferSamplerCount;
- (unsigned int)minLinearTextureAlignmentForPixelFormat:(unsigned int)arg1;
- (unsigned int)minimumLinearTextureAlignmentForPixelFormat:(unsigned int)arg1;
- (_Bool)supportsTextureSampleCount:(unsigned int)arg1;
- (void)getConstantSamplersBitmasks:(unsigned long long **)arg1 uniqueIdentifiers:(unsigned long long **)arg2 constantSamplerCount:(unsigned long long *)arg3 forComputeVariant:(id)arg4;
- (void)getConstantSamplersBitmasks:(unsigned long long **)arg1 uniqueIdentifiers:(unsigned long long **)arg2 constantSamplerCount:(unsigned long long *)arg3 forVertexVariant:(id)arg4 fragmentVariant:(id)arg5;
- (id)pipelinePerformanceStatisticsWithComputeVariant:(id)arg1 compileTimeOutput:(id)arg2;
- (id)pipelinePerformanceStatisticsWithVertexVariant:(id)arg1 fragmentVariant:(id)arg2 vertexCompileTimeOutput:(id)arg3 fragmentCompileTimeOutput:(id)arg4;
- (id)pipelinePerformanceStatisticsWithComputeVariant:(id)arg1;
- (id)pipelinePerformanceStatisticsWithVertexVariant:(id)arg1 fragmentVariant:(id)arg2;
- (CDStruct_596dc0d1)pipelineFlagsWithComputeVariant:(id)arg1;
- (CDStruct_7ce1aa5b)pipelineFlagsWithVertexVariant:(id)arg1 fragmentVariant:(id)arg2;
- (id)newComputePipelineWithDescriptor:(id)arg1 variant:(id)arg2 errorMessage:(id *)arg3;
- (id)newComputePipelineWithDescriptor:(id)arg1 variant:(id)arg2;
- (id)newRenderPipelineWithDescriptor:(id)arg1 vertexVariant:(id)arg2 fragmentVariant:(id)arg3 errorMessage:(id *)arg4;
- (id)newRenderPipelineWithDescriptor:(id)arg1 vertexVariant:(id)arg2 fragmentVariant:(id)arg3;
- (id)newVertexVariantWithCompilerOutput:(id)arg1 pipelineStatisticsOutput:(id)arg2;
- (id)newFragmentVariantWithCompilerOutput:(id)arg1 pipelineStatisticsOutput:(id)arg2;
- (id)newComputeVariantWithCompilerOutput:(id)arg1 pipelineStatisticsOutput:(id)arg2;
- (id)vertexVariantWithCompilerOutput:(id)arg1 pipelineStatisticsOutput:(id)arg2;
- (id)fragmentVariantWithCompilerOutput:(id)arg1 pipelineStatisticsOutput:(id)arg2;
- (id)computeVariantWithCompilerOutput:(id)arg1 pipelineStatisticsOutput:(id)arg2;
- (void)freeComputeFunctionKey:(void *)arg1 keySize:(unsigned long)arg2;
- (void *)computeFunctionKeyWithComputePipelineDescriptor:(id)arg1 options:(unsigned int)arg2 keySize:(unsigned int *)arg3;
- (void *)computeFunctionKeyWithComputePipelineDescriptor:(id)arg1 keySize:(unsigned int *)arg2;
- (void)freeVertexFunctionKey:(void *)arg1 vertexKeySize:(unsigned long)arg2;
- (void)freeFragmentFunctionKey:(void *)arg1 fragmentKeySize:(unsigned long)arg2;
- (void *)vertexFunctionKeyWithRenderPipelineDescriptor:(id)arg1 options:(unsigned int)arg2 nextStageVariant:(id)arg3 vertexKeySize:(unsigned int *)arg4;
- (void *)vertexFunctionKeyWithRenderPipelineDescriptor:(id)arg1 vertexKeySize:(unsigned int *)arg2 nextStageVariant:(id)arg3;
- (void *)fragmentFunctionKeyWithRenderPipelineDescriptor:(id)arg1 options:(unsigned int)arg2 previousStateVariant:(id)arg3 fragmentKeySize:(unsigned int *)arg4;
- (void *)fragmentFunctionKeyWithRenderPipelineDescriptor:(id)arg1 fragmentKeySize:(unsigned int *)arg2 previousStateVariant:(id)arg3;
- (void)registerCompiler:(id)arg1;
@property(readonly) MTLCompiler *compiler; // @synthesize compiler=_compiler;
- (void)newComputePipelineStateWithDescriptor:(id)arg1 options:(unsigned int)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)newComputePipelineStateWithDescriptor:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)newComputePipelineStateWithDescriptor:(id)arg1 options:(unsigned int)arg2 reflection:(id *)arg3 error:(id *)arg4;
- (id)newComputePipelineStateWithDescriptor:(id)arg1 error:(id *)arg2;
- (void)newRenderPipelineStateWithDescriptor:(id)arg1 options:(unsigned int)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)newRenderPipelineStateWithDescriptor:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)newRenderPipelineStateWithDescriptor:(id)arg1 options:(unsigned int)arg2 reflection:(id *)arg3 error:(id *)arg4;
- (id)newRenderPipelineStateWithDescriptor:(id)arg1 error:(id *)arg2;
@property(readonly) unsigned int minTilePixels;
@property(readonly) unsigned int maxTileInlineDataSize;
@property(readonly) unsigned int maxTileSamplers;
@property(readonly) unsigned int maxTileTextures;
@property(readonly) unsigned int maxTileBuffers;
@property(readonly) unsigned int linearTextureArrayAlignmentSlice;
@property(readonly) unsigned int linearTextureArrayAlignmentBytes;
@property(readonly) unsigned int maxFramebufferStorageBits;
@property(readonly) unsigned int maxComputeAttributes;
@property(readonly) unsigned int maxTextureBufferWidth;
@property(readonly) unsigned int maxCustomSamplePositions;
@property(readonly) unsigned int maxViewportCount;
@property(readonly) unsigned int maxIndirectSamplersPerDevice;
@property(readonly) unsigned int maxIndirectSamplers;
@property(readonly) unsigned int maxIndirectTextures;
@property(readonly) unsigned int maxIndirectBuffers;
@property(readonly) unsigned int maxTessellationFactor;
@property(readonly) unsigned int maxInterpolatedComponents;
@property(readonly) unsigned int maxComputeThreadgroupMemoryAlignmentBytes;
@property(readonly) unsigned int maxFunctionConstantIndices;
@property(readonly) unsigned int deviceLinearReadOnlyTextureAlignmentBytes;
@property(readonly) unsigned int deviceLinearTextureAlignmentBytes;
@property(readonly) unsigned int iosurfaceReadOnlyTextureAlignmentBytes;
@property(readonly) unsigned int iosurfaceTextureAlignmentBytes;
@property(readonly) unsigned int linearTextureAlignmentBytes;
@property(readonly) unsigned int maxTextureLayers;
@property(readonly) unsigned int maxTextureDimensionCube;
@property(readonly) unsigned int maxTextureDepth3D;
@property(readonly) unsigned int maxTextureHeight3D;
@property(readonly) unsigned int maxTextureWidth3D;
@property(readonly) unsigned int maxTextureHeight2D;
@property(readonly) unsigned int maxTextureWidth2D;
@property(readonly) unsigned int maxTextureWidth1D;
@property(readonly) unsigned int minBufferNoCopyAlignmentBytes;
@property(readonly) unsigned int minConstantBufferAlignmentBytes;
@property(readonly) unsigned int maxVisibilityQueryOffset;
@property(readonly) float maxPointSize;
@property(readonly) float maxLineWidth;
@property(readonly) unsigned int maxComputeThreadgroupMemory;
@property(readonly) unsigned int maxTotalComputeThreadsPerThreadgroup;
@property(readonly) unsigned int maxComputeLocalMemorySizes;
@property(readonly) unsigned int maxComputeInlineDataSize;
@property(readonly) unsigned int maxComputeSamplers;
@property(readonly) unsigned int maxComputeTextures;
@property(readonly) unsigned int maxComputeBuffers;
@property(readonly) unsigned int maxFragmentInlineDataSize;
@property(readonly) unsigned int maxFragmentSamplers;
@property(readonly) unsigned int maxFragmentTextures;
@property(readonly) unsigned int maxFragmentBuffers;
@property(readonly) unsigned int maxInterpolants;
@property(readonly) unsigned int maxVertexInlineDataSize;
@property(readonly) unsigned int maxVertexSamplers;
@property(readonly) unsigned int maxVertexTextures;
@property(readonly) unsigned int maxVertexBuffers;
@property(readonly) unsigned int maxVertexAttributes;
@property(readonly) unsigned int maxColorAttachments;
@property(readonly) const CDStruct_52c93ad5 *limits;
- (void)initLimits;
- (_Bool)deviceOrFeatureProfileSupportsFeatureSet:(unsigned int)arg1;
- (_Bool)supportsFeatureSet:(unsigned int)arg1;
- (_Bool)deviceSupportsFeatureSet:(unsigned int)arg1;
- (id)newLibraryWithImageFilterFunctionsSPI:(id)arg1 imageFilterFunctionInfo:(const CDStruct_2ff3bdf0 *)arg2 error:(id *)arg3;
- (id)newComputePipelineStateWithImageFilterFunctionsSPI:(id)arg1 imageFilterFunctionInfo:(const CDStruct_2ff3bdf0 *)arg2 error:(id *)arg3;
- (void)newComputePipelineStateWithFunction:(id)arg1 options:(unsigned int)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)newComputePipelineStateWithFunction:(id)arg1 options:(unsigned int)arg2 reflection:(id *)arg3 error:(id *)arg4;
- (void)newComputePipelineStateWithFunction:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)newComputePipelineStateWithFunction:(id)arg1 error:(id *)arg2;
- (void)dumpPipelineDescriptorsIfRequested;
- (id)endCollectingPipelineDescriptors;
- (void)startCollectingPipelineDescriptorsFromLibrary:(id)arg1 filePath:(id)arg2;
- (void)startCollectingPipelineDescriptorsUsingPrefixForNames:(id)arg1;
- (void)startCollectingPipelineDescriptors;
- (void)registerTileRenderPipelineDescriptor:(id)arg1;
- (void)registerComputePipelineDescriptor:(id)arg1;
- (void)registerRenderPipelineDescriptor:(id)arg1;
- (id)newPipelineLibraryWithFilePath:(id)arg1 error:(id *)arg2;
- (id)newLibraryWithCIFilters:(id)arg1 imageFilterFunctionInfo:(const CDStruct_2ff3bdf0 *)arg2 error:(id *)arg3;
- (void)newLibraryWithSource:(id)arg1 options:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)newLibraryWithSource:(id)arg1 options:(id)arg2 error:(id *)arg3;
- (id)newLibraryWithData:(id)arg1 error:(id *)arg2;
- (id)newDefaultLibraryWithBundle:(id)arg1 error:(id *)arg2;
- (id)newDefaultLibrary;
- (CDStruct_c0454aff)pipelineCacheStats;
- (CDStruct_c0454aff)libraryCacheStats;
- (_Bool)copyShaderCacheToPath:(id)arg1;
- (void)unloadShaderCaches;
- (id)productName;
- (id)familyName;
- (id)vendorName;
- (void)compilerPropagatesThreadPriority:(_Bool)arg1;
- (id)serializeStructType:(id)arg1;
- (id)serializeStructType:(id)arg1 version:(unsigned int)arg2;
- (id)newComputePipelineDescriptorWithSerializedData:(id)arg1 deserializationContext:(id)arg2;
- (id)serializeComputePipelineDescriptor:(id)arg1;
- (id)newRenderPipelineDescriptorWithSerializedData:(id)arg1 deserializationContext:(id)arg2;
- (id)serializeRenderPipelineDescriptor:(id)arg1;
- (id)_deviceWrapper;
- (void)_setDeviceWrapper:(id)arg1;
@property(readonly) NSString *name;
- (id)reportLeaks;
- (_Bool)isQuadDataSharingSupported;
@property(readonly, getter=areRasterOrderGroupsSupported) _Bool rasterOrderGroupsSupported;
@property(readonly) unsigned int argumentBuffersSupport;
@property(readonly) unsigned int readWriteTextureSupport;
- (id)newLibraryWithURL:(id)arg1 error:(id *)arg2;
- (void)releaseCacheEntry:(struct MTLLibraryContainer *)arg1;
- (id)newLibraryWithFile:(id)arg1 error:(id *)arg2;
- (void)allowLibrariesFromOtherPlatforms;
- (_Bool)isCollectingPipelines;
- (_Bool)isCollectingLibraries;
- (void)initSerializationPaths;
- (void *)getShaderCacheKeys;
- (id)newFunctionWithGLIR:(void *)arg1 inputsDescription:(id)arg2 functionType:(unsigned int)arg3;
- (id)newFunctionWithGLIR:(void *)arg1 functionType:(unsigned int)arg2;
- (id)description;
- (id)formattedDescription:(unsigned int)arg1;
- (_Bool)areProgrammableSamplePositionsSupported;
- (_Bool)supportsFamily:(int)arg1;
- (void)initGPUFamilySupport;
- (void)initFeatureQueries;
- (Class)featureQueryClass;
- (void)dealloc;
- (id)init;
@property(readonly, nonatomic) _Bool supportsFloat16BCubicFiltering;
@property(readonly, nonatomic) _Bool supportsForceSeamsOnCubemaps;
@property(readonly, nonatomic) _Bool supportsTexture2DMultisampleArray;
@property(readonly, nonatomic) _Bool supportsDepthClipModeClampExtended;
@property(readonly, nonatomic) _Bool supportsSIMDReduction;
@property(readonly, nonatomic) _Bool supportsMirrorClampToEdgeSamplerMode;
@property(readonly, nonatomic) _Bool supportsBlackOrWhiteSamplerBorderColors;
@property(readonly, nonatomic) _Bool supportsSIMDShufflesAndBroadcast;
@property(readonly, nonatomic) _Bool supportsShaderMinLODClamp;
@property(readonly, nonatomic) _Bool supportsSIMDGroup;
@property(readonly, nonatomic) _Bool supportsFP32TessFactors;
@property(readonly, nonatomic) _Bool supportsStencilFeedback;
@property(readonly, nonatomic) _Bool supportsMSAAStencilResolveFilter;
@property(readonly, nonatomic) _Bool supportsIndirectTessellation;
@property(readonly, nonatomic) _Bool supportsViewportAndScissorArray;
@property(readonly, nonatomic) _Bool supportsLayeredRendering;
@property(readonly, nonatomic) _Bool supports2DLinearTexArraySPI;
@property(readonly, nonatomic) _Bool supportsSeparateVisibilityAndShadingRate;
@property(readonly, nonatomic) _Bool supportsNonSquareTileShaders;
@property(readonly, nonatomic) _Bool supportsLinearTexture2DArray;
@property(readonly, nonatomic) _Bool supportsRasterOrderGroups;
@property(readonly, nonatomic) _Bool supportsRenderPassWithoutRenderTarget;
@property(readonly, nonatomic) _Bool supportsConcurrentComputeDispatch;
@property(readonly, nonatomic) _Bool supportsQuadShufflesAndBroadcast;
@property(readonly, nonatomic) _Bool supportsTextureCubeArray;
@property(readonly, nonatomic) _Bool supportsReadWriteTextureCubeArguments;
@property(readonly, nonatomic) _Bool supportsReadWriteTextureArguments;
@property(readonly, nonatomic) _Bool supportsNonUniformThreadgroupSize;
@property(readonly, nonatomic) _Bool supportsMipLevelsSmallerThanBlockSize;
@property(readonly, nonatomic) _Bool supportsPostDepthCoverage;
@property(readonly, nonatomic) _Bool supportsNativeHardwareFP16;
@property(readonly, nonatomic) _Bool supportsImageBlockSampleCoverageControl;
@property(readonly, nonatomic) _Bool supportsTileShaders;
@property(readonly, nonatomic) _Bool supportsImageBlocks;
@property(readonly, nonatomic) _Bool supportsRenderTextureWrites;
@property(readonly, nonatomic) _Bool supportsQuadGroup;
@property(readonly, nonatomic) _Bool supportsMemoryOrderAtomics;
@property(readonly, nonatomic) _Bool supportsAlphaYUVFormats;
@property(readonly, nonatomic) _Bool supportsTextureSwizzle;
@property(readonly, nonatomic) _Bool supportsTextureOutOfBoundsReads;
@property(readonly, nonatomic) _Bool supportsNorm16BCubicFiltering;
@property(readonly, nonatomic) _Bool supportsIndirectTextures;
@property(readonly, nonatomic) _Bool supportsIndirectStageInRegion;
@property(readonly, nonatomic) _Bool supportsCMPIndirectCommandBuffers;
@property(readonly, nonatomic) _Bool supportsGFXIndirectCommandBuffers;
@property(readonly, nonatomic) _Bool supportsMSAADepthResolveFilter;
@property(readonly, nonatomic) _Bool supportsMSAAStencilResolve;
@property(readonly, nonatomic) _Bool supportsMSAADepthResolve;
@property(readonly, nonatomic) _Bool supportsSamplerCompareFunction;
@property(readonly, nonatomic) _Bool supportsMutableTier1ArgumentBuffers;
@property(readonly, nonatomic) _Bool supportsCombinedMSAAStoreAndResolveAction;
@property(readonly, nonatomic) _Bool supportsArrayOfSamplers;
@property(readonly, nonatomic) _Bool supportsArrayOfTextures;
@property(readonly, nonatomic) _Bool supportsReadWriteBufferArguments;
@property(readonly, nonatomic) _Bool supportsTessellation;
@property(readonly, nonatomic) _Bool supportsIndirectDrawAndDispatch;
@property(readonly, nonatomic) _Bool supportsBaseVertexInstanceDrawing;
@property(readonly, nonatomic) _Bool supportsCountingOcclusionQuery;
@property(readonly, nonatomic) _Bool supportsFragmentBufferWrites;
@property(readonly, nonatomic) _Bool supportsExtendedXR10Formats;
@property(readonly, nonatomic) _Bool supports3DASTCTextures;
@property(readonly, nonatomic) _Bool supportsPacked32TextureBufferWrites;
@property(readonly, nonatomic) _Bool supportsDepthClipMode;
@property(readonly, nonatomic) _Bool supportsSRGBwrites;
@property(readonly, nonatomic) _Bool supportsPublicXR10Formats;
@property(readonly, nonatomic) _Bool supportsExtendedYUVFormats;
@property(readonly, nonatomic) _Bool supportsASTCTextureCompression;
@property(readonly, nonatomic) _Bool supportsGPUStatistics;
@property(readonly, nonatomic) _Bool supportsSeparateDepthStencil;
@property(readonly, nonatomic) _Bool supportsRelaxedTextureViewRequirements;
@property(readonly, nonatomic) _Bool supportsShaderLODAverage;
@property(readonly, nonatomic) _Bool supportsInvariantVertexPosition;
@property(readonly, nonatomic) _Bool supportsFastMathInfNaNPropagation;
@property(readonly, nonatomic) _Bool supportsMemorylessRenderTargets;
@property(readonly, nonatomic) _Bool supportsRenderToLinearTextures;
@property(readonly, nonatomic) _Bool supportsProgrammableBlending;
@property(readonly, nonatomic) _Bool supportsBufferWithIOSurface;
@property(readonly, nonatomic) _Bool supportsFragmentOnlyEncoders;
@property(readonly, nonatomic) _Bool supportsPipelineLibraries;
@property(readonly, nonatomic) _Bool supportsLinearTextureFromSharedBuffer;
@property(readonly, nonatomic) _Bool supportsNonPrivateMSAATextures;
@property(readonly, nonatomic) _Bool supportsNonPrivateDepthStencilTextures;
@property(readonly, nonatomic) _Bool supportsLimitedYUVFormats;
@property(readonly, nonatomic) _Bool supportsOpenCLTextureWriteSwizzles;
@property(readonly, nonatomic) _Bool supportsPlacementHeaps;
@property(readonly, nonatomic) _Bool supports32bpcMSAATextures;
@property(readonly, nonatomic) _Bool supportsSamplerAddressModeClampToHalfBorder;
@property(readonly, nonatomic) _Bool supportsCustomBorderColor;
@property(readonly, nonatomic) _Bool supportsLargeFramebufferConfigs;
@property(readonly, nonatomic) _Bool supports3DBCTextures;
@property(readonly, nonatomic) _Bool supportsBCTextureCompression;
@property(readonly, nonatomic) _Bool supportsProgrammableSamplePositions;
@property(readonly, nonatomic) _Bool supportsReadWriteTextureArgumentsTier2;
@property(readonly, nonatomic) _Bool supportsArgumentBuffersTier2;
@property(readonly, nonatomic) _Bool supportsBufferlessClientStorageTexture;
@property(readonly, nonatomic) _Bool supportsQuadReduction;

// Remaining properties
@property(readonly) unsigned int maxBufferLength; // @dynamic maxBufferLength;

@end

