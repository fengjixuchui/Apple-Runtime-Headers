//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <AppKit/NSView.h>

#import <QuickLookUI/CALayerDelegate-Protocol.h>
#import <QuickLookUI/NSDraggingDestination-Protocol.h>
#import <QuickLookUI/NSGestureRecognizerDelegate-Protocol.h>
#import <QuickLookUI/QLPreviewDragDelegate-Protocol.h>
#import <QuickLookUI/QLPreviewTextOverlayHostDelegate-Protocol.h>
#import <QuickLookUI/QLScrollControllerDelegate-Protocol.h>
#import <QuickLookUI/QLScrollable-Protocol.h>
#import <QuickLookUI/QLSeamlessOpenerDelegate-Protocol.h>

@class CALayer, NSClickGestureRecognizer, NSImage, NSMutableSet, NSPanGestureRecognizer, NSSet, NSString, QLPreviewDocument, QLPreviewDragController, QLPreviewViewReserved;
@protocol QLPreviewCustomView, QLPreviewItem, QLPreviewViewDelegate;

@interface QLPreviewView : NSView <QLPreviewTextOverlayHostDelegate, QLSeamlessOpenerDelegate, NSDraggingDestination, QLScrollable, QLScrollControllerDelegate, CALayerDelegate, NSGestureRecognizerDelegate, QLPreviewDragDelegate>
{
    QLPreviewViewReserved *_reserved;
    NSMutableSet *_savingDocuments;
    long long _draggingFormation;
}

+ (id)_descriptionOfDisplayable:(id)arg1;
+ (id)keyPathsForValuesAffectingPreviewUsefulFrame;
+ (id)keyPathsForValuesAffectingPreviewContentFrameForSeamlessOpening;
+ (id)keyPathsForValuesAffectingPreviewOpaqueFrame;
+ (id)keyPathsForValuesAffectingPreviewContentFrame;
+ (id)keyPathsForValuesAffectingPreviewDocumentFrame;
+ (id)keyPathsForValuesAffectingHorizontalKnobProportion;
+ (id)keyPathsForValuesAffectingHorizontalScrollValue;
+ (id)keyPathsForValuesAffectingVerticalKnobProportion;
+ (id)keyPathsForValuesAffectingVerticalScrollValue;
+ (id)keyPathsForValuesAffectingProgress;
+ (id)keyPathsForValuesAffectingAutoZooms;
+ (id)keyPathsForValuesAffectingZoomFactor;
+ (id)keyPathsForValuesAffectingFocusPoint;
+ (id)keyPathsForValuesAffectingZoomFactorToFitWidth;
+ (id)keyPathsForValuesAffectingMaxZoomFactor;
+ (id)keyPathsForValuesAffectingNeedsZoomControl;
+ (id)keyPathsForValuesAffectingCurrentHorizontalScroll;
+ (id)keyPathsForValuesAffectingTotalHorizontalScroll;
+ (id)keyPathsForValuesAffectingCurrentScroll;
+ (id)keyPathsForValuesAffectingTotalScroll;
+ (id)keyPathsForValuesAffectingNeedsScrollControl;
+ (id)keyPathsForValuesAffectingCurrentPage;
+ (id)keyPathsForValuesAffectingNumberOfPages;
+ (id)keyPathsForValuesAffectingNeedsPageControl;
+ (id)keyPathsForValuesAffectingPlayedToTheEnd;
+ (id)keyPathsForValuesAffectingCurrentTime;
+ (id)keyPathsForValuesAffectingSeekTolerance;
+ (id)keyPathsForValuesAffectingDuration;
+ (id)keyPathsForValuesAffectingPlaying;
+ (id)keyPathsForValuesAffectingNeedsTimeControl;
+ (id)keyPathsForValuesAffectingTrimmingSupported;
+ (id)keyPathsForValuesAffectingNeedsPlayControl;
+ (id)keyPathsForValuesAffectingVolume;
+ (id)keyPathsForValuesAffectingMuted;
+ (id)keyPathsForValuesAffectingNeedsVolumeControl;
+ (id)keyPathsForValuesAffectingHasHorizontalScroller;
+ (id)keyPathsForValuesAffectingDisplayState;
+ (id)keyPathsForValuesAffectingDisplayedDisplayBundle;
+ (id)keyPathsForValuesAffectingDisplayBundleID;
+ (id)keyPathsForValuesAffectingDisplayedPreviewItem;
+ (id)keyPathsForValuesAffectingTouchBar;
+ (BOOL)requiresConstraintBasedLayout;
+ (Class)_dragGestureRecognizerClass;
+ (id)supportedContentTypesForMode:(int)arg1;
+ (id)defaultSupportedDisplayBundleIDsForMode:(int)arg1;
+ (void)prewarmUIService;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
+ (void)initialize;
+ (void)_setupDiskWatch;
+ (void)_registerVNodeSchemeHandler;
+ (void)setVNodeDelegate:(id)arg1;
+ (BOOL)isVNodeURL:(id)arg1;
+ (id)vNodeURLWithPath:(id)arg1;
@property long long draggingFormation; // @synthesize draggingFormation=_draggingFormation;
@property(retain) NSMutableSet *savingDocuments; // @synthesize savingDocuments=_savingDocuments;
- (id)forcedContentTypeUTI;
- (void)setForcedContentTypeUTI:(id)arg1;
- (id)mandatoryServer;
- (void)setMandatoryServer:(id)arg1;
- (BOOL)debugHighlighted;
- (void)setDebugHighlighted:(BOOL)arg1;
- (id)viewsDescription;
- (id)_hierarchicalDescriptionForView:(id)arg1 level:(int)arg2;
- (id)_descriptionForView:(id)arg1;
- (void)debugPreview:(id)arg1;
@property(readonly, copy) NSString *description;
@property(readonly) CALayer *contentLayer;
- (BOOL)generateThumbnailForPage:(unsigned long long)arg1 maxSize:(struct CGSize)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (struct CGImage *)copyImageRepresentationWithFrame:(struct CGRect *)arg1;
- (void)getImageRepresentationWithFrame:(struct CGRect)arg1 completion:(CDUnknownBlockType)arg2;
@property(readonly) NSImage *contentImage;
- (BOOL)_accessibilityIsEmpty;
- (BOOL)_accessibilityIsLoading;
@property BOOL allowsAlerts;
- (BOOL)shouldOpenURL:(id)arg1;
- (void)openExternalURL:(id)arg1;
- (BOOL)openExternalURLNoChecks:(id)arg1;
- (id)appURLForNextOpening;
- (void)setAppURLForNextOpening:(id)arg1;
- (id)launchURLForPreviewItem:(id)arg1;
- (id)seamlessOpener:(id)arg1 sourcePreviewViewForPreviewItem:(id)arg2;
- (void)discardAccessoryControllers;
- (void)pathWatcher:(id)arg1 fileAtURLWasDeleted:(id)arg2;
- (void)pathWatcher:(id)arg1 fileAtURLWasModified:(id)arg2 onlyAttributes:(BOOL)arg3;
- (void)pathWatcher:(id)arg1 fileAtURLWasMoved:(id)arg2;
- (void)_invalidateCachedDocumentForURL:(id)arg1;
- (void)stopWatchingURL:(id)arg1;
- (void)startWatchingURL:(id)arg1;
- (void)stop:(id)arg1;
- (void)start:(id)arg1;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (void)backingScaleDidChange:(id)arg1;
- (void)viewDidEndLiveResize;
- (void)_windowWillClose:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)viewDidUnhide;
- (void)viewDidHide;
- (void)resizeSubviewsWithOldSize:(struct CGSize)arg1;
- (void)setUpdatePreviewSize:(BOOL)arg1;
- (struct CGSize)optimalSizeForBoundingSize:(struct CGSize)arg1;
@property(readonly) struct CGSize naturalPreviewSize;
@property BOOL sizesPreviewToFit;
@property(readonly) BOOL prefersSizeToFit;
- (BOOL)fastDrawing;
@property(readonly) BOOL scalable;
@property(readonly) struct CGRect previewUsefulFrame;
- (struct CGRect)previewContentFrameForSeamlessOpening;
- (struct CGRect)previewOpaqueFrame;
@property(readonly) struct CGRect previewContentFrame;
@property(readonly) struct CGRect previewDocumentFrame;
- (struct CGRect)_convertRectToDisplayedDisplayable:(struct CGRect)arg1;
- (struct CGRect)_convertRectFromDisplayedDisplayable:(struct CGRect)arg1;
- (void)_updateFrameOfDisplayable:(id)arg1;
- (struct CGSize)optimalSizeFromCurrentSize:(struct CGSize)arg1 minSize:(struct CGSize)arg2 maxSize:(struct CGSize)arg3 defaultSize:(struct CGSize)arg4 maxArea:(double)arg5 screen:(id)arg6;
- (struct CGSize)minimumSizeOfContentWithDefault:(struct CGSize)arg1;
- (BOOL)_shouldAdaptSizeToScreen;
- (BOOL)_adaptPreviewFrameForStaticPreviewSizeHint:(struct CGRect *)arg1 minSize:(struct CGSize)arg2 maxSize:(struct CGSize)arg3;
- (void)_adjustDeltaPosition:(struct CGRect *)arg1 forDisplayBundle:(id)arg2;
- (BOOL)wantsScrollEventsForSwipeTrackingOnAxis:(long long)arg1;
- (BOOL)wantsPeriodicDraggingUpdates;
- (BOOL)performDragOperation:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;
- (id)draggingItems;
- (id)pasteboardWriter;
- (BOOL)setupDragPasteboard:(id)arg1;
- (BOOL)useLegacyDragging;
- (struct CGRect)borderFrame;
- (struct CGRect)sourceFrame;
- (id)draggingSourceView;
- (id)draggedURL;
- (void)selectAll:(id)arg1;
- (void)copy:(id)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;
- (id)hitTest:(struct CGPoint)arg1;
- (id)_previewFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)acceptsFirstResponder;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (BOOL)mouseDownCanMoveWindow;
- (BOOL)shouldDelayWindowOrderingForEvent:(id)arg1;
- (void)setTracksMouseMovements:(BOOL)arg1;
- (BOOL)tracksMouseMovements;
- (struct CGPoint)locationForEvent:(id)arg1;
- (struct CGPoint)_displayBundlePointForWindowPoint:(struct CGPoint)arg1;
- (id)viewForLocation:(struct CGPoint)arg1;
- (id)viewForEvent:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)doCommandBySelector:(SEL)arg1;
- (void)mouseDown:(id)arg1;
- (void)_stopHandlingEventWithPreviousValue:(BOOL)arg1;
- (void)_stopHandlingEvent;
- (BOOL)_startHandlingEvent;
- (void)_deactivateOverlayControls;
- (void)_activateOverlayControls;
- (void)didHideOverlay:(id)arg1;
- (void)willShowOverlay:(id)arg1;
- (id)_pathString;
- (BOOL)_hasPathOverlay;
- (void)_deactivatePathOverlay;
- (void)_activatePathOverlay;
- (BOOL)_hasSetupPageNumberOverlay;
- (void)_deactivatePageNumberDisplay;
- (void)_activatePageNumberDisplay;
- (void)scrollController:(id)arg1 scrollerDidEndTracking:(id)arg2;
- (double)scrollController:(id)arg1 pageScrollPercentageForScroller:(id)arg2;
- (double)horizontalKnobProportion;
@property double horizontalScrollValue;
@property(readonly) double verticalKnobProportion;
@property double verticalScrollValue;
- (void)_deactivateViewControls;
- (void)_activateViewControls;
- (id)_previewContainerViewConstraintsFromContainerViewFrame:(struct CGRect)arg1;
- (id)_bottomConstraint;
- (void)_setPreviewContainerViewFrame:(struct CGRect)arg1;
- (void)_updateControls;
- (void)_shouldShowViewControls:(char *)arg1 overlayControls:(char *)arg2 forDisplayBundle:(id)arg3;
- (float)progress;
@property BOOL autoZooms;
@property double zoomFactor;
@property struct CGPoint focusPoint;
@property(readonly) double zoomFactorToFitWidth;
@property(readonly) double maxZoomFactor;
@property(readonly) BOOL needsZoomControl;
- (BOOL)_needsZoomControlForDisplayBundle:(id)arg1;
@property double currentHorizontalScroll;
@property(readonly) double totalHorizontalScroll;
@property double currentScroll;
@property(readonly) double totalScroll;
@property(readonly) BOOL needsScrollControl;
- (BOOL)_needsScrollControlForDisplayBundle:(id)arg1;
@property unsigned long long currentPage;
@property(readonly) unsigned long long numberOfPages;
@property(readonly) BOOL needsPageControl;
- (BOOL)_needsPageControlForDisplayBundle:(id)arg1;
@property(readonly) BOOL playedToTheEnd;
@property double currentTime;
- (void)setSeekTolerance:(double)arg1;
- (double)seekTolerance;
@property(readonly) double duration;
@property BOOL playing;
@property(readonly) BOOL needsTimeControl;
- (BOOL)_needsTimeControlForDisplayBundle:(id)arg1;
@property(readonly) BOOL trimmingSupported;
- (BOOL)hidePlayControl;
@property(readonly) BOOL needsPlayControl;
- (BOOL)_needsPlayControlForDisplayBundle:(id)arg1;
@property float volume;
@property BOOL muted;
@property(readonly) BOOL needsVolumeControl;
@property BOOL showControls;
@property(readonly) BOOL hasControls;
- (void)setFullLayers:(BOOL)arg1;
- (BOOL)fullLayers;
@property BOOL enableRemotePreviews;
@property int mode;
- (void)setMode:(int)arg1 reloadItemIfNeeded:(BOOL)arg2;
- (void)close;
@property BOOL shouldCloseWithWindow;
@property(retain) id displayState;
- (BOOL)hasHorizontalScroller;
- (BOOL)usesLargeIndicator;
@property double loadingTimeout;
@property(retain) NSView *loadingView;
@property(retain) NSView<QLPreviewCustomView> *genericView;
@property(retain) NSView *emptyView;
- (void)didOpen;
- (void)willOpen;
- (void)_didHideDisplayable:(id)arg1;
- (void)didHide;
- (void)_willHideDisplayable:(id)arg1;
- (void)willHide;
- (void)_didShowDisplayable:(id)arg1;
- (void)didShow;
- (void)_willShowDisplayable:(id)arg1;
- (void)willShow;
- (BOOL)_canChangeVisibilityTo:(int)arg1;
- (BOOL)_isVisible;
@property BOOL visible;
- (BOOL)_shouldManageVisibilityOnlyIfVisible:(BOOL)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)windowKeyDidChange:(id)arg1;
- (void)diskWillEject:(id)arg1;
- (void)previewStatusDidChange;
- (int)previewStatus;
- (void)deactivate;
- (void)activate;
- (void)performOpenTransitionWithUpdatedProperties:(CDUnknownBlockType)arg1;
- (void)updateDisplayedDocumentWithTransition:(int)arg1;
- (void)setInitialThumbnailSize:(struct CGSize)arg1;
- (struct CGSize)initialThumbnailSize;
- (void)setInitialDisplayBundleID:(id)arg1;
- (id)initialDisplayBundleID;
- (void)setLoadingForForceTouch:(BOOL)arg1;
- (BOOL)loadingForForceTouch;
- (void)setHideLoadingSpinner:(BOOL)arg1;
- (BOOL)hideLoadingSpinner;
- (void)updateLoadingLayerWithTransitionImage:(id)arg1 transitionFrame:(struct CGRect)arg2;
-     // Error parsing type: @32@0:8^{__QLPreview={__CFRuntimeBase=QAQ}@^{__CFURL}^{__CFDictionary}^{__CFString}@{?=q^?^?^?^?}^vIiCCi^{__CFDictionary}^{__QLServer}^{__QLGenerator}CICCCC^{__CFString}^{__CFString}i^{__CFSet}{CGSize=dd}C^{__CFString}^{__CFString}^{__CFString}^{__CFURL}^{__CFData}^{__CFData}iiiiiI{CGRect={CGPoint=dd}{CGSize=dd}}CCC^{__CFString}C@}16@24, name: loadingLayerForPreview:displayBundle:
-     // Error parsing type: v40@0:8@16^{__QLPreview={__CFRuntimeBase=QAQ}@^{__CFURL}^{__CFDictionary}^{__CFString}@{?=q^?^?^?^?}^vIiCCi^{__CFDictionary}^{__QLServer}^{__QLGenerator}CICCCC^{__CFString}^{__CFString}i^{__CFSet}{CGSize=dd}C^{__CFString}^{__CFString}^{__CFString}^{__CFURL}^{__CFData}^{__CFData}iiiiiI{CGRect={CGPoint=dd}{CGSize=dd}}CCC^{__CFString}C@}24@32, name: updateLoadingLayerAppearance:forPreview:displayBundle:
- (id)loadingDisplayable;
- (void)setLoadingDisplayable:(id)arg1;
- (id)sizingDisplayBundle;
- (id)displayedDisplayBundle;
- (id)displayableContentView;
- (id)_displayable;
- (BOOL)_shouldShowDisplayable:(id)arg1 forDisplayBundle:(id)arg2;
- (BOOL)shouldShowInlinePreviewContent;
- (BOOL)shouldShowInlinePreviewControls;
- (BOOL)hasValidPreview;
- (void)_setDisplayable:(id)arg1 transition:(int)arg2;
- (BOOL)_contentIsSharedBetweenOldDisplayable:(id)arg1 andNewDisplayable:(id)arg2;
- (void)addHiddenContentViewForLoading:(id)arg1;
- (BOOL)_updateDisplayableWithTransition:(int)arg1;
- (void)_recycleDocument:(id)arg1 restore:(BOOL)arg2;
- (BOOL)_prepareToRecycleDocument:(id)arg1 willRestore:(char *)arg2;
- (void)_updateDisplayedDocumentWithDelayedDisplay:(BOOL)arg1;
- (id)displayedDocument;
- (void)_setDisplayedDocument:(id)arg1 transition:(int)arg2;
- (BOOL)_canChangeDisplayedDocument;
@property(retain) QLPreviewDocument *document;
- (void)previewDocument:(id)arg1 didSaveEdit:(BOOL)arg2 toURL:(id)arg3;
- (void)_setDocument:(id)arg1 canDelayDisplay:(BOOL)arg2;
- (void)_setPreviewItem:(id)arg1;
- (void)viewDidChangeEffectiveAppearance;
- (void)setAppearanceOfDisplayable:(id)arg1;
- (void)_updateBackingScaleFactor;
- (void)_updateOpaqueShape;
- (id)dragContentView;
- (id)displayBundleWithID:(id)arg1 forPreviewItem:(id)arg2;
- (void)restoreStolenDocument:(id)arg1;
- (id)stealDocument;
- (BOOL)canStealDocumentFromPreviewView:(id)arg1;
- (BOOL)canRestoreDocument:(id)arg1;
- (void)setCacheManager:(id)arg1;
- (id)cacheManager;
- (void)flushCache;
- (BOOL)hasCachedDocumentForItem:(id)arg1;
@property unsigned long long cacheSize;
- (id)screen;
- (double)backingScaleFactor;
- (id)currentURL;
- (BOOL)shouldUseHardwareCodec;
- (struct NSEdgeInsets)visualMargins;
- (void)setVisualMargins:(struct NSEdgeInsets)arg1;
- (int)flavor;
- (BOOL)windowSupportsRemoteViews;
- (BOOL)isWindowKey;
- (BOOL)isRemote;
- (void)previewDocumentDidChangeDisplayable:(id)arg1;
- (void)previewDocumentDidLoad:(id)arg1;
- (void)previewDocument:(id)arg1 gotDisplayBundle:(id)arg2;
- (void)refreshDisplayableForDocument:(id)arg1;
- (void)forceTimeoutForDocument:(id)arg1;
- (void)_timedOut;
- (void)_stopTimeOut;
- (void)_startTimeOut;
- (void)_endLoadingDocument:(id)arg1;
- (id)_defaultLoadingHints;
- (void)_startLoadingDocumentWithTimeoutDate:(id)arg1;
- (BOOL)shouldUseAsyncLoading;
- (void)_startLoadingPreviewItem:(id)arg1 timeoutDate:(id)arg2;
@property(readonly) BOOL isGeneric;
@property(readonly) BOOL isLoaded;
- (void)giveInputFocus;
- (int)inputFocusType;
- (BOOL)isDisplayingError;
- (BOOL)shouldPreserveDisplayStateWhenNavigating;
- (id)titleForPreviewItem:(id)arg1 options:(int)arg2;
- (id)customDisplayName;
- (BOOL)isNativeFileType;
@property(readonly) BOOL canBeResized;
- (id)displayBundleID;
- (id)_displayedBundleID;
- (id)_filteredDisplayBundleID;
- (id)_actualDisplayBundleID;
- (BOOL)canAcceptDocument:(id)arg1;
- (BOOL)shouldAcceptDisplayBundleID:(id)arg1;
- (BOOL)shouldRemoteDisplayBundleID:(id)arg1;
@property(readonly) id <QLPreviewItem> displayedPreviewItem;
- (void)refreshPreviewItem;
- (void)refreshPreviewItemWithTimeoutDate:(id)arg1;
- (id)touchBar;
- (void)setPreviewItem:(id)arg1 blockingUntilLoading:(BOOL)arg2 timeoutDate:(id)arg3 transition:(int)arg4;
- (void)setPreviewItem:(id)arg1 blockingUntilLoading:(BOOL)arg2 timeoutDate:(id)arg3;
- (void)setPreviewItem:(id)arg1 blockingUntilLoading:(BOOL)arg2;
@property(retain) id <QLPreviewItem> previewItem;
- (id)_currentPreviewedURL;
- (BOOL)_allowAutoresizingMaskFixupDueToSuperOverridingResizeSubviews;
- (unsigned int)_CAViewFlags;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 style:(unsigned long long)arg2;
- (BOOL)gestureRecognizer:(id)arg1 shouldAttemptToRecognizeWithEvent:(id)arg2;
- (BOOL)gestureRecognizerShouldBegin:(id)arg1;
- (void)startDragFromGesture:(id)arg1 beganOrFailedHandler:(CDUnknownBlockType)arg2;
- (void)receivedDragGesture:(id)arg1;
- (void)receivedPinchGestureWithMagnification:(double)arg1;
- (void)receivedDoubleClickGesture:(id)arg1;
- (void)_commonInitWithStyle:(unsigned long long)arg1;
- (void)_setupLayerIfNeeded;
- (void)setDoubleClickModifierFlags:(unsigned long long)arg1;
- (unsigned long long)doubleClickModifierFlags;
- (void)setAllowLoadingOfUnsupportedDisplayBundleIDs:(BOOL)arg1;
- (BOOL)allowLoadingOfUnsupportedDisplayBundleIDs;
@property BOOL showRemainingTime;
@property BOOL autostarts;
@property BOOL automaticallyMakePreviewFirstResponder;
@property id <QLPreviewViewDelegate> delegate;
@property BOOL inHitTest;
@property(retain) NSClickGestureRecognizer *doubleClickRecognizer;
@property(getter=isDragging) BOOL dragging;
@property(retain) QLPreviewDragController *dragController;
@property(retain) NSPanGestureRecognizer *dragGestureRecognizer;
@property(retain) NSSet *supportedDisplayBundleIDs;
- (void)setGenericDisplayable:(id)arg1;
- (id)genericDisplayable;
- (void)setEmptyDisplayable:(id)arg1;
- (id)emptyDisplayable;
- (id)timeoutDateFromNow;
- (void)set_loadingView:(id)arg1;
- (void)set_genericView:(id)arg1;
- (void)set_emptyView:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

