//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class AVAudioSessionDataSourceDescription, AVAudioSessionPortDescription, AVAudioSessionRouteDescription, CAReporter, NSArray, NSDictionary, NSString;

@interface AVAudioSession : NSObject
{
    void *_impl;
    BOOL _otherAudioPlaying;
    CAReporter *_reporter;
}

+ (id)sharedInstance;
+ (id)primarySession;
@property(retain) CAReporter *reporter; // @synthesize reporter=_reporter;
@property(readonly, getter=isOtherAudioPlaying) BOOL otherAudioPlaying; // @synthesize otherAudioPlaying=_otherAudioPlaying;
- (void).cxx_destruct;
@property(readonly) BOOL allowHapticsAndSystemSoundsDuringRecording;
- (BOOL)setAllowHapticsAndSystemSoundsDuringRecording:(BOOL)arg1 error:(id *)arg2;
@property(readonly) unsigned long long promptStyle;
@property(readonly) NSArray *availableInputs;
@property(readonly) BOOL secondaryAudioShouldBeSilencedHint;
- (BOOL)otherAudioPlaying;
@property(readonly) AVAudioSessionPortDescription *preferredInput;
- (BOOL)setPreferredInput:(id)arg1 error:(id *)arg2;
- (BOOL)overrideOutputAudioPort:(unsigned long long)arg1 error:(id *)arg2;
- (void)requestRecordPermission:(CDUnknownBlockType)arg1;
@property(readonly) unsigned long long recordPermission;
- (BOOL)setMode:(id)arg1 error:(id *)arg2;
- (BOOL)setCategory:(id)arg1 mode:(id)arg2 routeSharingPolicy:(unsigned long long)arg3 options:(unsigned long long)arg4 error:(id *)arg5;
- (BOOL)setCategory:(id)arg1 mode:(id)arg2 options:(unsigned long long)arg3 error:(id *)arg4;
- (BOOL)setCategory:(id)arg1 withOptions:(unsigned long long)arg2 error:(id *)arg3;
- (BOOL)setCategory:(id)arg1 error:(id *)arg2;
@property(readonly) NSArray *availableModes;
@property(readonly) NSArray *availableCategories;
@property(readonly) AVAudioSessionRouteDescription *currentRoute;
- (id)getUpdatedCurrentRoute;
@property(readonly) unsigned long long categoryOptions;
@property(readonly) NSString *mode;
@property(readonly) NSString *category;
- (BOOL)canActivate:(id *)arg1;
- (BOOL)setActive:(BOOL)arg1 withOptions:(unsigned long long)arg2 error:(id *)arg3;
- (BOOL)setActive:(BOOL)arg1 error:(id *)arg2;
- (BOOL)hasPhoneCallBehaviour;
- (unsigned short)determineServiceType;
- (void)setReporterState:(BOOL)arg1;
- (BOOL)setRouteSharingPolicy:(unsigned long long)arg1 error:(id *)arg2;
@property(readonly) unsigned long long routeSharingPolicy;
- (unsigned long long)preferredRouteSharingPolicy;
- (void)setCanBeNowPlayingApp:(BOOL)arg1;
- (BOOL)canBeNowPlayingApp;
@property(readonly) NSString *routingContextUID;
- (id)GetFigRoutingContextUUIDForDefaultRouteSharingPolicy;
- (void)dealloc;
- (void)releaseAudioSessionStructure;
- (void)updateDeviceStreamDescriptions:(unsigned int)arg1 element:(unsigned int)arg2;
- (void)handleStreamChangeNotification:(struct ComponentInstanceRecord *)arg1 property:(unsigned int)arg2 scope:(unsigned int)arg3 element:(unsigned int)arg4;
- (id)buildActiveDeviceString;
- (void)sendActiveDeviceMessage;
- (void)HandleRouteChange;
- (void)HandleDeviceRestart;
- (id)createPortsfromAggregateDevice:(unsigned int)arg1;
- (id)getChannelsFromAU:(unsigned int)arg1 PortName:(id)arg2 PortID:(id)arg3;
- (void)addAggregateDeviceObserver;
- (id)getATDefaultDeviceAggregate;
- (unsigned int)getATDefaultDeviceAggregateID;
- (sync_guard_edae64bb)privateGetGuardOfImplementation;
- (void)handleAppStateResumeFinal:(id)arg1;
- (void)handleAppStatePauseFinal:(id)arg1;
- (void)registerForFakeInterruptionNotifications;
- (id)initForMacOS;
- (BOOL)setAggregatedIOPreference:(unsigned long long)arg1 error:(id *)arg2;
@property(readonly) double inputLatency;
@property(readonly) double outputLatency;
@property(readonly) float outputVolume;
@property(readonly) long long outputNumberOfChannels;
@property(readonly) long long inputNumberOfChannels;
@property(readonly) double sampleRate;
- (BOOL)setOutputDataSource:(id)arg1 error:(id *)arg2;
@property(readonly) AVAudioSessionDataSourceDescription *outputDataSource;
@property(readonly) NSArray *outputDataSources;
- (BOOL)setInputDataSource:(id)arg1 error:(id *)arg2;
@property(readonly) AVAudioSessionDataSourceDescription *inputDataSource;
@property(readonly) NSArray *inputDataSources;
@property(readonly) float inputGain;
- (BOOL)setInputGain:(float)arg1 error:(id *)arg2;
- (BOOL)isOutputAvailable;
@property(readonly, getter=isInputAvailable) BOOL inputAvailable;
@property(readonly, getter=isInputGainSettable) BOOL inputGainSettable;
@property(readonly) long long maximumOutputNumberOfChannels;
@property(readonly) long long maximumInputNumberOfChannels;
@property(readonly) long long preferredOutputNumberOfChannels;
- (BOOL)setPreferredOutputNumberOfChannels:(long long)arg1 error:(id *)arg2;
@property(readonly) long long preferredInputNumberOfChannels;
- (BOOL)setPreferredInputNumberOfChannels:(long long)arg1 error:(id *)arg2;
@property(readonly) double IOBufferDuration;
@property(readonly) double preferredIOBufferDuration;
- (BOOL)setPreferredIOBufferDuration:(double)arg1 error:(id *)arg2;
- (BOOL)setPreferredSampleRate:(double)arg1 error:(id *)arg2;
@property(readonly) double preferredSampleRate;
- (BOOL)selectIndependentRoutingContext:(id *)arg1;
@property(readonly) long long reporterID;
- (BOOL)setReporterID:(long long)arg1 error:(id *)arg2;
@property(readonly) BOOL lastActivationStoppedNowPlayingApp;
@property(readonly) long long interruptionPriority;
- (BOOL)setInterruptionPriority:(long long)arg1 error:(id *)arg2;
@property(readonly) unsigned long long sessionType;
- (BOOL)silenceOutput:(unsigned long long)arg1 error:(id *)arg2;
@property(readonly) unsigned long long IOBufferFrameSize;
@property(readonly) unsigned long long preferredIOBufferFrameSize;
- (BOOL)setPreferredIOBufferFrameSize:(unsigned long long)arg1 error:(id *)arg2;
@property(readonly) double outputSafetyOffset;
@property(readonly) double inputSafetyOffset;
- (BOOL)clearInputPreferences:(id *)arg1;
- (BOOL)setActivationContext:(id)arg1 error:(id *)arg2;
- (BOOL)setDefaultChatMode:(id)arg1 error:(id *)arg2;
@property(readonly, getter=isHardwareFormatFixedToMultiChannel) BOOL hardwareFormatFixedToMultiChannel;
@property BOOL allowAllBuiltInDataSources;
- (BOOL)setRecordingFromRemoteInput:(BOOL)arg1 error:(id *)arg2;
@property(readonly) BOOL recordingFromRemoteInput;
- (BOOL)setForceSoundCheck:(BOOL)arg1 error:(id *)arg2;
@property(readonly) BOOL forceSoundCheck;
@property(readonly) BOOL isPiPAvailable;
@property(readonly) BOOL isEarpieceActiveNoiseCancelationEnabled;
@property(readonly) BOOL isDolbyAtmosAvailable;
@property(readonly) BOOL isDolbyDigitalEncoderAvailable;
@property(readonly) long long audioFormat;
@property(readonly) NSArray *audioFormats;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;
@property(readonly) BOOL isPrimary;

// Remaining properties
@property(readonly) NSArray *activeSessionDisplayIDs;
@property(readonly) BOOL allowMixableAudioWhileRecording;
@property(readonly) unsigned int opaqueSessionID;
@property(readonly) BOOL participatesInNowPlayingAppPolicy;
@property(readonly) NSDictionary *pickedRoute;
@property(readonly) BOOL requiresNoAudioResources;
@property(readonly) double speechDetectionDeviceSampleRate;
@property(readonly) BOOL usingLongFormAudio;

@end

