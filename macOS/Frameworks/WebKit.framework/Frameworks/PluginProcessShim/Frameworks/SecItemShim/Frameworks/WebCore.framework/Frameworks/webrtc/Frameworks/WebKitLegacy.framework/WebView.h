//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <AppKit/NSView.h>

#import <WebKitLegacy/NSCandidateListTouchBarItemDelegate-Protocol.h>
#import <WebKitLegacy/NSTouchBarDelegate-Protocol.h>
#import <WebKitLegacy/NSTouchBarProvider-Protocol.h>
#import <WebKitLegacy/NSUserInterfaceValidations-Protocol.h>

@class DOMCSSStyleDeclaration, DOMDocument, DOMRange, NSArray, NSData, NSImage, NSString, NSTouchBar, NSUndoManager, NSWindow, WebBackForwardList, WebFrame, WebPreferences, WebScriptObject, WebViewPrivate;
@protocol WebDownloadDelegate, WebEditingDelegate, WebFrameLoadDelegate, WebPolicyDelegate, WebResourceLoadDelegate, WebUIDelegate;

@interface WebView : NSView <NSUserInterfaceValidations, NSCandidateListTouchBarItemDelegate, NSTouchBarDelegate, NSTouchBarProvider>
{
    WebViewPrivate *_private;
}

+ (void)_preflightSpellChecker;
+ (void)_preflightSpellCheckerNow:(id)arg1;
+ (void)_preferencesRemovedNotification:(id)arg1;
+ (void)_cacheModelChangedNotification:(id)arg1;
+ (unsigned long long)_maxCacheModelInAnyInstance;
+ (BOOL)_didSetCacheModel;
+ (void)registerViewClass:(Class)arg1 representationClass:(Class)arg2 forMIMEType:(id)arg3;
+ (void)registerURLSchemeAsLocal:(id)arg1;
+ (id)URLTitleFromPasteboard:(id)arg1;
+ (id)URLFromPasteboard:(id)arg1;
+ (void)setMIMETypesShownAsHTML:(id)arg1;
+ (id)MIMETypesShownAsHTML;
+ (BOOL)canShowMIMETypeAsHTML:(id)arg1;
+ (BOOL)canShowMIMEType:(id)arg1;
+ (BOOL)_canShowMIMEType:(id)arg1 allowingPlugins:(BOOL)arg2;
+ (void)_applicationWillTerminate;
+ (void)_didChangeAutomaticDashSubstitutionEnabled:(id)arg1;
+ (void)_didChangeAutomaticQuoteSubstitutionEnabled:(id)arg1;
+ (BOOL)_shouldAutomaticDashSubstitutionBeEnabled;
+ (BOOL)_shouldAutomaticQuoteSubstitutionBeEnabled;
+ (void)_didChangeAutomaticSpellingCorrectionEnabled:(id)arg1;
+ (BOOL)_shouldAutomaticSpellingCorrectionBeEnabled;
+ (void)_didChangeAutomaticTextReplacementEnabled:(id)arg1;
+ (BOOL)_shouldAutomaticTextReplacementBeEnabled;
+ (void)initialize;
+ (void)_makeAllWebViewsPerformSelector:(SEL)arg1;
+ (void)_setHTTPPipeliningEnabled:(BOOL)arg1;
+ (BOOL)_HTTPPipeliningEnabled;
+ (void)_setLoadResourcesSerially:(BOOL)arg1;
+ (void)_registerURLSchemeAsAllowingDatabaseAccessInPrivateBrowsing:(id)arg1;
+ (void)_registerURLSchemeAsAllowingLocalStorageAccessInPrivateBrowsing:(id)arg1;
+ (void)_registerURLSchemeAsSecure:(id)arg1;
+ (void)_setDomainRelaxationForbidden:(BOOL)arg1 forURLScheme:(id)arg2;
+ (void)_removeAllUserContentFromGroup:(id)arg1;
+ (void)_removeUserStyleSheetsFromGroup:(id)arg1 world:(id)arg2;
+ (void)_removeUserScriptsFromGroup:(id)arg1 world:(id)arg2;
+ (void)_removeUserStyleSheetFromGroup:(id)arg1 world:(id)arg2 url:(id)arg3;
+ (void)_removeUserScriptFromGroup:(id)arg1 world:(id)arg2 url:(id)arg3;
+ (void)_addUserStyleSheetToGroup:(id)arg1 world:(id)arg2 source:(id)arg3 url:(id)arg4 whitelist:(id)arg5 blacklist:(id)arg6 injectedFrames:(int)arg7;
+ (void)_addUserStyleSheetToGroup:(id)arg1 world:(id)arg2 source:(id)arg3 url:(id)arg4 whitelist:(id)arg5 blacklist:(id)arg6;
+ (void)_addUserScriptToGroup:(id)arg1 world:(id)arg2 source:(id)arg3 url:(id)arg4 whitelist:(id)arg5 blacklist:(id)arg6 injectionTime:(int)arg7 injectedFrames:(int)arg8;
+ (void)_addUserScriptToGroup:(id)arg1 world:(id)arg2 source:(id)arg3 url:(id)arg4 whitelist:(id)arg5 blacklist:(id)arg6 injectionTime:(int)arg7;
+ (void)_resetOriginAccessWhitelists;
+ (void)_removeOriginAccessWhitelistEntryWithSourceOrigin:(id)arg1 destinationProtocol:(id)arg2 destinationHost:(id)arg3 allowDestinationSubdomains:(BOOL)arg4;
+ (void)_addOriginAccessWhitelistEntryWithSourceOrigin:(id)arg1 destinationProtocol:(id)arg2 destinationHost:(id)arg3 allowDestinationSubdomains:(BOOL)arg4;
+ (BOOL)_usesTestModeFocusRingColor;
+ (void)_setUsesTestModeFocusRingColor:(BOOL)arg1;
+ (BOOL)_shouldUseFontSmoothing;
+ (void)_setShouldUseFontSmoothing:(BOOL)arg1;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
+ (id)_decodeData:(id)arg1;
+ (BOOL)_canHandleRequest:(id)arg1;
+ (BOOL)_canHandleRequest:(id)arg1 forMainFrame:(BOOL)arg2;
+ (BOOL)_representationExistsForURLScheme:(id)arg1;
+ (id)_generatedMIMETypeForURLScheme:(id)arg1;
+ (void)_registerViewClass:(Class)arg1 representationClass:(Class)arg2 forURLScheme:(id)arg3;
+ (void)_unregisterViewClassAndRepresentationClassForMIMEType:(id)arg1;
+ (BOOL)_hasRemoteInspectorSession;
+ (BOOL)_isRemoteInspectorEnabled;
+ (void)_disableAutoStartRemoteInspector;
+ (void)_disableRemoteInspector;
+ (void)_enableRemoteInspector;
+ (BOOL)_isIconLoadingEnabled;
+ (void)_setIconLoadingEnabled:(BOOL)arg1;
+ (id)_MIMETypeForFile:(id)arg1;
+ (id)suggestedFileExtensionForMIMEType:(id)arg1;
+ (BOOL)canShowFile:(id)arg1;
+ (void)closeAllWebViews;
+ (BOOL)canCloseAllWebViews;
+ (void)_setAlwaysUsesComplexTextCodePath:(BOOL)arg1;
+ (BOOL)_viewClass:(Class *)arg1 andRepresentationClass:(Class *)arg2 forMIMEType:(id)arg3 allowingPlugins:(BOOL)arg4;
+ (void)_unregisterPluginMIMEType:(id)arg1;
+ (void)_registerPluginMIMEType:(id)arg1;
+ (id)_supportedFileExtensions;
+ (id)_supportedMIMETypes;
+ (void)_reportException:(struct OpaqueJSValue *)arg1 inContext:(struct OpaqueJSContext *)arg2;
+ (id)_standardUserAgentWithApplicationName:(id)arg1;
+ (unsigned long long)_cacheModel;
+ (void)_setCacheModel:(unsigned long long)arg1;
+ (BOOL)shouldIncludeInWebKitStatistics;
+ (void)_setFontWhitelist:(id)arg1;
- (id)_responderForResponderOperations;
- (BOOL)_continuousCheckingAllowed;
- (id)_frameViewAtWindowPoint:(struct CGPoint)arg1;
- (BOOL)_isLoading;
- (id)_focusedFrame;
- (float)_deviceScaleFactor;
- (void)candidateListTouchBarItem:(id)arg1 changedCandidateListVisibility:(BOOL)arg2;
- (void)candidateListTouchBarItem:(id)arg1 endSelectingCandidateAtIndex:(long long)arg2;
- (id)touchBar:(id)arg1 makeItemForIdentifier:(id)arg2;
- (id)makeTouchBar;
- (id)previousValidKeyView;
- (id)currentNodeHighlight;
- (void)setCurrentNodeHighlight:(id)arg1;
@property(nonatomic) BOOL shouldUpdateWhileOffscreen;
@property(nonatomic) BOOL drawsBackground;
@property(readonly, nonatomic) DOMDocument *mainFrameDocument;
- (void)_setMainFrameIcon:(id)arg1;
@property(readonly, nonatomic) NSImage *mainFrameIcon;
@property(readonly, copy, nonatomic) NSString *mainFrameTitle;
@property(readonly, nonatomic, getter=isLoading) BOOL loading;
@property(copy, nonatomic) NSString *mainFrameURL;
- (void)removeDragCaret;
- (void)moveDragCaretToPoint:(struct CGPoint)arg1;
- (void)writeElement:(id)arg1 withPasteboardTypes:(id)arg2 toPasteboard:(id)arg3;
- (id)pasteboardTypesForElement:(id)arg1;
- (void)writeSelectionWithPasteboardTypes:(id)arg1 toPasteboard:(id)arg2;
@property(readonly, copy, nonatomic) NSArray *pasteboardTypesForSelection;
@property(readonly, nonatomic) double estimatedProgress;
@property(copy, nonatomic) NSString *groupName;
- (BOOL)searchFor:(id)arg1 direction:(BOOL)arg2 caseSensitive:(BOOL)arg3 wrap:(BOOL)arg4;
- (void)setNextKeyView:(id)arg1;
- (id)_webcore_effectiveFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)acceptsFirstResponder;
- (id)_hitTest:(struct CGPoint *)arg1 dragTypes:(id)arg2;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (int)actionMaskForDraggingInfo:(id)arg1;
- (int)applicationFlags:(id)arg1;
- (BOOL)_shouldAutoscrollForDraggingInfo:(id)arg1;
- (void)_autoscrollForDraggingInfo:(id)arg1 timeDelta:(double)arg2;
- (id)elementAtPoint:(struct CGPoint)arg1;
- (id)_elementAtWindowPoint:(struct CGPoint)arg1;
- (id)documentViewAtWindowPoint:(struct CGPoint)arg1;
@property(retain, nonatomic) NSWindow *hostWindow;
- (id)userAgentForURL:(id)arg1;
- (struct String)_userAgentString;
@property(readonly, nonatomic) WebScriptObject *windowScriptObject;
- (id)stringByEvaluatingJavaScriptFromString:(id)arg1;
@property(copy, nonatomic) NSString *customTextEncodingName;
- (id)_mainFrameOverrideEncoding;
@property(readonly, nonatomic) BOOL supportsTextEncoding;
@property(copy, nonatomic) NSString *mediaStyle;
@property(copy, nonatomic) NSString *customUserAgent;
@property(copy, nonatomic) NSString *applicationNameForUserAgent;
- (void)_invalidateUserAgentCache;
- (void)_resetZoom:(id)arg1 isTextOnly:(BOOL)arg2;
- (BOOL)_canResetZoom:(BOOL)arg1;
- (void)_zoomIn:(id)arg1 isTextOnly:(BOOL)arg2;
- (void)_zoomOut:(id)arg1 isTextOnly:(BOOL)arg2;
- (BOOL)_canZoomIn:(BOOL)arg1;
- (BOOL)_canZoomOut:(BOOL)arg1;
- (BOOL)_realZoomMultiplierIsTextOnly;
- (float)_realZoomMultiplier;
- (float)_zoomMultiplier:(BOOL)arg1;
- (void)_setZoomMultiplier:(float)arg1 isTextOnly:(BOOL)arg2;
@property(nonatomic) float textSizeMultiplier;
- (BOOL)goToBackForwardItem:(id)arg1;
- (BOOL)goForward;
- (BOOL)goBack;
- (void)setMaintainsBackForwardList:(BOOL)arg1;
@property(readonly, nonatomic) WebBackForwardList *backForwardList;
@property(readonly, nonatomic) WebFrame *selectedFrame;
@property(readonly, nonatomic) WebFrame *mainFrame;
@property(nonatomic) id <WebFrameLoadDelegate> frameLoadDelegate;
@property(nonatomic) id <WebPolicyDelegate> policyDelegate;
@property(nonatomic) id <WebDownloadDelegate> downloadDelegate;
@property(nonatomic) id <WebResourceLoadDelegate> resourceLoadDelegate;
@property(nonatomic) id <WebUIDelegate> UIDelegate;
@property(copy, nonatomic) NSString *preferencesIdentifier;
@property(retain, nonatomic) WebPreferences *preferences;
- (void)_windowDidChangeOcclusionState:(id)arg1;
- (void)_windowDidChangeBackingProperties:(id)arg1;
- (void)_windowWillClose:(id)arg1;
- (void)_windowWillOrderOffScreen:(id)arg1;
- (void)_windowDidChangeScreen:(id)arg1;
- (void)_windowWillOrderOnScreen:(id)arg1;
- (void)viewDidUnhide;
- (void)viewDidHide;
- (void)windowKeyStateChanged:(id)arg1;
- (void)_windowChangedKeyState;
- (void)doWindowDidChangeScreen;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)removeWindowObservers;
- (void)addWindowObserversForWindow:(id)arg1;
@property(nonatomic) BOOL shouldCloseWithWindow;
- (void)close;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 frameName:(id)arg2 groupName:(id)arg3;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)_initWithArguments:(id)arg1;
- (BOOL)_isMIMETypeRegisteredAsPlugin:(id)arg1;
- (void)removePluginInstanceViewsFor:(id)arg1;
- (void)removePluginInstanceView:(id)arg1;
- (void)addPluginInstanceView:(id)arg1;
- (id)_pluginForExtension:(id)arg1;
- (id)_pluginForMIMEType:(id)arg1;
- (BOOL)_canShowMIMEType:(id)arg1;
- (void)_addToAllWebViewsSet;
- (void)_removeFromAllWebViewsSet;
- (void)forceRequestCandidatesForTesting;
- (BOOL)shouldRequestCandidates;
- (void)showCandidates:(id)arg1 forString:(id)arg2 inRect:(struct CGRect)arg3 forSelectedRange:(struct _NSRange)arg4 view:(id)arg5 completionHandler:(CDUnknownBlockType)arg6;
- (void)_setFontFallbackPrefersPictographs:(BOOL)arg1;
@property(copy, nonatomic, getter=_sourceApplicationAuditData, setter=_setSourceApplicationAuditData:) NSData *sourceApplicationAuditData;
- (void)viewDidChangeEffectiveAppearance;
@property(nonatomic, setter=_setUseSystemAppearance:) BOOL _useSystemAppearance;
- (_Bool)_effectiveUserInterfaceLevelIsElevated;
- (_Bool)_effectiveAppearanceIsDark;
@property(nonatomic, setter=_setUnobscuredSafeAreaInsets:) struct WebEdgeInsets _unobscuredSafeAreaInsets;
- (void)_didScrollDocumentInFrameView:(id)arg1;
- (BOOL)searchFor:(id)arg1 direction:(BOOL)arg2 caseSensitive:(BOOL)arg3 wrap:(BOOL)arg4 startInSelection:(BOOL)arg5;
- (unsigned long long)countMatchesForText:(id)arg1 caseSensitive:(BOOL)arg2 highlight:(BOOL)arg3 limit:(unsigned long long)arg4 markMatches:(BOOL)arg5;
- (unsigned long long)markAllMatchesForText:(id)arg1 caseSensitive:(BOOL)arg2 highlight:(BOOL)arg3 limit:(unsigned long long)arg4;
- (void)_setCustomBackingScaleFactor:(double)arg1;
- (double)_backingScaleFactor;
- (unsigned long long)_pageCount;
- (BOOL)_paginationLineGridEnabled;
- (void)_setPaginationLineGridEnabled:(BOOL)arg1;
- (double)_gapBetweenPages;
- (void)_setGapBetweenPages:(double)arg1;
- (double)_pageLength;
- (void)_setPageLength:(double)arg1;
- (BOOL)_paginationBehavesLikeColumns;
- (void)_setPaginationBehavesLikeColumns:(BOOL)arg1;
- (void)setWindowOcclusionDetectionEnabled:(BOOL)arg1;
- (BOOL)windowOcclusionDetectionEnabled;
- (void)_setVisibilityState:(int)arg1 isInitialState:(BOOL)arg2;
- (void)_setIsVisible:(BOOL)arg1;
- (int)_visibilityState;
- (unsigned long long)_layoutMilestones;
- (void)_listenForLayoutMilestones:(unsigned long long)arg1;
- (int)_paginationMode;
- (void)_setPaginationMode:(int)arg1;
- (struct CGSize)_fixedLayoutSize;
- (BOOL)_useFixedLayout;
- (void)_setFixedLayoutSize:(struct CGSize)arg1;
- (void)_setUseFixedLayout:(BOOL)arg1;
- (float)_viewScaleFactor;
- (void)_scaleWebView:(float)arg1 atOrigin:(struct CGPoint)arg2;
- (void)setCSSAnimationsSuspended:(BOOL)arg1;
- (BOOL)cssAnimationsSuspended;
- (void)setAllowsNewCSSAnimationsWhileSuspended:(BOOL)arg1;
- (BOOL)allowsNewCSSAnimationsWhileSuspended;
- (void)_forceRepaintForTesting;
- (void)_updateActiveState;
- (void)_updateVisibilityState;
- (BOOL)_isViewVisible;
- (id)_insertionPasteboard;
- (id)trackedRepaintRects;
- (void)resetTrackedRepaints;
- (BOOL)isTrackingRepaints;
- (void)setTracksRepaints:(BOOL)arg1;
- (BOOL)_isSoftwareRenderable;
- (id)_contentsOfUserInterfaceItem:(id)arg1;
- (void)setValidationMessageTimerMagnification:(int)arg1;
- (int)validationMessageTimerMagnification;
- (void)setInteractiveFormValidationEnabled:(BOOL)arg1;
- (BOOL)interactiveFormValidationEnabled;
- (void)_setBaseCTM:(struct CGAffineTransform)arg1 forContext:(struct CGContext *)arg2;
- (BOOL)_isUsingAcceleratedCompositing;
- (void)_setPostsAcceleratedCompositingNotifications:(BOOL)arg1;
- (BOOL)_postsAcceleratedCompositingNotifications;
- (BOOL)areMemoryCacheDelegateCallsEnabled;
- (void)setMemoryCacheDelegateCallsEnabled:(BOOL)arg1;
- (BOOL)isSelectTrailingWhitespaceEnabled;
- (void)setSelectTrailingWhitespaceEnabled:(BOOL)arg1;
- (void)_clearMainFrameName;
- (void)_executeCoreCommandByName:(id)arg1 value:(id)arg2;
- (void)_clearUndoRedoOperations;
- (id)textIteratorForRect:(struct CGRect)arg1;
- (void)setUsesPageCache:(BOOL)arg1;
- (BOOL)usesPageCache;
- (void)setDefersCallbacks:(BOOL)arg1;
- (BOOL)defersCallbacks;
- (id)backgroundColor;
- (void)setBackgroundColor:(id)arg1;
- (void)_detachScriptDebuggerFromAllFrames;
- (void)_attachScriptDebuggerToAllFrames;
- (void)_setAdditionalWebPlugInPaths:(id)arg1;
- (void)_setCookieEnabled:(BOOL)arg1;
- (BOOL)_cookieEnabled;
- (BOOL)_inFastImageScalingMode;
- (void)_setUseFastImageScalingMode:(BOOL)arg1;
- (BOOL)alwaysShowHorizontalScroller;
- (void)setProhibitsMainFrameScrolling:(BOOL)arg1;
- (void)setAlwaysShowHorizontalScroller:(BOOL)arg1;
- (BOOL)alwaysShowVerticalScroller;
- (void)setAlwaysShowVerticalScroller:(BOOL)arg1;
- (BOOL)_dashboardBehavior:(int)arg1;
- (void)_setDashboardBehavior:(int)arg1 to:(BOOL)arg2;
- (id)_dashboardRegions;
- (void)_addScrollerDashboardRegions:(id)arg1;
- (void)_setInitiatedDrag:(BOOL)arg1;
- (void)_writeLinkElement:(id)arg1 withPasteboardTypes:(id)arg2 toPasteboard:(id)arg3;
- (void)_writeImageForElement:(id)arg1 withPasteboardTypes:(id)arg2 toPasteboard:(id)arg3;
- (id)_cachedResponseForURL:(id)arg1;
- (void)_didFailProvisionalLoadWithError:(id)arg1 forFrame:(id)arg2;
- (void)_didFailLoadWithError:(id)arg1 forFrame:(id)arg2;
- (void)_didFinishLoadForFrame:(id)arg1;
- (void)_didCommitLoadForFrame:(id)arg1;
- (void)_checkDidPerformFirstNavigation;
- (void)_didStartProvisionalLoadForFrame:(id)arg1;
- (void)_didChangeBackForwardKeys;
- (void)_willChangeBackForwardKeys;
- (id)_declaredKeys;
- (void)_willChangeValueForKey:(id)arg1;
- (void)_didChangeValueForKey:(id)arg1;
- (BOOL)_isPerformingProgrammaticFocus;
- (void)_popPerformingProgrammaticFocus;
- (void)_pushPerformingProgrammaticFocus;
- (id)_editingDelegateForwarder;
- (id)_UIDelegateForwarder;
- (id)_policyDelegateForwarder;
- (void)_cacheHistoryDelegateImplementations;
- (void)_cacheScriptDebugDelegateImplementations;
- (void)_cacheFrameLoadDelegateImplementations;
- (void)_cacheResourceLoadDelegateImplementations;
- (void)_preferencesChanged:(id)arg1;
- (void)_preferencesChangedNotification:(id)arg1;
- (BOOL)_needsPreHTML5ParserQuirks;
- (BOOL)_needsFrameLoadDelegateRetainQuirk;
- (BOOL)_needsKeyboardEventDisambiguationQuirks;
- (BOOL)_needsIsLoadingInAPISenseQuirk;
- (BOOL)_needsFrameNameFallbackToIdQuirk;
- (BOOL)_needsLinkElementTextCSSQuirk;
- (BOOL)_needsAdobeFrameReloadingQuirk;
- (id)_formDelegate;
- (void)_setFormDelegate:(id)arg1;
- (void)_loadBackForwardListFromOtherView:(id)arg1;
- (void)_mouseDidMoveOverElement:(id)arg1 modifierFlags:(unsigned long long)arg2;
- (id)_menuForElement:(id)arg1 defaultItems:(id)arg2;
- (struct Page *)page;
- (void)setShowingInspectorIndication:(BOOL)arg1;
- (void)setAllowsRemoteInspection:(BOOL)arg1;
- (BOOL)allowsRemoteInspection;
- (id)inspector;
- (void)_setUseDarkAppearance:(BOOL)arg1 useElevatedUserInterfaceLevel:(BOOL)arg2;
- (void)_setUseDarkAppearance:(BOOL)arg1 useInactiveAppearance:(BOOL)arg2;
@property(nonatomic, setter=_setUseElevatedUserInterfaceLevel:) BOOL _useElevatedUserInterfaceLevel;
@property(nonatomic, setter=_setUseDarkAppearance:) BOOL _useDarkAppearance;
- (id)_openNewWindowWithRequest:(id)arg1;
- (id)_downloadURL:(id)arg1;
- (BOOL)_isProcessingUserGesture;
- (void)_close;
- (void)_closeWithFastTeardown;
- (void)_closePluginDatabases;
- (BOOL)_isClosed;
- (BOOL)_viewClass:(Class *)arg1 andRepresentationClass:(Class *)arg2 forMIMEType:(id)arg3;
- (void)_viewWillDrawInternal;
- (id)_initWithFrame:(struct CGRect)arg1 frameName:(id)arg2 groupName:(id)arg3;
- (void)_commonInitializationWithFrameName:(id)arg1 groupName:(id)arg2;
- (void)_injectOutlookQuirksScript;
- (void)_registerDraggedTypes;
- (void)_dispatchPendingLoadRequests;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (BOOL)validateUserInterfaceItemWithoutDelegate:(id)arg1;
- (BOOL)_responderValidateUserInterfaceItem:(id)arg1;
- (void)toggleSmartInsertDelete:(id)arg1;
- (void)toggleContinuousSpellChecking:(id)arg1;
- (void)makeTextStandardSize:(id)arg1;
@property(readonly, nonatomic) BOOL canMakeTextStandardSize;
- (void)makeTextLarger:(id)arg1;
@property(readonly, nonatomic) BOOL canMakeTextLarger;
- (void)makeTextSmaller:(id)arg1;
@property(readonly, nonatomic) BOOL canMakeTextSmaller;
- (void)reloadFromOrigin:(id)arg1;
- (void)reload:(id)arg1;
- (void)stopLoading:(id)arg1;
- (void)goForward:(id)arg1;
- (void)goBack:(id)arg1;
@property(readonly, nonatomic) BOOL canGoForward;
@property(readonly, nonatomic) BOOL canGoBack;
- (void)takeStringURLFrom:(id)arg1;
- (void)addVisitedLinks:(id)arg1;
- (void)resumeAllMediaPlayback;
- (void)suspendAllMediaPlayback;
- (float)mediaVolume;
- (void)setMediaVolume:(float)arg1;
- (void)resetPageZoom:(id)arg1;
- (BOOL)canResetPageZoom;
- (void)zoomPageOut:(id)arg1;
- (BOOL)canZoomPageOut;
- (void)zoomPageIn:(id)arg1;
- (BOOL)canZoomPageIn;
- (float)pageSizeMultiplier;
- (void)setPageSizeMultiplier:(float)arg1;
- (void)setAllowsUndo:(BOOL)arg1;
- (BOOL)allowsUndo;
- (void)scrollDOMRangeToVisible:(id)arg1;
- (id)rectsForTextMatches;
- (void)unmarkAllTextMatches;
- (unsigned long long)countMatchesForText:(id)arg1 inDOMRange:(id)arg2 options:(unsigned long long)arg3 highlight:(BOOL)arg4 limit:(unsigned long long)arg5 markMatches:(BOOL)arg6;
- (unsigned long long)countMatchesForText:(id)arg1 options:(unsigned long long)arg2 highlight:(BOOL)arg3 limit:(unsigned long long)arg4 markMatches:(BOOL)arg5;
- (BOOL)canMarkAllTextMatches;
- (id)aeDescByEvaluatingJavaScriptFromString:(id)arg1;
- (BOOL)shouldClose;
- (id)historyDelegate;
- (void)setHistoryDelegate:(id)arg1;
- (id)scriptDebugDelegate;
- (void)setScriptDebugDelegate:(id)arg1;
- (BOOL)tabKeyCyclesThroughElements;
- (void)setTabKeyCyclesThroughElements:(BOOL)arg1;
- (void)setMainFrameDocumentReady:(BOOL)arg1;
- (id)DOMRangeOfString:(id)arg1 relativeTo:(id)arg2 options:(unsigned long long)arg3;
- (BOOL)findString:(id)arg1 options:(unsigned long long)arg2;
- (void)unscheduleFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (void)_drawHeaderAndFooter;
- (void)_adjustPrintingMarginsForHeaderAndFooter;
- (void)_drawFooterInRect:(struct CGRect)arg1;
- (void)_drawHeaderInRect:(struct CGRect)arg1;
- (float)_footerHeight;
- (float)_headerHeight;
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2;
- (void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned long long)arg3 context:(void *)arg4;
- (id)computedStyleForElement:(id)arg1 pseudoElement:(id)arg2;
- (id)styleDeclarationWithText:(id)arg1;
@property(nonatomic) id <WebEditingDelegate> editingDelegate;
- (void)registerForEditingDelegateNotification:(id)arg1 selector:(SEL)arg2;
@property(readonly, nonatomic) NSUndoManager *undoManager;
@property(readonly, nonatomic) long long spellCheckerDocumentTag;
@property(nonatomic, getter=isContinuousSpellCheckingEnabled) BOOL continuousSpellCheckingEnabled;
@property(nonatomic) BOOL smartInsertDeleteEnabled;
@property(retain, nonatomic) DOMCSSStyleDeclaration *typingStyle;
@property(nonatomic, getter=isEditable) BOOL editable;
@property(readonly, nonatomic) unsigned long long selectionAffinity;
@property(readonly, nonatomic) DOMRange *selectedDOMRange;
- (void)setSelectedDOMRange:(id)arg1 affinity:(unsigned long long)arg2;
@property(readonly, nonatomic) BOOL maintainsInactiveSelection;
- (void)_setMaintainsInactiveSelection:(BOOL)arg1;
- (BOOL)_shouldChangeSelectedDOMRange:(id)arg1 toDOMRange:(id)arg2 affinity:(unsigned long long)arg3 stillSelecting:(BOOL)arg4;
- (id)editableDOMRangeForPoint:(struct CGPoint)arg1;
- (void)toggleGrammarChecking:(id)arg1;
- (void)setGrammarCheckingEnabled:(BOOL)arg1;
- (BOOL)isGrammarCheckingEnabled;
- (void)toggleAutomaticSpellingCorrection:(id)arg1;
- (void)setAutomaticSpellingCorrectionEnabled:(BOOL)arg1;
- (void)toggleAutomaticTextReplacement:(id)arg1;
- (void)setAutomaticTextReplacementEnabled:(BOOL)arg1;
- (void)toggleAutomaticDashSubstitution:(id)arg1;
- (void)setAutomaticDashSubstitutionEnabled:(BOOL)arg1;
- (void)toggleAutomaticLinkDetection:(id)arg1;
- (void)setAutomaticLinkDetectionEnabled:(BOOL)arg1;
- (void)toggleAutomaticQuoteSubstitution:(id)arg1;
- (void)setAutomaticQuoteSubstitutionEnabled:(BOOL)arg1;
- (BOOL)isAutomaticSpellingCorrectionEnabled;
- (BOOL)isAutomaticTextReplacementEnabled;
- (BOOL)isAutomaticDashSubstitutionEnabled;
- (BOOL)isAutomaticLinkDetectionEnabled;
- (BOOL)isAutomaticQuoteSubstitutionEnabled;
- (void)applyStyle:(id)arg1;
- (void)deleteSelection;
- (void)replaceSelectionWithArchive:(id)arg1;
- (void)replaceSelectionWithMarkupString:(id)arg1;
- (void)replaceSelectionWithText:(id)arg1;
- (void)replaceSelectionWithNode:(id)arg1;
- (id)typingAttributes;
- (void)insertText:(id)arg1;
- (void)yankAndSelect:(id)arg1;
- (void)yank:(id)arg1;
- (void)uppercaseWord:(id)arg1;
- (void)unscript:(id)arg1;
- (void)underline:(id)arg1;
- (void)transpose:(id)arg1;
- (void)toggleBaseWritingDirection:(id)arg1;
- (void)takeFindStringFromSelection:(id)arg1;
- (void)swapWithMark:(id)arg1;
- (void)superscript:(id)arg1;
- (void)subscript:(id)arg1;
- (void)stopSpeaking:(id)arg1;
- (void)startSpeaking:(id)arg1;
- (void)showGuessPanel:(id)arg1;
- (void)setMark:(id)arg1;
- (void)selectWord:(id)arg1;
- (void)selectToMark:(id)arg1;
- (void)selectSentence:(id)arg1;
- (void)selectParagraph:(id)arg1;
- (void)selectLine:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)scrollToEndOfDocument:(id)arg1;
- (void)scrollToBeginningOfDocument:(id)arg1;
- (void)scrollPageUp:(id)arg1;
- (void)scrollPageDown:(id)arg1;
- (void)scrollLineUp:(id)arg1;
- (void)scrollLineDown:(id)arg1;
- (void)performFindPanelAction:(id)arg1;
- (void)pasteFont:(id)arg1;
- (void)pasteAsRichText:(id)arg1;
- (void)pasteAsPlainText:(id)arg1;
- (void)paste:(id)arg1;
- (void)pageUpAndModifySelection:(id)arg1;
- (void)pageUp:(id)arg1;
- (void)pageDownAndModifySelection:(id)arg1;
- (void)pageDown:(id)arg1;
- (void)overWrite:(id)arg1;
- (void)outdent:(id)arg1;
- (void)orderFrontSubstitutionsPanel:(id)arg1;
- (void)moveWordRightAndModifySelection:(id)arg1;
- (void)moveWordRight:(id)arg1;
- (void)moveWordLeftAndModifySelection:(id)arg1;
- (void)moveWordLeft:(id)arg1;
- (void)moveWordForwardAndModifySelection:(id)arg1;
- (void)moveWordForward:(id)arg1;
- (void)moveWordBackwardAndModifySelection:(id)arg1;
- (void)moveWordBackward:(id)arg1;
- (void)moveUpAndModifySelection:(id)arg1;
- (void)moveUp:(id)arg1;
- (void)moveToRightEndOfLineAndModifySelection:(id)arg1;
- (void)moveToRightEndOfLine:(id)arg1;
- (void)moveToLeftEndOfLineAndModifySelection:(id)arg1;
- (void)moveToLeftEndOfLine:(id)arg1;
- (void)moveToEndOfSentenceAndModifySelection:(id)arg1;
- (void)moveToEndOfSentence:(id)arg1;
- (void)moveToEndOfParagraphAndModifySelection:(id)arg1;
- (void)moveToEndOfParagraph:(id)arg1;
- (void)moveToEndOfLineAndModifySelection:(id)arg1;
- (void)moveToEndOfLine:(id)arg1;
- (void)moveToEndOfDocumentAndModifySelection:(id)arg1;
- (void)moveToEndOfDocument:(id)arg1;
- (void)moveToBeginningOfSentenceAndModifySelection:(id)arg1;
- (void)moveToBeginningOfSentence:(id)arg1;
- (void)moveToBeginningOfParagraphAndModifySelection:(id)arg1;
- (void)moveToBeginningOfParagraph:(id)arg1;
- (void)moveToBeginningOfLineAndModifySelection:(id)arg1;
- (void)moveToBeginningOfLine:(id)arg1;
- (void)moveToBeginningOfDocumentAndModifySelection:(id)arg1;
- (void)moveToBeginningOfDocument:(id)arg1;
- (void)moveRightAndModifySelection:(id)arg1;
- (void)moveRight:(id)arg1;
- (void)moveParagraphForwardAndModifySelection:(id)arg1;
- (void)moveParagraphBackwardAndModifySelection:(id)arg1;
- (void)moveLeftAndModifySelection:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)moveForwardAndModifySelection:(id)arg1;
- (void)moveForward:(id)arg1;
- (void)moveDownAndModifySelection:(id)arg1;
- (void)moveDown:(id)arg1;
- (void)moveBackwardAndModifySelection:(id)arg1;
- (void)moveBackward:(id)arg1;
- (void)makeTextWritingDirectionRightToLeft:(id)arg1;
- (void)makeTextWritingDirectionNatural:(id)arg1;
- (void)makeTextWritingDirectionLeftToRight:(id)arg1;
- (void)makeBaseWritingDirectionRightToLeft:(id)arg1;
- (void)makeBaseWritingDirectionLeftToRight:(id)arg1;
- (void)lowercaseWord:(id)arg1;
- (void)insertTabIgnoringFieldEditor:(id)arg1;
- (void)insertTab:(id)arg1;
- (void)insertParagraphSeparator:(id)arg1;
- (void)insertNewlineIgnoringFieldEditor:(id)arg1;
- (void)insertNewline:(id)arg1;
- (void)insertLineBreak:(id)arg1;
- (void)insertBacktab:(id)arg1;
- (void)indent:(id)arg1;
- (void)ignoreSpelling:(id)arg1;
- (void)deleteWordForward:(id)arg1;
- (void)deleteWordBackward:(id)arg1;
- (void)deleteToMark:(id)arg1;
- (void)deleteToEndOfParagraph:(id)arg1;
- (void)deleteToEndOfLine:(id)arg1;
- (void)deleteToBeginningOfParagraph:(id)arg1;
- (void)deleteToBeginningOfLine:(id)arg1;
- (void)deleteForward:(id)arg1;
- (void)deleteBackwardByDecomposingPreviousCharacter:(id)arg1;
- (void)deleteBackward:(id)arg1;
- (void)delete:(id)arg1;
- (void)cut:(id)arg1;
- (void)copyFont:(id)arg1;
- (void)copy:(id)arg1;
- (void)complete:(id)arg1;
- (void)checkSpelling:(id)arg1;
- (void)changeSpelling:(id)arg1;
- (void)changeFont:(id)arg1;
- (void)changeDocumentBackgroundColor:(id)arg1;
- (void)changeColor:(id)arg1;
- (void)changeBaseWritingDirectionToRTL:(id)arg1;
- (void)changeBaseWritingDirectionToLTR:(id)arg1;
- (void)changeBaseWritingDirection:(id)arg1;
- (void)changeAttributes:(id)arg1;
- (void)centerSelectionInVisibleArea:(id)arg1;
- (void)capitalizeWord:(id)arg1;
- (void)alignRight:(id)arg1;
- (void)alignLeft:(id)arg1;
- (void)alignJustified:(id)arg1;
- (void)alignCenter:(id)arg1;
- (void)_performResponderOperation:(SEL)arg1 with:(id)arg2;
- (void)_searchWithSpotlightFromMenu:(id)arg1;
- (void)_searchWithGoogleFromMenu:(id)arg1;
- (void)_openFrameInNewWindowFromMenu:(id)arg1;
- (void)_simplifyMarkup:(id)arg1 endNode:(id)arg2;
- (BOOL)_selectionIsAll;
- (BOOL)_selectionIsCaret;
- (void)_replaceSelectionWithNode:(id)arg1 matchStyle:(BOOL)arg2;
- (void)_insertNewlineInQuotedContent;
- (void)_closeWindow;
- (void)_windowVisibilityChanged:(id)arg1;
- (id)candidateList;
- (void)prepareForMouseUp;
- (void)prepareForMouseDown;
- (void)updateTouchBar;
- (void)updateMediaTouchBar;
- (void)updateTextTouchBar;
- (id)textTouchBar;
- (BOOL)_isRichlyEditable;
- (void)setUpTextTouchBar:(id)arg1;
- (void)didChangeAutomaticTextCompletion:(id)arg1;
- (void)touchBarWillEnterCustomization:(id)arg1;
- (void)touchBarDidExitCustomization:(id)arg1;
- (id)_passwordTextTouchBarDefaultItemIdentifiers;
- (id)_richTextTouchBarDefaultItemIdentifiers;
- (id)_plainTextTouchBarDefaultItemIdentifiers;
- (id)_textTouchBarCustomizationAllowedIdentifiers;
- (void)_dismissTextTouchBarPopoverItemWithIdentifier:(id)arg1;
- (void)_mockMediaPlaybackTargetPickerDismissPopup;
- (void)_setMockMediaPlaybackTargetPickerName:(id)arg1 state:(unsigned int)arg2;
- (void)_setMockMediaPlaybackTargetPickerEnabled:(_Bool)arg1;
- (void)_playbackTargetPickerClientStateDidChange:(unsigned long long)arg1 state:(unsigned int)arg2;
- (void)_showPlaybackTargetPicker:(unsigned long long)arg1 location:(const struct IntPoint *)arg2 hasVideo:(BOOL)arg3;
- (void)_removePlaybackTargetPickerClient:(unsigned long long)arg1;
- (void)_addPlaybackTargetPickerClient:(unsigned long long)arg1;
- (struct WebMediaPlaybackTargetPicker *)_devicePicker;
- (void)hideFormValidationMessage;
- (void)showFormValidationMessage:(id)arg1 withAnchorRect:(struct CGRect)arg2;
- (void)_showDictionaryLookupPopup:(const struct DictionaryPopupInfo *)arg1;
- (void)_prepareForDictionaryLookup;
- (void)_setTextIndicatorAnimationProgress:(float)arg1;
- (void)_clearTextIndicatorWithAnimation:(unsigned char)arg1;
- (void)_setTextIndicator:(struct TextIndicator *)arg1 withLifetime:(unsigned char)arg2;
- (void)_setTextIndicator:(struct TextIndicator *)arg1;
- (void)_setPressureEvent:(id)arg1;
- (id)_pressureEvent;
- (id)_animationControllerForDictionaryLookupPopupInfo:(const struct DictionaryPopupInfo *)arg1;
- (id)_immediateActionController;
- (struct CGRect)_convertRectFromRootView:(struct CGRect)arg1;
- (struct CGPoint)_convertPointFromRootView:(struct CGPoint)arg1;
- (struct WebSelectionServiceController *)_selectionServiceController;
- (Vector_05504c84)_dictationAlternatives:(unsigned long long)arg1;
- (void)_removeDictationAlternatives:(unsigned long long)arg1;
- (void)_showDictationAlternativeUI:(const struct FloatRect *)arg1 forDictationContext:(unsigned long long)arg2;
- (void)_getWebCoreDictationAlternatives:(Vector_4aeed4b7 *)arg1 fromTextAlternatives:(const Vector_15b552f4 *)arg2;
- (void)handleAcceptedAlternativeText:(id)arg1;
- (void)_exitFullScreenForElement:(struct Element *)arg1;
- (void)_enterFullScreenForElement:(struct Element *)arg1;
- (BOOL)_supportsFullScreenForElement:(const struct Element *)arg1 withKeyboard:(BOOL)arg2;
- (void)_clearPlaybackControlsManager;
- (void)_setUpPlaybackControlsManagerForMediaElement:(struct HTMLMediaElement *)arg1;
- (BOOL)_hasActiveVideoForControlsInterface;
- (void)_exitVideoFullscreen;
- (void)_enterVideoFullscreenForVideoElement:(struct HTMLVideoElement *)arg1 mode:(unsigned int)arg2;
- (BOOL)_flushCompositingChanges;
- (void)_scheduleCompositingLayerFlush;
- (void)_setNeedsOneShotDrawingSynchronization:(BOOL)arg1;
- (BOOL)_needsOneShotDrawingSynchronization;
- (void)_clearCredentials;
- (id)_selectedOrMainFrame;
-     // Error parsing type: ^{Frame=^^?{atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> >=AI}}{Ref<WebCore::WindowProxy, WTF::DumbPtrTraits<WebCore::WindowProxy> >=^{WindowProxy}}{HashSet<WebCore::FrameDestructionObserver *, WTF::PtrHash<WebCore::FrameDestructionObserver *>, WTF::HashTraits<WebCore::FrameDestructionObserver *> >={HashTable<WebCore::FrameDestructionObserver *, WebCore::FrameDestructionObserver *, WTF::IdentityExtractor, WTF::PtrHash<WebCore::FrameDestructionObserver *>, WTF::HashTraits<WebCore::FrameDestructionObserver *>, WTF::HashTraits<WebCore::FrameDestructionObserver *> >=^^{FrameDestructionObserver}}}^{Frame}^{Page}{RefPtr<WebCore::Settings, WTF::DumbPtrTraits<WebCore::Settings> >=^{Settings}}{FrameTree=^{Frame}^{Frame}{AtomString={String={RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> >=^{StringImpl}}}}{AtomString={String={RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> >=^{StringImpl}}}}{RefPtr<WebCore::Frame, WTF::DumbPtrTraits<WebCore::Frame> >=^{Frame}}^{Frame}{RefPtr<WebCore::Frame, WTF::DumbPtrTraits<WebCore::Frame> >=^{Frame}}^{Frame}IQ}{UniqueRef<WebCore::FrameLoader>={unique_ptr<WebCore::FrameLoader, std::__1::default_delete<WebCore::FrameLoader> >={__compressed_pair<WebCore::FrameLoader *, std::__1::default_delete<WebCore::FrameLoader> >=^{FrameLoader}}}}{UniqueRef<WebCore::NavigationScheduler>={unique_ptr<WebCore::NavigationScheduler, std::__1::default_delete<WebCore::NavigationScheduler> >={__compressed_pair<WebCore::NavigationScheduler *, std::__1::default_delete<WebCore::NavigationScheduler> >=^{NavigationScheduler}}}}^{HTMLFrameOwnerElement}{RefPtr<WebCore::FrameView, WTF::DumbPtrTraits<WebCore::FrameView> >=^{FrameView}}{RefPtr<WebCore::Document, WTF::DumbPtrTraits<WebCore::Document> >=^{Document}}{UniqueRef<WebCore::ScriptController>={unique_ptr<WebCore::ScriptController, std::__1::default_delete<WebCore::ScriptController> >={__compressed_pair<WebCore::ScriptController *, std::__1::default_delete<WebCore::ScriptController> >=^{ScriptController}}}}{UniqueRef<WebCore::Editor>={unique_ptr<WebCore::Editor, std::__1::default_delete<WebCore::Editor> >={__compressed_pair<WebCore::Editor *, std::__1::default_delete<WebCore::Editor> >=^{Editor}}}}{UniqueRef<WebCore::FrameSelection>={unique_ptr<WebCore::FrameSelection, std::__1::default_delete<WebCore::FrameSelection> >={__compressed_pair<WebCore::FrameSelection *, std::__1::default_delete<WebCore::FrameSelection> >=^{FrameSelection}}}}{UniqueRef<WebCore::CSSAnimationController>={unique_ptr<WebCore::CSSAnimationController, std::__1::default_delete<WebCore::CSSAnimationController> >={__compressed_pair<WebCore::CSSAnimationController *, std::__1::default_delete<WebCore::CSSAnimationController> >=^{CSSAnimationController}}}}{RetainPtr<NSArray>=^v}ffiBIIBI{UniqueRef<WebCore::EventHandler>={unique_ptr<WebCore::EventHandler, std::__1::default_delete<WebCore::EventHandler> >={__compressed_pair<WebCore::EventHandler *, std::__1::default_delete<WebCore::EventHandler> >=^{EventHandler}}}}}16@0:8, name: _mainCoreFrame
- (void)_setInsertionPasteboard:(id)arg1;
- (int)_keyboardUIMode;
- (void)_retrieveKeyboardUIModeFromPreferences:(id)arg1;
- (void)_removeObjectForIdentifier:(unsigned long long)arg1;
- (id)_objectForIdentifier:(unsigned long long)arg1;
- (void)_addObject:(id)arg1 forIdentifier:(unsigned long long)arg2;
- (BOOL)_becomingFirstResponderFromOutside;
- (id)_deviceOrientationProvider;
- (void)_setDeviceOrientationProvider:(id)arg1;
- (void)_geolocationDidFailWithMessage:(id)arg1;
- (void)_geolocationDidChangePosition:(id)arg1;
- (id)_geolocationProvider;
- (void)_setGeolocationProvider:(id)arg1;
- (unsigned long long)_notificationIDForTesting:(struct OpaqueJSValue *)arg1;
- (void)_notificationsDidClose:(id)arg1;
- (void)_notificationDidClick:(unsigned long long)arg1;
- (void)_notificationDidShow:(unsigned long long)arg1;
- (id)_notificationProvider;
- (void)_setNotificationProvider:(id)arg1;
- (id)fullScreenPlaceholderView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(readonly) NSTouchBar *touchBar; // @dynamic touchBar;

@end

