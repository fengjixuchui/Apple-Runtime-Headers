//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class AnalyticsWorkspace, ImpoExpoService, NSMutableDictionary, NSMutableSet, NSMutableString, NSString;
@protocol CLIPSShimDelegate, OS_dispatch_queue;

@interface CLIPSShim : NSObject
{
    AnalyticsWorkspace *_clipsWorkspace;
    ImpoExpoService *_ieService;
    NSObject<OS_dispatch_queue> *_queue;
    unsigned int _strongAddressType;
    id <CLIPSShimDelegate> _delegate;
    NSMutableDictionary *_modules;
    void *_environment;
    NSMutableString *_dumpedString;
    NSMutableString *_consoleContents;
    NSString *_currentCommand;
    unsigned long long _commandStringLoc;
    NSMutableSet *_clipsHeldObjects;
    NSMutableDictionary *_invocationMap;
    NSMutableDictionary *_pendingOTAUpdates;
    CDStruct_a3227609 _consoleNameRegex;
    CDStruct_a3227609 _dumpStringRegex;
}

+ (id)createDecryptedCLPData:(const void *)arg1 length:(unsigned long long)arg2;
+ (id)dataSectionNameForModule:(id)arg1;
+ (id)decryptCLIPSData:(id)arg1 forModule:(id)arg2;
+ (id)decodeAndInflateCLIPSString:(id)arg1;
+ (struct _CCCryptor *)cryptor;
+ (id)sharedInstance;
- (void).cxx_destruct;
@property(retain, nonatomic) NSMutableDictionary *pendingOTAUpdates; // @synthesize pendingOTAUpdates=_pendingOTAUpdates;
@property(retain, nonatomic) NSMutableDictionary *invocationMap; // @synthesize invocationMap=_invocationMap;
@property(retain, nonatomic) NSMutableSet *clipsHeldObjects; // @synthesize clipsHeldObjects=_clipsHeldObjects;
@property(nonatomic) unsigned long long commandStringLoc; // @synthesize commandStringLoc=_commandStringLoc;
@property(retain, nonatomic) NSString *currentCommand; // @synthesize currentCommand=_currentCommand;
@property(retain, nonatomic) NSMutableString *consoleContents; // @synthesize consoleContents=_consoleContents;
@property(retain, nonatomic) NSMutableString *dumpedString; // @synthesize dumpedString=_dumpedString;
@property(nonatomic) CDStruct_a3227609 dumpStringRegex; // @synthesize dumpStringRegex=_dumpStringRegex;
@property(nonatomic) CDStruct_a3227609 consoleNameRegex; // @synthesize consoleNameRegex=_consoleNameRegex;
@property(nonatomic) void *environment; // @synthesize environment=_environment;
@property(nonatomic) unsigned int strongAddressType; // @synthesize strongAddressType=_strongAddressType;
@property(readonly, nonatomic) NSMutableDictionary *modules; // @synthesize modules=_modules;
@property(nonatomic) __weak id <CLIPSShimDelegate> delegate; // @synthesize delegate=_delegate;
- (id)slotsStringForTemplate:(id)arg1 fromDictionary:(id)arg2 moduleName:(id)arg3;
- (id)deftemplatesMatchingPrefix:(id)arg1;
- (void *)deftemplateNamed:(id)arg1 moduleName:(id)arg2;
- (void)listAllDeftemplates;
- (id)matchFactsWithDeftemplateName:(id)arg1 withSlotKeyValues:(id)arg2;
- (void)performOnFactsWithDeftemplateName:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)getValueForSlotNamed:(id)arg1 fromFact:(void *)arg2;
- (void *)getNextFact:(void *)arg1;
- (unsigned long long)factCount;
- (void)pushFocus:(id)arg1;
- (id)setCurrentModule:(id)arg1;
- (id)currentModule;
- (void *)assertFactString:(id)arg1 moduleName:(id)arg2;
- (void)releaseFact:(void *)arg1;
- (void)retainFact:(void *)arg1;
- (void)retractFact:(void *)arg1;
- (void)executeCommand:(id)arg1 moduleName:(id)arg2;
- (int)executeBatchCommand:(id)arg1 module:(id)arg2;
- (void)setOTAUpdate:(id)arg1 version:(id)arg2 module:(id)arg3;
- (void)deactivateModule:(id)arg1;
- (id)loadDataSection:(id)arg1;
- (void)unloadConstructsForModule:(id)arg1 unconditionally:(BOOL)arg2;
- (id)factStringForFactDictionary:(id)arg1;
- (id)factDictionaryForFact:(void *)arg1;
- (void)updateModuleInfoForModule:(id)arg1 slotValues:(id)arg2;
- (void)updateAllModuleInfos;
- (long long)constructLoadStateForModule:(id)arg1;
- (id)otaUpdatePlatformStringForDeviceClass:(long long)arg1;
- (id)stringFromConstructsLoadState:(long long)arg1;
- (id)parseCLIPSModuleInfoFromConstructs:(id)arg1;
- (BOOL)loadConstructsForModule:(id)arg1;
- (BOOL)addNewConstruct:(id)arg1;
- (BOOL)addModuleNamed:(id)arg1 withConstruct:(id)arg2;
- (id)moduleRulesByName:(id)arg1;
- (id)printedFacts:(id)arg1 limit:(long long)arg2;
- (BOOL)factIsImportant:(id)arg1;
- (void)_logFactsForModule:(id)arg1 limit:(long long)arg2 when:(long long)arg3;
- (void)logFacts:(long long)arg1;
- (id)moduleNames;
- (id)swapConsoleBuffer:(id)arg1;
- (id)dumpEngineStatusWithContext:(id)arg1;
- (BOOL)conservePrettyPrintMemory:(BOOL)arg1;
- (long long)releaseAllFreeMemory;
- (long long)memoryUsed;
- (id)consoleBuffer;
- (void *)addObjectToEnvironment:(id)arg1;
- (void)removeCallbackInvocation:(id)arg1;
- (void)addCallbackInvocation:(id)arg1 invocation:(id)arg2;
- (void)registerCallbackFunction:(id)arg1 selector:(SEL)arg2 target:(id)arg3;
- (id)objectForDO:(struct dataObject *)arg1;
- (id)objectFromMultifieldArg:(void *)arg1 start:(long long)arg2 end:(long long)arg3;
- (void)setCommandString:(id)arg1;
- (id)currentRuleName;
- (void)log:(id)arg1;
- (void)reportError:(id)arg1;
- (long long)run:(long long)arg1;
- (long long)run;
- (void)reset;
- (void)clear;
- (BOOL)initializeWorkspace;
- (void)dealloc;
- (void)setQueue:(id)arg1;
- (id)init;

@end

