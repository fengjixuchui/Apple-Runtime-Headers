//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <SymptomEvaluator/TestProbe.h>

@class NSData, NSMutableArray, NSObject, NSString;
@protocol ICMPPingProbeDelegate, OS_dispatch_semaphore, OS_dispatch_source;

__attribute__((visibility("hidden")))
@interface ICMPPingProbe : TestProbe
{
    BOOL stopTestOnFirstSuccess;
    NSObject<OS_dispatch_source> *timeoutTimer;
    NSObject<OS_dispatch_source> *pingTimer;
    NSObject<OS_dispatch_source> *burstTimer;
    NSString *_hostName;
    NSData *_hostAddressData;
    struct __CFHost *_host;
    struct __CFSocket *_socket;
    unsigned short _identifier;
    unsigned short _nextSequenceNumber;
    BOOL _hostAddressIsIPv6;
    float _percentComplete;
    unsigned int _interfaceIndex;
    id <ICMPPingProbeDelegate> _delegate;
    NSString *_ipAddress;
    NSMutableArray *_pings;
    unsigned long long _successCount;
    unsigned long long _failedCount;
    unsigned long long _pingCount;
    double _interPingInterval;
    unsigned long long _burstCount;
    double _interBurstInterval;
    unsigned long long _currentBurst;
    NSObject<OS_dispatch_semaphore> *_pingRunLoopReady;
    struct __CFRunLoop *_pingRunLoop;
    struct _opaque_pthread_t *_pingThread;
    struct __CFRunLoopSource *_rls;
}

+ (BOOL)stringAddrToSockaddr:(id)arg1 to:(struct sockaddr *)arg2;
+ (unsigned long long)icmpIPv4OffsetInPacket:(id)arg1;
+ (void)initialize;
+ (BOOL)loadStringUtils;
- (void).cxx_destruct;
@property(nonatomic) struct __CFRunLoopSource *rls; // @synthesize rls=_rls;
@property(nonatomic) struct _opaque_pthread_t *pingThread; // @synthesize pingThread=_pingThread;
@property(nonatomic) struct __CFRunLoop *pingRunLoop; // @synthesize pingRunLoop=_pingRunLoop;
@property(retain, nonatomic) NSObject<OS_dispatch_semaphore> *pingRunLoopReady; // @synthesize pingRunLoopReady=_pingRunLoopReady;
@property(nonatomic) unsigned int interfaceIndex; // @synthesize interfaceIndex=_interfaceIndex;
@property(nonatomic) BOOL hostAddressIsIPv6; // @synthesize hostAddressIsIPv6=_hostAddressIsIPv6;
@property(nonatomic) unsigned long long currentBurst; // @synthesize currentBurst=_currentBurst;
@property(nonatomic) double interBurstInterval; // @synthesize interBurstInterval=_interBurstInterval;
@property(nonatomic) unsigned long long burstCount; // @synthesize burstCount=_burstCount;
@property(nonatomic) double interPingInterval; // @synthesize interPingInterval=_interPingInterval;
@property(nonatomic) unsigned long long pingCount; // @synthesize pingCount=_pingCount;
@property(nonatomic) unsigned long long failedCount; // @synthesize failedCount=_failedCount;
@property(nonatomic) unsigned long long successCount; // @synthesize successCount=_successCount;
@property(retain, nonatomic) NSMutableArray *pings; // @synthesize pings=_pings;
@property(nonatomic) float percentComplete; // @synthesize percentComplete=_percentComplete;
@property(retain, nonatomic) NSString *hostName; // @synthesize hostName=_hostName;
@property(retain, nonatomic) NSString *ipAddress; // @synthesize ipAddress=_ipAddress;
@property(retain, nonatomic) id <ICMPPingProbeDelegate> delegate; // @synthesize delegate=_delegate;
- (void)stopRunLoop;
- (BOOL)startRunLoop;
- (void)startThePinging;
- (void)readData;
- (BOOL)isValidIPv4PingResponsePacket:(id)arg1 isForMe:(char *)arg2 sequence:(unsigned short *)arg3 isBadPacket:(char *)arg4;
- (BOOL)isValidIPv6PingResponsePacket:(id)arg1 isForMe:(char *)arg2 sequence:(unsigned short *)arg3 isBadPacket:(char *)arg4;
- (void)sendPingWithData:(id)arg1;
- (void)didFailWithError:(id)arg1;
- (void)stopTest;
- (void)stopDataTransfer;
- (void)pingDidReceiveUnexpectedPingResponseFromAddress:(id)arg1 packet:(id)arg2 sequence:(unsigned int)arg3;
- (void)pingDidReceivePingResponseFromAddress:(id)arg1 packet:(id)arg2 sequence:(unsigned int)arg3;
- (void)pingDidFailToSendToAddress:(id)arg1 packet:(id)arg2 sequence:(unsigned int)arg3 error:(id)arg4;
- (void)pingDidSendToAddress:(id)arg1 packet:(id)arg2 sequence:(unsigned int)arg3;
- (void)sendPing;
- (id)_shortErrorFromError:(id)arg1;
- (void)startICMPPingTestTo:(id)arg1 hostName:(id)arg2 interface:(unsigned int)arg3 pingCount:(long long)arg4 interPingInterval:(double)arg5 burstCount:(long long)arg6 interBurstInterval:(double)arg7 timeout:(double)arg8 stopTestOnFirstSuccess:(BOOL)arg9;
- (void)dealloc;
- (id)initWithQueue:(id)arg1;

@end

