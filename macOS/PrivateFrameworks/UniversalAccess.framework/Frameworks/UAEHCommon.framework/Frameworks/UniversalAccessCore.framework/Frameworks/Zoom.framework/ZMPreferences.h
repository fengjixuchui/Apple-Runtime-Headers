//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSLock, NSMutableSet, NSTimer;

@interface ZMPreferences : NSObject
{
    BOOL _isZoomApp;
    BOOL _notificationsDisabled;
    NSLock *_coalesceTimerLock;
    NSTimer *_coalesceSyncTimer;
    NSMutableSet *_coalesceSyncKeys;
}

+ (id)sharedManager;
- (void).cxx_destruct;
@property(nonatomic) BOOL notificationsDisabled; // @synthesize notificationsDisabled=_notificationsDisabled;
@property(nonatomic) BOOL isZoomApp; // @synthesize isZoomApp=_isZoomApp;
- (void)sync;
- (void)_sanityCheckPrefs;
- (void)postNotificationForKey:(id)arg1;
- (void)postPendingNotifications;
- (void)_tryPostNotificationForKey:(id)arg1;
- (void)coalesceSyncTimerTick:(id)arg1;
- (void)postNotification;
- (void)dealloc;
- (id)init;
@property(nonatomic) double speakItemUnderMouseAfterDelayTime; // @dynamic speakItemUnderMouseAfterDelayTime;
@property(nonatomic) long long speakItemUnderMouseAfterDelayMode; // @dynamic speakItemUnderMouseAfterDelayMode;
@property(nonatomic) BOOL temporaryDetachModeEnabled; // @dynamic temporaryDetachModeEnabled;
@property(nonatomic) BOOL pressOnReleaseOffMode; // @dynamic pressOnReleaseOffMode;
@property(nonatomic) double crosshairOpacity; // @dynamic crosshairOpacity;
@property(nonatomic) double crosshairInset; // @dynamic crosshairInset;
- (void)setCrossshairSize:(double)arg1;
@property(nonatomic) double crosshairSize; // @dynamic crosshairSize;
- (void)setCursorForegroundBlue:(double)arg1;
@property(nonatomic) double cursorForegroundColorBlue; // @dynamic cursorForegroundColorBlue;
- (void)setCursorForegroundGreen:(double)arg1;
@property(nonatomic) double cursorForegroundColorGreen; // @dynamic cursorForegroundColorGreen;
- (void)setCursorForegroundRed:(double)arg1;
@property(nonatomic) double cursorForegroundColorRed; // @dynamic cursorForegroundColorRed;
- (void)setCursorBackgroundBlue:(double)arg1;
@property(nonatomic) double cursorBackgroundColorBlue; // @dynamic cursorBackgroundColorBlue;
- (void)setCursorBackgroundGreen:(double)arg1;
@property(nonatomic) double cursorBackgroundColorGreen; // @dynamic cursorBackgroundColorGreen;
- (void)setCursorBackgroundRed:(double)arg1;
@property(nonatomic) double cursorBackgroundColorRed; // @dynamic cursorBackgroundColorRed;
@property(nonatomic) double cursorOpacity; // @dynamic cursorOpacity;
@property(nonatomic) long long cursorType; // @dynamic cursorType;
@property(nonatomic) long long splitScreenStyle; // @dynamic splitScreenStyle;
@property(readonly, nonatomic) BOOL cursorMovesInWindow;
@property(readonly, nonatomic) BOOL windowStaysOnScreen;
@property(nonatomic) BOOL followsKeyboardFocus; // @dynamic followsKeyboardFocus;
@property(nonatomic) BOOL smoothing; // @dynamic smoothing;
@property(nonatomic) BOOL invertColors; // @dynamic invertColors;
@property(nonatomic) long long windowStyle; // @dynamic windowStyle;
@property(nonatomic) double desiredZoomFactor; // @dynamic desiredZoomFactor;
@property(nonatomic) double poroZoomFactor; // @dynamic poroZoomFactor;
@property(nonatomic) double zoomFactor; // @dynamic zoomFactor;
@property(nonatomic) struct CGSize windowSize; // @dynamic windowSize;
@property(nonatomic) struct CGPoint windowPosition; // @dynamic windowPosition;
@property(nonatomic) long long scrollWheelModifiers; // @dynamic scrollWheelModifiers;
@property(nonatomic) BOOL useScrollWheelZoom; // @dynamic useScrollWheelZoom;
@property(nonatomic) BOOL useKeyboardZoom; // @dynamic useKeyboardZoom;
@property(nonatomic) long long uaZoomMode; // @dynamic uaZoomMode;
@property(nonatomic) double scrollZoomChange; // @dynamic scrollZoomChange;
@property(nonatomic) double hotKeyZoomChange; // @dynamic hotKeyZoomChange;
@property(readonly, nonatomic) double refreshThreadHz; // @dynamic refreshThreadHz;
@property(nonatomic) double resizeDuration; // @dynamic resizeDuration;
@property(nonatomic) double resizeStepSize; // @dynamic resizeStepSize;
@property(nonatomic) double moveDuration; // @dynamic moveDuration;
@property(nonatomic) double moveStepSize; // @dynamic moveStepSize;
@property(nonatomic) double borderWidth; // @dynamic borderWidth;

@end

