//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import <TVPlayback/AVPlayerViewControllerDelegate-Protocol.h>
#import <TVPlayback/AVRoutePickerViewDelegate-Protocol.h>
#import <TVPlayback/TVPCollectionViewDelegate-Protocol.h>
#import <TVPlayback/TVPMusicNowPlayingSnapshotBackgroundViewDelegate-Protocol.h>
#import <TVPlayback/TVPMusicNowPlayingViewDelegate-Protocol.h>
#import <TVPlayback/TVPMusicVideoPlayerViewControllerDelegate-Protocol.h>
#import <TVPlayback/TVPPlaybackProgressAnimatorDelegate-Protocol.h>
#import <TVPlayback/UICollectionViewDataSource-Protocol.h>
#import <TVPlayback/UICollectionViewDelegateFlowLayout-Protocol.h>
#import <TVPlayback/UIGestureRecognizerDelegate-Protocol.h>
#import <TVPlayback/UIScrollViewDelegate-Protocol.h>

@class MPAVRoute, NSArray, NSDate, NSIndexPath, NSObject, NSOperationQueue, NSString, NSTimer, TVPAudioTransportBarView, TVPB239FingerRestGestureRecognizer, TVPB39TapGestureRecognizer, TVPChapter, TVPDefiniteDurationPlaybackProgress, TVPHardwareButtonEventManager, TVPMusicBarsView, TVPMusicNowPlayingView, TVPMusicVideoPlayerViewController, TVPPlaybackProgressAnimator, TVPScrubbingConfiguration, TVPStateMachine, UIDigitizerLongPressGestureRecognizer, UILongPressGestureRecognizer, UIScrollView, UITapGestureRecognizer, _TVPMusicNowPlayingIdleViewControllerContext, _TVPMusicNowPlayingInvalidationContext, _TVPMusicNowPlayingSelectedItemCoordinator, _TVPRoutePickerButton;
@protocol TVPMediaItem, TVPMusicNowPlayingBackgroundProvider, TVPPlayback, TVPPlaybackViewControllerDelegate;

@interface TVPMusicNowPlayingViewController : UIViewController <TVPCollectionViewDelegate, TVPMusicNowPlayingViewDelegate, TVPPlaybackProgressAnimatorDelegate, UICollectionViewDataSource, UICollectionViewDelegateFlowLayout, UIGestureRecognizerDelegate, UIScrollViewDelegate, AVPlayerViewControllerDelegate, AVRoutePickerViewDelegate, TVPMusicVideoPlayerViewControllerDelegate, TVPMusicNowPlayingSnapshotBackgroundViewDelegate>
{
    NSOperationQueue *_presentationOperationQueue;
    TVPMusicBarsView *_musicBarsView;
    struct CGPoint _scrubStartTouchLocation;
    double _scrubStartPlayPosition;
    double _scrubberFocusTime;
    _Bool _ignorePlaylistChanges;
    NSIndexPath *_focusToIndexPath;
    UITapGestureRecognizer *_b239TapGestureRecognizer;
    UIDigitizerLongPressGestureRecognizer *_longClickGestureRecognizer;
    TVPB39TapGestureRecognizer *_leftTapGestureRecognizer;
    TVPB39TapGestureRecognizer *_rightTapGestureRecognizer;
    TVPB39TapGestureRecognizer *_upTapGestureRecognizer;
    TVPB39TapGestureRecognizer *_downTapGestureRecognizer;
    UILongPressGestureRecognizer *_leftb39LongClickRecognizer;
    UILongPressGestureRecognizer *_rightb39LongClickRecognizer;
    UITapGestureRecognizer *_menuButtonRecognizer;
    TVPB239FingerRestGestureRecognizer *_fingerRestedRecognizer;
    _Bool _limitingRemoteInput;
    _Bool _playingItemWasFocused;
    long long _indexForCurrentControls;
    id <TVPMediaItem> _mediaItemForCurrentControls;
    NSIndexPath *_lastFocusedIndexPath;
    _TVPRoutePickerButton *_routePickerButton;
    _Bool _delegateHandlesGestures;
    _Bool _autoplay;
    _Bool _isRadioPlayback;
    _Bool _popWhenPlayerStops;
    _Bool _singleCoverOnly;
    _Bool _showAnimatedBackground;
    _Bool _showsInlineVideo;
    _Bool _transportBarVisible;
    _Bool _scrubbing;
    _Bool _restrictionsEnforcementPassed;
    _Bool _scrubWasDecelerating;
    _Bool _waitingForPlayerJump;
    _Bool _viewVisible;
    _Bool _viewSeen;
    _Bool _keepTransportBarVisible;
    _Bool _showingIdleViewController;
    id <TVPPlaybackViewControllerDelegate> _playbackDelegate;
    id <TVPMusicNowPlayingBackgroundProvider> _customBackgroundProvider;
    NSString *_audioRouteName;
    long long _initialPlaybackType;
    MPAVRoute *_endpointRoute;
    long long _initialViewMode;
    NSObject<TVPPlayback> *_player;
    _TVPMusicNowPlayingInvalidationContext *_invalidationContext;
    NSTimer *_updateTimer;
    TVPStateMachine *_stateMachine;
    TVPAudioTransportBarView *_transportBar;
    TVPPlaybackProgressAnimator *_playbackProgressAnimator;
    TVPDefiniteDurationPlaybackProgress *_definiteDurationPlaybackProgress;
    id _elapsedTimeToken;
    double _lastKnownElapsedTime;
    NSDate *_lastObserverFireDate;
    double _playlistExitTime;
    NSArray *_mediaItems;
    NSString *_restrictionsPasscodePreviousState;
    long long _indexToPlayAfterPasscodePrompt;
    NSIndexPath *_initialIndexPath;
    double _initialScrubPercentage;
    UIScrollView *_scrubScrollView;
    double _scrubPercentage;
    TVPScrubbingConfiguration *_scrubbingConfiguration;
    TVPChapter *_jumpDestinationChapter;
    TVPMusicVideoPlayerViewController *_videoPlayerViewController;
    TVPHardwareButtonEventManager *_buttonEventManager;
    _TVPMusicNowPlayingSelectedItemCoordinator *_selectedItemCoordinator;
    UIViewController *_idleViewController;
    _TVPMusicNowPlayingIdleViewControllerContext *_idleViewControllerContext;
}

+ (void)initialize;
- (void).cxx_destruct;
@property(retain, nonatomic) _TVPMusicNowPlayingIdleViewControllerContext *idleViewControllerContext; // @synthesize idleViewControllerContext=_idleViewControllerContext;
@property(retain, nonatomic) UIViewController *idleViewController; // @synthesize idleViewController=_idleViewController;
@property(nonatomic, getter=isShowingIdleViewController) _Bool showingIdleViewController; // @synthesize showingIdleViewController=_showingIdleViewController;
@property(nonatomic) _Bool keepTransportBarVisible; // @synthesize keepTransportBarVisible=_keepTransportBarVisible;
@property(retain, nonatomic) _TVPMusicNowPlayingSelectedItemCoordinator *selectedItemCoordinator; // @synthesize selectedItemCoordinator=_selectedItemCoordinator;
@property(retain, nonatomic) TVPHardwareButtonEventManager *buttonEventManager; // @synthesize buttonEventManager=_buttonEventManager;
@property(retain, nonatomic) TVPMusicVideoPlayerViewController *videoPlayerViewController; // @synthesize videoPlayerViewController=_videoPlayerViewController;
@property(nonatomic, getter=isViewSeen) _Bool viewSeen; // @synthesize viewSeen=_viewSeen;
@property(nonatomic, getter=isViewVisible) _Bool viewVisible; // @synthesize viewVisible=_viewVisible;
@property(nonatomic) _Bool waitingForPlayerJump; // @synthesize waitingForPlayerJump=_waitingForPlayerJump;
@property(retain, nonatomic) TVPChapter *jumpDestinationChapter; // @synthesize jumpDestinationChapter=_jumpDestinationChapter;
@property(retain, nonatomic) TVPScrubbingConfiguration *scrubbingConfiguration; // @synthesize scrubbingConfiguration=_scrubbingConfiguration;
@property(nonatomic) _Bool scrubWasDecelerating; // @synthesize scrubWasDecelerating=_scrubWasDecelerating;
@property(nonatomic) double scrubPercentage; // @synthesize scrubPercentage=_scrubPercentage;
@property(retain, nonatomic) UIScrollView *scrubScrollView; // @synthesize scrubScrollView=_scrubScrollView;
@property(nonatomic) double initialScrubPercentage; // @synthesize initialScrubPercentage=_initialScrubPercentage;
@property(retain, nonatomic) NSIndexPath *initialIndexPath; // @synthesize initialIndexPath=_initialIndexPath;
@property(nonatomic) long long indexToPlayAfterPasscodePrompt; // @synthesize indexToPlayAfterPasscodePrompt=_indexToPlayAfterPasscodePrompt;
@property(retain, nonatomic) NSString *restrictionsPasscodePreviousState; // @synthesize restrictionsPasscodePreviousState=_restrictionsPasscodePreviousState;
@property(nonatomic) _Bool restrictionsEnforcementPassed; // @synthesize restrictionsEnforcementPassed=_restrictionsEnforcementPassed;
@property(readonly, nonatomic) NSArray *mediaItems; // @synthesize mediaItems=_mediaItems;
@property(nonatomic, getter=isScrubbing) _Bool scrubbing; // @synthesize scrubbing=_scrubbing;
@property(nonatomic) double playlistExitTime; // @synthesize playlistExitTime=_playlistExitTime;
@property(nonatomic, getter=isTransportBarVisible) _Bool transportBarVisible; // @synthesize transportBarVisible=_transportBarVisible;
@property(copy, nonatomic) NSDate *lastObserverFireDate; // @synthesize lastObserverFireDate=_lastObserverFireDate;
@property(nonatomic) double lastKnownElapsedTime; // @synthesize lastKnownElapsedTime=_lastKnownElapsedTime;
@property(retain, nonatomic) id elapsedTimeToken; // @synthesize elapsedTimeToken=_elapsedTimeToken;
@property(retain, nonatomic) TVPDefiniteDurationPlaybackProgress *definiteDurationPlaybackProgress; // @synthesize definiteDurationPlaybackProgress=_definiteDurationPlaybackProgress;
@property(retain, nonatomic) TVPPlaybackProgressAnimator *playbackProgressAnimator; // @synthesize playbackProgressAnimator=_playbackProgressAnimator;
@property(retain, nonatomic) TVPAudioTransportBarView *transportBar; // @synthesize transportBar=_transportBar;
@property(retain, nonatomic) TVPStateMachine *stateMachine; // @synthesize stateMachine=_stateMachine;
@property(retain, nonatomic) NSTimer *updateTimer; // @synthesize updateTimer=_updateTimer;
@property(retain, nonatomic) _TVPMusicNowPlayingInvalidationContext *invalidationContext; // @synthesize invalidationContext=_invalidationContext;
@property(retain, nonatomic) NSObject<TVPPlayback> *player; // @synthesize player=_player;
@property(nonatomic) long long initialViewMode; // @synthesize initialViewMode=_initialViewMode;
@property(retain, nonatomic) MPAVRoute *endpointRoute; // @synthesize endpointRoute=_endpointRoute;
@property(nonatomic) _Bool showsInlineVideo; // @synthesize showsInlineVideo=_showsInlineVideo;
@property(readonly, nonatomic) long long initialPlaybackType; // @synthesize initialPlaybackType=_initialPlaybackType;
@property(copy, nonatomic) NSString *audioRouteName; // @synthesize audioRouteName=_audioRouteName;
@property(retain, nonatomic) id <TVPMusicNowPlayingBackgroundProvider> customBackgroundProvider; // @synthesize customBackgroundProvider=_customBackgroundProvider;
@property(nonatomic) _Bool showAnimatedBackground; // @synthesize showAnimatedBackground=_showAnimatedBackground;
@property(nonatomic) __weak id <TVPPlaybackViewControllerDelegate> playbackDelegate; // @synthesize playbackDelegate=_playbackDelegate;
@property(nonatomic) _Bool singleCoverOnly; // @synthesize singleCoverOnly=_singleCoverOnly;
@property(nonatomic) _Bool popWhenPlayerStops; // @synthesize popWhenPlayerStops=_popWhenPlayerStops;
@property(nonatomic) _Bool isRadioPlayback; // @synthesize isRadioPlayback=_isRadioPlayback;
@property(nonatomic) _Bool autoplay; // @synthesize autoplay=_autoplay;
- (void)_registerStateMachineHandlers;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)_scrubScrollViewWillEndDraggingWithVelocity:(struct CGPoint)arg1 targetContentOffset:(inout struct CGPoint *)arg2;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (_Bool)nowPlayingSnapshotBackgroundViewShouldPerformSnapshot:(id)arg1;
- (_Bool)musicVideoPlayerViewControllerShouldDismiss:(id)arg1;
- (void)musicVideoPlayerSelectedAddButton:(id)arg1;
- (void)musicVideoPlayerViewControllerWillDisappear:(id)arg1;
- (void)musicVideoPlayerViewControllerWillAppear:(id)arg1;
- (struct CGRect)musicVideoPlayerViewController:(id)arg1 rectForPresentationAnimationTransitionInSourceView:(id)arg2;
- (id)musicVideoPlayerViewControllerSourceViewForPresentationAnimationTransition:(id)arg1;
- (void)skipToPreviousItemForPlayerViewController:(id)arg1;
- (void)skipToNextItemForPlayerViewController:(id)arg1;
- (_Bool)playerViewControllerShouldDismiss:(id)arg1;
- (id)indexPathForPreferredFocusedViewInCollectionView:(id)arg1;
- (void)collectionView:(id)arg1 didFocusItemAtIndexPath:(id)arg2;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (struct UIEdgeInsets)collectionView:(id)arg1 layout:(id)arg2 insetForSectionAtIndex:(long long)arg3;
- (void)collectionView:(id)arg1 willDisplayCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (void)_dismissVideoViewController;
- (_Bool)_isScrubbingAllowed;
- (_Bool)_shouldShowTransportBar;
- (_Bool)_isAudioOnDemand;
- (_Bool)_isMediaItemExplicit:(id)arg1;
- (_Bool)_shouldShowRestrictionsPromptForMediaItem:(id)arg1;
- (_Bool)_shouldRestrictExplicitTracks;
- (_Bool)_restrictionsEnabled;
- (void)_updateIdleViewControllerIfNeeded;
- (id)_currentMediaItemForIdleViewController;
- (void)_removeIdleViewControllerAndRestoreLayout:(_Bool)arg1 animatingBeforePlaylist:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_removeIdleViewControllerAndRestoreLayout:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_setIdleViewController:(id)arg1 forMediaItem:(id)arg2;
- (void)updateIdleViewControllerIfNeeded;
- (void)_transitionToPlaylistWithAfterCurrentStateTransitionBlock:(CDUnknownBlockType *)arg1 animated:(_Bool)arg2;
- (_Bool)_isUnknownItemType;
- (void)configureVideoForVisibleCellsWithPlayingIndexPath:(id)arg1;
- (void)configureVideoForVisibleCells;
- (void)_updateNowPlayingViewAnimated:(_Bool)arg1;
- (void)_updateNowPlayingView;
- (void)_scrollCollectionView:(id)arg1 toIndexPath:(id)arg2 animated:(_Bool)arg3;
- (struct CGPoint)_contentOffsetForIndexPath:(id)arg1;
- (void)_showDataForFocusedItem:(id)arg1;
- (void)_setMusicBarForIndexPath:(id)arg1;
- (void)_updateControlsForMediaItem:(id)arg1;
- (void)_updateControlsForMediaItemAtIndexPath:(id)arg1;
- (id)_loadStringValueForMetadataItem:(id)arg1;
- (void)_stateMachineStateChangedFromState:(id)arg1 toState:(id)arg2;
- (void)_didBecomeActive:(id)arg1;
- (void)_willResignActive:(id)arg1;
- (void)_metadataDidChange:(id)arg1;
- (void)_playbackDidError:(id)arg1;
- (void)_playbackStateDidChange:(id)arg1;
- (_Bool)_isDescendentOfViewController:(id)arg1;
- (void)_playbackMediaItemDidChange:(id)arg1;
- (id)_nowPlayingInfoFromMediaItem:(id)arg1;
- (void)_willStartUserInitiatedPlayback;
- (void)_playMediaItemAtIndex:(long long)arg1;
- (void)resumeAnimatingMusicBars;
- (void)stopAnimatingMusicBars;
@property(readonly, nonatomic) TVPMusicNowPlayingView *nowPlayingView;
- (void)_handleTogglePlayPause;
- (void)_handleMenuButton:(id)arg1;
- (void)_handleRightLongClick:(id)arg1;
- (void)_handleLeftLongClick:(id)arg1;
- (void)_handleLongClick:(id)arg1;
- (void)_handleSelectButton:(id)arg1;
- (_Bool)_delegateHandlerForControlGesture:(long long)arg1;
- (_Bool)_doesDelegateHandleControlGestures;
- (void)_fingerRestRecognized:(id)arg1;
- (void)_handleDownTap:(id)arg1;
- (void)_handleUpTap:(id)arg1;
- (void)_handleRightTap:(id)arg1;
- (void)_handleLeftTap:(id)arg1;
- (void)didUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (_Bool)shouldUpdateFocusInContext:(id)arg1;
- (id)preferredFocusEnvironments;
- (void)routePickerViewDidEndPresentingRoutes:(id)arg1;
- (void)routePickerViewWillBeginPresentingRoutes:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)_performPlayNextCommandForItemAtIndex:(long long)arg1;
- (id)focusIndexPathForNowPlayingView:(id)arg1;
- (void)nowPlayingViewDidSelectShuffle:(id)arg1;
- (void)nowPlayingViewDidSelectRepeat:(id)arg1;
- (void)nowPlayingViewDidPressPlayPause:(id)arg1;
- (_Bool)nowPlayingViewShouldHandlePressPlayPause:(id)arg1;
- (id)nothingPlayingArtworkForNowPlayingView:(id)arg1;
- (void)nowPlayingViewDidSelectContextMenu:(id)arg1;
- (void)nowPlayingViewPlaylistDidBecomeHidden:(id)arg1;
- (void)nowPlayingView:(id)arg1 playlistWillBecomeHiddenWithExecutionBlock:(CDUnknownBlockType)arg2;
- (void)nowPlayingView:(id)arg1 playlistWillBecomeVisibleWithExecutionBlock:(CDUnknownBlockType)arg2;
- (void)_showContextMenu;
- (void)_setPlayerElapsedTimeFromScrubberPosition;
- (double)_scrubPercentageBySnappingToNeareastChapterForScrubPercentage:(double)arg1 withScrollView:(id)arg2 horizontalVelocity:(double)arg3;
- (void)_saveJumpDestinationChapterWithElapsedTime:(double)arg1;
- (void)_scrubScrollViewDidEndDecelerating;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)_scrubScrollViewDidEndDraggingAndWillDecelerate:(_Bool)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)_scrubScrollViewWillBeginDragging;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)_scrubScrollViewDidScroll;
- (void)scrollViewDidScroll:(id)arg1;
- (void)_updateScrubPercentageWithScrollView:(id)arg1;
- (double)_scrubPercentageForContentOffset:(struct CGPoint)arg1 withScrollView:(id)arg2;
- (struct CGPoint)_contentOffsetForScrubPercentage:(double)arg1 withScrollView:(id)arg2;
- (double)_scrubPercentageForElapsedTime:(double)arg1;
- (double)_elapsedTimeForScrubPercentage:(double)arg1;
- (void)_updateOffsetWithElapsedTime:(double)arg1;
- (void)playbackProgressAnimator:(id)arg1 updateTitlesForElapsedTime:(double)arg2 withPlaybackDuration:(double)arg3;
- (double)currentElapsedTimeForPlaybackProgressAnimator:(id)arg1;
- (_Bool)_skipForwardOrBackIfNeeded;
- (void)_addGestureRecognizers;
- (struct CGSize)_itemSizeForMediaItem:(id)arg1;
@property(readonly, nonatomic) NSIndexPath *indexPathForLastFocusedItem;
- (long long)_indexForPlayingItem;
- (id)_indexPathForPlayingItem;
- (void)_syncPlaybackProgressAnimatorToTransportBarVisibleState:(_Bool)arg1;
- (void)_addTransportBar;
- (id)_playlistCollectionView;
- (_Bool)_isScrubberActive;
- (void)_focusCurrentPlayingItemAnimated:(_Bool)arg1;
- (void)_focusCurrentPlayingItem;
- (_Bool)_shouldShowControls;
- (void)_startPlaylistExitTimeout:(long long)arg1;
- (_Bool)_isStreamingLive;
- (_Bool)_isStreamingRadioPlayback;
- (void)_timerTick:(id)arg1;
- (void)_updateFullscreenViewControllerForMediaItem:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_setBackdropForMediaItem:(id)arg1;
- (_Bool)_tvTabBarShouldAutohide;
@property(readonly, nonatomic) _Bool isShowingVideoPlayer;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)reloadCurrentControls;
- (void)reloadPlaylist;
- (void)viewWillLayoutSubviews;
- (void)viewDidLoad;
- (void)loadView;
- (void)dealloc;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)traitCollectionDidChange:(id)arg1;
- (void)_updateBoundBufferredTimeRange;
- (void)performBatchUpdates:(CDUnknownBlockType)arg1;
- (void)_finishBatchUpdates:(id)arg1;
- (void)_beginBatchUpdates:(id)arg1;
- (id)initWithPlayer:(id)arg1 initialPlaybackType:(long long)arg2;
- (id)initWithPlayer:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

