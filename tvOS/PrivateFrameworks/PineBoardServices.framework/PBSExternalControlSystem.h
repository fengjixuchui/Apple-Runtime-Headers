//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSMutableArray, NSString, NSTimer, NSUUID, PBSIRVolumeButtonConfiguration;
@protocol OS_dispatch_queue, PBSExternalControlSystemDelegate;

@interface PBSExternalControlSystem : NSObject
{
    _Bool _isActiveSource;
    _Bool _isAppleIRRemotePaired;
    _Bool _needToUpdateCachedState;
    unsigned int _noIdleAssertionID;
    int _actionBeingLearned;
    int _deviceTypeBeingLearned;
    int _lastProgrammedVolumePolicy;
    int _lastProgrammedMutePolicy;
    id <PBSExternalControlSystemDelegate> _delegate;
    PBSIRVolumeButtonConfiguration *_selectedVolumeButtonConfiguration;
    NSString *_volumeDeviceName;
    PBSIRVolumeButtonConfiguration *_effectiveVolumeButtonConfiguration;
    id _domainObserver;
    NSObject<OS_dispatch_queue> *_coreControlQueue;
    NSObject<OS_dispatch_queue> *_serialActionQueue;
    long long _noIdleAssertionRefCount;
    id _coreControlPrefsObserver;
    NSTimer *_rapidCECVolumeButtonReleaseTimer;
    NSTimer *_rapidDelegateVolumeButtonReleaseTimer;
    NSTimer *_delegateVolumeRepeatTimer;
    NSMutableArray *_queuedActions;
    NSUUID *_lastProgrammedVolumeConfiguration;
    NSUUID *_lastProgrammedMuteConfiguration;
    NSString *_lastProgrammedRemoteIDStr;
    NSMutableArray *_learnedIRConfigurations;
    long long _lastVolumeButtonsEnabledState;
    long long _pendingVolumeUpReleaseEvents;
    long long _pendingVolumeDownReleaseEvents;
    long long _internalVolumeButtonBehavior;
}

+ (id)sharedSystem;
- (void).cxx_destruct;
@property(nonatomic) long long internalVolumeButtonBehavior; // @synthesize internalVolumeButtonBehavior=_internalVolumeButtonBehavior;
@property(nonatomic) long long pendingVolumeDownReleaseEvents; // @synthesize pendingVolumeDownReleaseEvents=_pendingVolumeDownReleaseEvents;
@property(nonatomic) long long pendingVolumeUpReleaseEvents; // @synthesize pendingVolumeUpReleaseEvents=_pendingVolumeUpReleaseEvents;
@property(nonatomic) long long lastVolumeButtonsEnabledState; // @synthesize lastVolumeButtonsEnabledState=_lastVolumeButtonsEnabledState;
@property(retain, nonatomic) NSMutableArray *learnedIRConfigurations; // @synthesize learnedIRConfigurations=_learnedIRConfigurations;
@property(retain, nonatomic) NSString *lastProgrammedRemoteIDStr; // @synthesize lastProgrammedRemoteIDStr=_lastProgrammedRemoteIDStr;
@property(retain, nonatomic) NSUUID *lastProgrammedMuteConfiguration; // @synthesize lastProgrammedMuteConfiguration=_lastProgrammedMuteConfiguration;
@property(retain, nonatomic) NSUUID *lastProgrammedVolumeConfiguration; // @synthesize lastProgrammedVolumeConfiguration=_lastProgrammedVolumeConfiguration;
@property(nonatomic) int lastProgrammedMutePolicy; // @synthesize lastProgrammedMutePolicy=_lastProgrammedMutePolicy;
@property(nonatomic) int lastProgrammedVolumePolicy; // @synthesize lastProgrammedVolumePolicy=_lastProgrammedVolumePolicy;
@property(retain, nonatomic) NSMutableArray *queuedActions; // @synthesize queuedActions=_queuedActions;
@property(retain, nonatomic) NSTimer *delegateVolumeRepeatTimer; // @synthesize delegateVolumeRepeatTimer=_delegateVolumeRepeatTimer;
@property(retain, nonatomic) NSTimer *rapidDelegateVolumeButtonReleaseTimer; // @synthesize rapidDelegateVolumeButtonReleaseTimer=_rapidDelegateVolumeButtonReleaseTimer;
@property(retain, nonatomic) NSTimer *rapidCECVolumeButtonReleaseTimer; // @synthesize rapidCECVolumeButtonReleaseTimer=_rapidCECVolumeButtonReleaseTimer;
@property(nonatomic) int deviceTypeBeingLearned; // @synthesize deviceTypeBeingLearned=_deviceTypeBeingLearned;
@property(nonatomic) int actionBeingLearned; // @synthesize actionBeingLearned=_actionBeingLearned;
@property(retain, nonatomic) id coreControlPrefsObserver; // @synthesize coreControlPrefsObserver=_coreControlPrefsObserver;
@property(nonatomic) long long noIdleAssertionRefCount; // @synthesize noIdleAssertionRefCount=_noIdleAssertionRefCount;
@property(nonatomic) unsigned int noIdleAssertionID; // @synthesize noIdleAssertionID=_noIdleAssertionID;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *serialActionQueue; // @synthesize serialActionQueue=_serialActionQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *coreControlQueue; // @synthesize coreControlQueue=_coreControlQueue;
@property(retain, nonatomic) id domainObserver; // @synthesize domainObserver=_domainObserver;
@property(nonatomic) _Bool needToUpdateCachedState; // @synthesize needToUpdateCachedState=_needToUpdateCachedState;
@property(retain, nonatomic) PBSIRVolumeButtonConfiguration *effectiveVolumeButtonConfiguration; // @synthesize effectiveVolumeButtonConfiguration=_effectiveVolumeButtonConfiguration;
@property(nonatomic) _Bool isAppleIRRemotePaired; // @synthesize isAppleIRRemotePaired=_isAppleIRRemotePaired;
@property(nonatomic) _Bool isActiveSource; // @synthesize isActiveSource=_isActiveSource;
@property(copy, nonatomic) NSString *volumeDeviceName; // @synthesize volumeDeviceName=_volumeDeviceName;
@property(copy, nonatomic) PBSIRVolumeButtonConfiguration *selectedVolumeButtonConfiguration; // @synthesize selectedVolumeButtonConfiguration=_selectedVolumeButtonConfiguration;
@property(nonatomic) __weak id <PBSExternalControlSystemDelegate> delegate; // @synthesize delegate=_delegate;
- (id)_addAdditionalUsageReportingDataTo:(id)arg1;
- (id)_stringFromVolumeButtonBehavior:(long long)arg1;
- (id)_stringFromExternalControlSystemAction:(long long)arg1;
- (id)_SYNC_nameForExternalIRDeviceWithUUID:(id)arg1;
- (id)_SYNC_availableExternalIRDeviceUUIDsForDeviceType:(int)arg1;
- (_Bool)_SYNC_setName:(id)arg1 forExternalIRDeviceWithUUID:(id)arg2 error:(id *)arg3;
- (_Bool)_SYNC_SelectIRVolumeButtonConfiguration:(id)arg1;
- (_Bool)_SYNC_setCoreControlPolicyPreference:(int)arg1 forFeature:(id)arg2;
- (long long)_transportForFeature:(id)arg1;
- (int)_coreControlPolicyPreferenceForFeature:(id)arg1;
- (int)_coreControlPolicyForFeature:(id)arg1;
- (int)_coreControlActionForFeature:(id)arg1;
- (_Bool)_isConfiguredForAction:(long long)arg1;
- (_Bool)_isConfiguredForFeature:(id)arg1;
- (_Bool)_isReadyForAction:(long long)arg1;
- (_Bool)_isReadyForFeature:(id)arg1;
- (id)_SYNC_setDefaultNameForDeviceWithUUID:(id)arg1 type:(int)arg2;
- (id)_SYNC_defaultNameForDeviceType:(int)arg1;
- (void)_clearRapidDelegateVolumeButtonReleaseTimer;
- (void)_clearDelegateVolumeRepeatTimer;
- (void)_clearVolumeButtonChordCache;
- (void)_SYNC_cacheVolumeButtonChords;
- (_Bool)_shouldForwardVolumeActions;
- (void)_rapidCECVolumeButtonReleaseTimerFired:(id)arg1;
- (void)_clearRapidCECVolumeButtonReleaseTimer;
- (void)_startRapidCECVolumeButtonReleaseTimerForAction:(long long)arg1;
- (void)_delegateVolumeRepeatTimerFired:(id)arg1;
- (void)_startDelegateVolumeRepeatTimerForAction:(long long)arg1;
- (void)_rapidDelegateVolumeButtonReleaseTimerFired:(id)arg1;
- (void)_startRapidDelegateVolumeButtonReleaseTimerForAction:(long long)arg1;
- (void)_decreaseRouteVolume;
- (void)_increaseRouteVolume;
- (void)_sendCECVolumeAction:(long long)arg1;
- (void)_handleCECVolumeAction:(long long)arg1;
- (void)_handleDelegateVolumeAction:(long long)arg1;
- (void)_SYNC_setVolumeIRCommandsAllowed:(_Bool)arg1;
- (id)_SYNC_effectiveIRVolumeButtonConfiguration;
- (void)_allowIdleSleep;
- (void)_preventIdleSleep;
- (void)_setPower:(_Bool)arg1;
- (void)_sendActiveSourceAction:(int)arg1;
- (void)_forgetLearnedIRConfigurationWithUUID:(id)arg1;
- (void)_rememberLearnedIRConfigurationWithUUID:(id)arg1;
- (void)_saveLastProgrammedVolumeAndMuteData;
- (void)_loadLastProgrammedVolumeAndMuteData;
- (void)_externalPreferencesChanged;
- (void)_refreshAppleTVServicesPreferences;
- (void)_SYNC_updateCachedState;
- (void)_SYNC_updateFeature:(id)arg1;
- (void)_SYNC_updateFeatures;
- (void)_setInitialPolicies;
- (void)_SYNC_initializeCoreControlInstance;
- (void)_didFinishLearningAction;
- (void)_didCompleteLearningActionWithResult:(_Bool)arg1 error:(id)arg2;
- (void)_didLearnActionWithProgress:(double)arg1;
- (void)_willStartLearningAction:(int)arg1;
- (void)_didReceiveRequest:(long long)arg1;
- (void)_didReceiveDeviceEvent:(long long)arg1;
- (void)_didCompleteAction:(int)arg1 withResult:(_Bool)arg2 error:(id)arg3;
- (void)_didChangeLinkStatus:(_Bool)arg1;
- (void)_didHandleRemoteControlButtonReleased:(long long)arg1;
- (void)_didHandleRemoteControlButtonPressed:(long long)arg1;
- (void)_didResignActiveSource;
- (void)_didBecomeActiveSource;
- (void)_didUpdatePolicy;
- (void)_didChangeTopology;
- (void)_didChangeReadyStatusTo:(_Bool)arg1;
- (void)removeIRDeviceWithUUID:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)setName:(id)arg1 forExternalIRDeviceWithUUID:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (void)getNameForExternalIRDeviceWithUUID:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)getAvailableIRLearningConfigurationsWithCompletion:(CDUnknownBlockType)arg1;
- (void)learnIRActionAsync:(int)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)cancelIRLearningWithCompletion:(CDUnknownBlockType)arg1;
- (void)commitIRLearningForDeviceWithUUID:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)startIRLearningForDeviceType:(int)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)unpairAppleIRRemoteWithCompletion:(CDUnknownBlockType)arg1;
- (void)pairAppleIRRemoteWithCompletion:(CDUnknownBlockType)arg1;
- (long long)volumeButtonBehavior;
- (void)setVolumeButtonBehavior:(long long)arg1;
- (void)cancelPendingVolumeActions;
- (void)programAppleRemoteWithCurrentIRVolumeButtonConfigurationWithCompletion:(CDUnknownBlockType)arg1;
- (void)selectIRVolumeButtonConfiguration:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)getIRVolumeButtonConfigurationsWithCompletion:(CDUnknownBlockType)arg1;
- (void)gatherUsageReportingDataWithCompletion:(CDUnknownBlockType)arg1;
- (void)sendAction:(long long)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)togglePolicyForFeature:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)updateFeature:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (id)debugDescription;
- (void)dealloc;
- (id)init;

@end

