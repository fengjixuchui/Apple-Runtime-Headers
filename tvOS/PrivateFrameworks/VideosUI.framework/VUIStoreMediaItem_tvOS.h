//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <TVPlayback/TVPBaseMediaItem.h>

#import <VideosUI/TVPContentKeyLoading-Protocol.h>
#import <VideosUI/VUIStoreFPSKeyLoaderDelegate-Protocol.h>
#import <VideosUI/VUIVideoLeaseAgentDelegate-Protocol.h>

@class MPMediaItem, NSDictionary, NSError, NSNumber, NSObject, NSOperationQueue, NSString, NSURL, TVPPlayer, TVSDocumentLoader, VUIBookmark, VUIStoreFPSKeyLoader, VUIVideoLeaseAgent;
@protocol TVPMediaItem;

@interface VUIStoreMediaItem_tvOS : TVPBaseMediaItem <VUIVideoLeaseAgentDelegate, VUIStoreFPSKeyLoaderDelegate, TVPContentKeyLoading>
{
    _Bool _bookmarkDisabled;
    _Bool _disableResumeMenu;
    _Bool _ignoreLeaseAgentStateChanges;
    _Bool _needsRentalCheckin;
    NSString *_actionParams;
    long long _mediaType;
    NSURL *_hlsPlaylistURL;
    NSNumber *_contentRatingRank;
    NSNumber *_rentalID;
    NSDictionary *_storeItemDict;
    NSNumber *_bookmarkOverrideTime;
    NSURL *_fpsCertificateURL;
    NSURL *_fpsKeyServerURL;
    NSDictionary *_fpsAdditionalServerParams;
    NSURL *_playbackURL;
    long long _playbackType;
    NSDictionary *_preferredStoreAssetDict;
    VUIVideoLeaseAgent *_leaseAgent;
    VUIStoreFPSKeyLoader *_storeFPSKeyLoader;
    TVSDocumentLoader *_trickPlayImageConfigDocumentLoader;
    NSObject<TVPMediaItem> *_scrubMediaItem;
    TVPPlayer *_scrubPlayer;
    unsigned long long _loadingContext;
    NSError *_fpsKeyError;
    VUIBookmark *_bookmark;
    NSOperationQueue *_rottenTomatoesOperationQueue;
    MPMediaItem *_mpMediaItem;
    NSString *_contentRatingDomain;
}

+ (id)_rentalsRequestDocumentLoaderWithStartID:(id)arg1 endID:(id)arg2;
+ (void)_fetchRentalsFromStoreWithCompletion:(CDUnknownBlockType)arg1;
+ (void)_checkInOrphansRentalsIfNeeded;
+ (void)_checkInRentalWithDSID:(id)arg1 rentalID:(id)arg2;
+ (void)checkInOrphanedRentals;
+ (void)initialize;
- (void).cxx_destruct;
@property(retain, nonatomic) NSString *contentRatingDomain; // @synthesize contentRatingDomain=_contentRatingDomain;
@property(retain, nonatomic) MPMediaItem *mpMediaItem; // @synthesize mpMediaItem=_mpMediaItem;
@property(retain, nonatomic) NSOperationQueue *rottenTomatoesOperationQueue; // @synthesize rottenTomatoesOperationQueue=_rottenTomatoesOperationQueue;
@property(retain, nonatomic) VUIBookmark *bookmark; // @synthesize bookmark=_bookmark;
@property(retain, nonatomic) NSError *fpsKeyError; // @synthesize fpsKeyError=_fpsKeyError;
@property(nonatomic) _Bool needsRentalCheckin; // @synthesize needsRentalCheckin=_needsRentalCheckin;
@property(nonatomic) unsigned long long loadingContext; // @synthesize loadingContext=_loadingContext;
@property(retain, nonatomic) TVPPlayer *scrubPlayer; // @synthesize scrubPlayer=_scrubPlayer;
@property(retain, nonatomic) NSObject<TVPMediaItem> *scrubMediaItem; // @synthesize scrubMediaItem=_scrubMediaItem;
@property(retain, nonatomic) TVSDocumentLoader *trickPlayImageConfigDocumentLoader; // @synthesize trickPlayImageConfigDocumentLoader=_trickPlayImageConfigDocumentLoader;
@property(retain, nonatomic) VUIStoreFPSKeyLoader *storeFPSKeyLoader; // @synthesize storeFPSKeyLoader=_storeFPSKeyLoader;
@property(nonatomic) _Bool ignoreLeaseAgentStateChanges; // @synthesize ignoreLeaseAgentStateChanges=_ignoreLeaseAgentStateChanges;
@property(retain, nonatomic) VUIVideoLeaseAgent *leaseAgent; // @synthesize leaseAgent=_leaseAgent;
@property(retain, nonatomic) NSDictionary *preferredStoreAssetDict; // @synthesize preferredStoreAssetDict=_preferredStoreAssetDict;
@property(nonatomic) long long playbackType; // @synthesize playbackType=_playbackType;
@property(retain, nonatomic) NSURL *playbackURL; // @synthesize playbackURL=_playbackURL;
@property(copy, nonatomic) NSDictionary *fpsAdditionalServerParams; // @synthesize fpsAdditionalServerParams=_fpsAdditionalServerParams;
@property(copy, nonatomic) NSURL *fpsKeyServerURL; // @synthesize fpsKeyServerURL=_fpsKeyServerURL;
@property(copy, nonatomic) NSURL *fpsCertificateURL; // @synthesize fpsCertificateURL=_fpsCertificateURL;
@property(nonatomic) _Bool disableResumeMenu; // @synthesize disableResumeMenu=_disableResumeMenu;
@property(copy, nonatomic) NSNumber *bookmarkOverrideTime; // @synthesize bookmarkOverrideTime=_bookmarkOverrideTime;
@property(nonatomic) _Bool bookmarkDisabled; // @synthesize bookmarkDisabled=_bookmarkDisabled;
@property(copy, nonatomic) NSDictionary *storeItemDict; // @synthesize storeItemDict=_storeItemDict;
@property(copy, nonatomic) NSNumber *rentalID; // @synthesize rentalID=_rentalID;
@property(copy, nonatomic) NSNumber *contentRatingRank; // @synthesize contentRatingRank=_contentRatingRank;
@property(copy, nonatomic) NSURL *hlsPlaylistURL; // @synthesize hlsPlaylistURL=_hlsPlaylistURL;
@property(nonatomic) long long mediaType; // @synthesize mediaType=_mediaType;
@property(copy, nonatomic) NSString *actionParams; // @synthesize actionParams=_actionParams;
- (id)_preferredStoreAssetDictFromStoreItemDict:(id)arg1;
- (void)_initializePlaybackType;
- (void)_updateRentalExpirationDate:(id)arg1 playbackStartDate:(id)arg2;
- (id)_bookmarkNetTime;
- (id)_adamIDString;
- (id)_serviceIdentifier;
- (void)_scrubPlayerItemDidLoad:(id)arg1;
- (void)_loadTomatoRatingDataForAdamID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)_mediaItemPreparationCancelled:(unsigned long long)arg1;
- (void)_loadTrickPlayConfigURL;
- (_Bool)_usesFileBasedContentLease;
- (void)_checkInRental;
- (void)_checkoutRentalWithCompletion:(CDUnknownBlockType)arg1;
- (void)_startLeaseWithCompletion:(CDUnknownBlockType)arg1;
- (void)_performRedownloadWithCompletion:(CDUnknownBlockType)arg1;
- (id)_imageLoader;
- (_Bool)_supportsBookmarks;
- (void)storeFPSKeyLoader:(id)arg1 didReceiveUpdatedRentalExpirationDate:(id)arg2 playbackStartDate:(id)arg3;
- (void)storeFPSKeyLoader:(id)arg1 willFailWithError:(id)arg2 forKeyRequest:(id)arg3;
- (void)loadFairPlayStreamingKeyRequests:(id)arg1;
- (void)leaseAgent:(id)arg1 renewalDidFailWithError:(id)arg2;
- (void)updatePlayCountForElapsedTime:(double)arg1 duration:(double)arg2;
- (void)updateBookmarkWithSuggestedTime:(double)arg1 forElapsedTime:(double)arg2 duration:(double)arg3 playbackOfMediaItemIsEnding:(_Bool)arg4;
- (void)cleanUpMediaItem;
- (id)replacementErrorForPlaybackError:(id)arg1;
- (void)prepareForPlaybackInitiationWithCompletion:(CDUnknownBlockType)arg1;
- (void)prepareForLoadingWithCompletion:(CDUnknownBlockType)arg1;
- (id)mediaItemMetadataForProperty:(id)arg1;
- (_Bool)hasTrait:(id)arg1;
- (id)mediaItemURL;
- (_Bool)isEqualToMediaItem:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)dealloc;
- (id)initWithActionParams:(id)arg1 mediaType:(long long)arg2 hlsPlaylistURL:(id)arg3 contentRatingRank:(id)arg4 contentRatingDomain:(id)arg5 rentalID:(id)arg6;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

