//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <TVServices/TVSEthernetInterface.h>

@class NSArray, NSOperationQueue, NSString, TVSWiFiDisassociationOperation, TVSWiFiNetwork, _TVSWiFiNetworkAssociationContext;

@interface TVSWiFiInterface : TVSEthernetInterface
{
    _Bool _observingSignalStrength;
    NSOperationQueue *_wifiQueue;
    _Bool _enabled;
    NSString *_networkName;
    TVSWiFiNetwork *_associatedNetwork;
    NSArray *_availableNetworks;
    _TVSWiFiNetworkAssociationContext *_associationContext;
    TVSWiFiDisassociationOperation *_pendingDisassociationOperation;
}

+ (id)_interfaceType;
+ (_Bool)_supportsInterface:(struct __SCNetworkInterface *)arg1;
+ (void)enableNetworkManagement;
+ (id)WiFiInterface;
- (void).cxx_destruct;
@property(retain, nonatomic) TVSWiFiDisassociationOperation *pendingDisassociationOperation; // @synthesize pendingDisassociationOperation=_pendingDisassociationOperation;
@property(retain, nonatomic) _TVSWiFiNetworkAssociationContext *associationContext; // @synthesize associationContext=_associationContext;
@property(nonatomic, getter=isEnabled) _Bool enabled; // @synthesize enabled=_enabled;
@property(copy, nonatomic) NSArray *availableNetworks; // @synthesize availableNetworks=_availableNetworks;
@property(retain, nonatomic) TVSWiFiNetwork *associatedNetwork; // @synthesize associatedNetwork=_associatedNetwork;
@property(copy, nonatomic) NSString *networkName; // @synthesize networkName=_networkName;
- (id)_wifiQueue;
- (void)_updateSignalStrengthObservation;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)disassociateNetwork:(id)arg1;
- (void)cancelDirectedScan:(id)arg1;
- (id)beginDirectedScanWithNetworkName:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)associateNetwork:(id)arg1 withPassword:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)cancelAvailableNetworksRefresh:(id)arg1;
- (id)refreshAvailableNetworks;
- (void)_updateWithServiceRef:(struct __SCNetworkService *)arg1 interfaceRef:(struct __SCNetworkInterface *)arg2;

@end

