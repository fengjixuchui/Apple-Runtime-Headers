//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <AVKit/AVPlaybackControlsViewController.h>

#import <AVKit/AVChannelInterstitialContainerDelegate-Protocol.h>
#import <AVKit/AVFrameSetDelegate-Protocol.h>
#import <AVKit/AVInfoPanelLanguageDelegate-Protocol.h>
#import <AVKit/AVInfoPanelNavigationDelegate-Protocol.h>
#import <AVKit/AVInfoPanelSubtitlesDelegate-Protocol.h>
#import <AVKit/AVInfoPanelViewControllerDelegate-Protocol.h>
#import <AVKit/AVNowPlayingFrameSource-Protocol.h>
#import <AVKit/UIViewControllerTransitioningDelegate-Protocol.h>

@class AVChannelInterstitialContainer, AVDurationTimeFormatter, AVFrameSet, AVInfoPanelViewController, AVInternalPlaybackOptions, AVKeyValueObserverCollection, AVLoadingIndicatorView, AVNowPlayingDimmingView, AVNowPlayingInfoHintView, AVNowPlayingTransportBar, AVPermissiveSwipeGestureRecognizer, AVScrubbingAnalytics, AVSlidewaysTransition, AVStandardScanningDelegate, AVxOverlayViewController, CADisplayLink, NSArray, NSString, NSTimer, NSURL, NSUUID, UIImageView, UIPanGestureRecognizer, UIView, UIViewController, _AVFocusContainerView, _UIVisualEffectBackdropView;
@protocol AVPlayerViewControllerDelegate;

__attribute__((visibility("hidden")))
@interface AVNowPlayingPlaybackControlsViewController : AVPlaybackControlsViewController <AVChannelInterstitialContainerDelegate, AVNowPlayingFrameSource, AVFrameSetDelegate, AVInfoPanelNavigationDelegate, AVInfoPanelSubtitlesDelegate, AVInfoPanelLanguageDelegate, AVInfoPanelViewControllerDelegate, UIViewControllerTransitioningDelegate>
{
    _Bool _showsLoadingIndicator;
    _Bool _playing;
    _Bool _contentFullyLoaded;
    _Bool _selectButtonHeldDown;
    _Bool _assetHasDates;
    _Bool _initialPlaybackBegun;
    _Bool _shouldFadeOutPlaybackControlsOncePlaybackBegins;
    _Bool _shouldDisableNavigationMarkerImagesInInfoPanel;
    long long _playbackControlsStateWhenVisible;
    double _maxMinusMinDurationCached;
    double _timeOfLastCurrentDateCheck;
    AVLoadingIndicatorView *_loadingIndicatorView;
    NSTimer *_hidePlaybackControlsViewAfterDelayTimer;
    UIView *_controlsContainerView;
    _UIVisualEffectBackdropView *_transportCaptureView;
    AVNowPlayingDimmingView *_dimmingView;
    AVNowPlayingTransportBar *_transportBar;
    UIImageView *_scanningImageView;
    AVInfoPanelViewController *_infoPanelViewController;
    AVNowPlayingInfoHintView *_infoHintView;
    AVNowPlayingInfoHintView *_customOverlayHintView;
    AVNowPlayingInfoHintView *_nextChannelHintView;
    AVNowPlayingInfoHintView *_previousChannelHintView;
    AVPermissiveSwipeGestureRecognizer *_swipeLeft;
    AVPermissiveSwipeGestureRecognizer *_swipeRight;
    AVChannelInterstitialContainer *_channelInterstitialContainer;
    UIViewController *_channelInterstitialViewController;
    AVSlidewaysTransition *_channelTransition;
    CADisplayLink *_displayLink;
    AVFrameSet *_frameSet;
    struct {
        _Bool _isTouchRecent;
        _Bool _isTouching;
        _Bool wasVisibleAtStart;
        long long touchPositionAtStart;
        double timeIntervalOfMostRecentTouchEvent;
    } _touch;
    AVScrubbingAnalytics *_scrubbingMetrics;
    id _audioSessionInterruptionNotificationObserver;
    id _playerItemDidScanToEndTimeObserver;
    _Bool _applicationResigning;
    _Bool _customOverlayHintVisible;
    _Bool _loading;
    _Bool _shouldShowInfoHint;
    _Bool _scanningImageBlockCalled;
    _Bool _scanningTriggeredBySelectButton;
    float _currentScanRate;
    AVInternalPlaybackOptions *_playbackOptions;
    long long _playbackControlsState;
    NSString *_needleText;
    NSURL *_alternateThumbnailStreamURL;
    id <AVPlayerViewControllerDelegate> _delegate;
    AVxOverlayViewController *_overlayViewController;
    NSArray *_customInfoViewControllers;
    NSString *_infoHint;
    NSArray *_permissiveSwipeGestureRecognizers;
    UIPanGestureRecognizer *_scrubbingGestureRecognizer;
    AVKeyValueObserverCollection *_nowPlayingKVO;
    AVDurationTimeFormatter *_interstitialTimeFormatter;
    NSUUID *_scanningSesssionUUID;
    AVStandardScanningDelegate *_standardScanningDelegate;
    struct CGRect _unoccludedBounds;
}

- (void).cxx_destruct;
@property(nonatomic, getter=wasScanningTriggeredBySelectButton) _Bool scanningTriggeredBySelectButton; // @synthesize scanningTriggeredBySelectButton=_scanningTriggeredBySelectButton;
@property(nonatomic) float currentScanRate; // @synthesize currentScanRate=_currentScanRate;
@property(nonatomic) _Bool scanningImageBlockCalled; // @synthesize scanningImageBlockCalled=_scanningImageBlockCalled;
@property(retain, nonatomic) AVStandardScanningDelegate *standardScanningDelegate; // @synthesize standardScanningDelegate=_standardScanningDelegate;
@property(retain, nonatomic) NSUUID *scanningSesssionUUID; // @synthesize scanningSesssionUUID=_scanningSesssionUUID;
@property(retain, nonatomic) AVDurationTimeFormatter *interstitialTimeFormatter; // @synthesize interstitialTimeFormatter=_interstitialTimeFormatter;
@property(retain, nonatomic) AVFrameSet *frameSet; // @synthesize frameSet=_frameSet;
@property(nonatomic) _Bool shouldShowInfoHint; // @synthesize shouldShowInfoHint=_shouldShowInfoHint;
@property(nonatomic, getter=isLoading) _Bool loading; // @synthesize loading=_loading;
@property(retain, nonatomic) AVKeyValueObserverCollection *nowPlayingKVO; // @synthesize nowPlayingKVO=_nowPlayingKVO;
@property(nonatomic, getter=isCustomOverlayHintVisible) _Bool customOverlayHintVisible; // @synthesize customOverlayHintVisible=_customOverlayHintVisible;
@property(retain, nonatomic) UIPanGestureRecognizer *scrubbingGestureRecognizer; // @synthesize scrubbingGestureRecognizer=_scrubbingGestureRecognizer;
@property(retain, nonatomic) NSArray *permissiveSwipeGestureRecognizers; // @synthesize permissiveSwipeGestureRecognizers=_permissiveSwipeGestureRecognizers;
@property(nonatomic, getter=isApplicationResigning) _Bool applicationResigning; // @synthesize applicationResigning=_applicationResigning;
@property(copy, nonatomic) NSString *infoHint; // @synthesize infoHint=_infoHint;
@property(copy, nonatomic) NSArray *customInfoViewControllers; // @synthesize customInfoViewControllers=_customInfoViewControllers;
@property(readonly, nonatomic) AVxOverlayViewController *overlayViewController; // @synthesize overlayViewController=_overlayViewController;
@property(nonatomic) __weak id <AVPlayerViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSURL *alternateThumbnailStreamURL; // @synthesize alternateThumbnailStreamURL=_alternateThumbnailStreamURL;
@property(copy, nonatomic) NSString *needleText; // @synthesize needleText=_needleText;
@property(readonly, nonatomic) struct CGRect unoccludedBounds; // @synthesize unoccludedBounds=_unoccludedBounds;
@property(readonly) long long playbackControlsState; // @synthesize playbackControlsState=_playbackControlsState;
@property(retain, nonatomic) AVInternalPlaybackOptions *playbackOptions; // @synthesize playbackOptions=_playbackOptions;
- (id)accessibilityElements;
- (void)heartbeat:(id)arg1;
- (void)updateFractionOfContentLoaded;
- (void)updateDisplayLink:(id)arg1;
- (id)interstitialNeedleText;
- (id)displayedTimeRangeOfContentLoaded;
- (id)timeRangeForScrubbing;
- (double)_scrubbingVelocityUpperBound;
- (double)_scrubberTranslationForGesture:(id)arg1;
- (_Bool)isScrubbing;
- (id)animationControllerForDismissedController:(id)arg1;
- (id)animationControllerForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3;
- (void)infoPanelViewController:(id)arg1 playPauseRecognizedByViewController:(id)arg2;
- (void)infoPanelViewController:(id)arg1 willShowViewController:(id)arg2;
- (void)didDismissInfoPanelViewController;
- (void)navigationViewController:(id)arg1 didSelectMarkerIndex:(unsigned long long)arg2;
- (id)navigationViewController:(id)arg1 titleForMarkerIndex:(unsigned long long)arg2;
- (id)navigationViewController:(id)arg1 imageProxyForMarkerIndex:(unsigned long long)arg2;
- (unsigned long long)numberOfMarkersForNavigationViewController:(id)arg1;
- (void)viewController:(id)arg1 didSelectLanguageOption:(id)arg2;
- (void)viewController:(id)arg1 didSelectSubtitleOption:(id)arg2;
- (void)transportBar:(id)arg1 didRevealFrameIndex:(unsigned long long)arg2;
- (double)transportBar:(id)arg1 displayTimeForFrameTime:(double)arg2;
- (double)transportBar:(id)arg1 frameTimeForDisplayTime:(double)arg2;
- (unsigned long long)numberOfFramesForTransportBar:(id)arg1;
- (void)_frameSetDidBecomeReady;
- (void)_prefetchChapterFramesThenOthers;
- (void)_prefetchThumbnails;
- (unsigned long long)_prefetchFramesForSliceSize:(unsigned long long)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_updateAdMarkers;
- (id)interstitialTimeRangeCollection;
- (id)interstitialController;
- (id)_imageProxyForNavigationMarkerIndex:(unsigned long long)arg1;
- (id)_navigationMarkerIndexPathsForFrameRange:(struct _NSRange)arg1;
- (long long)_scrubbingIndexForMarkerIndex:(unsigned long long)arg1;
- (void)prepareInfoMetadata;
- (unsigned long long)numberOfScrubbingFrames;
- (id)imageForScrubbingFrameIndex:(unsigned long long)arg1;
- (id)existingImageForScrubbingFrameIndex:(unsigned long long)arg1;
- (id)nearestAvailableImageToScrubbingFrameIndex:(unsigned long long)arg1;
- (unsigned long long)nearestAvailableFrameIndexToScrubbingFrameIndex:(unsigned long long)arg1;
- (double)endTimeInterval;
- (_Bool)_isLive;
- (double)duration;
- (_Bool)isCurrentTimeValid;
- (double)currentTime;
- (void)invalidateFrameSet;
- (void)cleanupScrubbingFrames;
- (double)secondsPerScrubbingFrame;
- (void)_setVisiblePlaybackControlsState:(long long)arg1;
- (void)_setPlaybackControlsState:(long long)arg1 animated:(_Bool)arg2;
- (void)setPlaybackControlsState:(long long)arg1 visibleState:(long long)arg2 animated:(_Bool)arg3;
- (void)setPlaybackControlsState:(long long)arg1 animated:(_Bool)arg2;
- (void)setPlaybackControlsStateToHiddenWithVisibleState:(long long)arg1 animated:(_Bool)arg2;
- (void)_setControlsContainerVisible:(_Bool)arg1 animated:(_Bool)arg2;
- (void)_setControlsContainerSubviewsVisible:(_Bool)arg1 animated:(_Bool)arg2;
- (void)remoteSelectButtonUp:(id)arg1;
- (void)remoteSelectButtonHeld:(id)arg1;
- (void)startFFRWDirection:(long long)arg1;
- (void)stopFFRWWithBounceBack:(_Bool)arg1;
- (void)stopFFRW;
- (void)handlePlayerItemDidScanPastEndTime:(float)arg1;
- (void)removePlayerItemDidScanToEndTimeObserverIfNeeded;
- (void)startFFRWRate:(float)arg1;
- (void)remoteSelectButtonDown:(id)arg1;
- (void)playerViewController:(id)arg1 didDismissViewController:(id)arg2;
- (void)playerViewController:(id)arg1 willDismissViewController:(id)arg2;
- (_Bool)_isTransportBarAllowed;
- (_Bool)_isInfoAllowed;
- (_Bool)_isFullScreen;
- (void)didSelectLegibleMediaSelectionOption:(id)arg1 externalLanguage:(id)arg2;
- (void)didSelectAudioMediaSelectionOption:(id)arg1;
- (_Bool)hideInfoPaneAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)showInfoPaneAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_updateCurrentAudibleMediaSelectionOption;
- (void)_updateCurrentLegibleMediaSelectionOption;
- (void)_updateMediaSelectionOptions;
- (id)_availableExternalSubtitleLanguageOptions;
- (id)_availableSubtitleMediaSelectionOptions;
- (_Bool)isInfoPaneActive;
- (void)upToNextNavigationMode;
- (void)downToNextNavigationMode;
- (void)handleB39ClickGesture:(id)arg1;
- (void)didPressSelectB39;
- (void)didPressDownArrowB39;
- (void)navigateDown;
- (void)didPressUpArrowB39;
- (void)didPressRightArrowB39;
- (void)didPressLeftArrowB39;
- (void)scanAtRate:(double)arg1;
- (void)scanBackwardNext;
- (void)scanForwardNext;
- (void)_setHintForRate:(float)arg1;
- (_Bool)mediaRemoteSeekToDisplayTime:(double)arg1;
- (_Bool)mediaRemoteSkipBy:(double)arg1;
- (_Bool)skipToPreviousNavigationMarker;
- (_Bool)skipToNextNavigationMarker;
- (void)skipToPreviousFrame;
- (void)skipToNextFrame;
- (void)skipToPreviousScrubbingFrame;
- (void)skipToNextScrubbingFrame;
- (void)_skipDisplayTimeByAdding:(double)arg1 seeking:(_Bool)arg2;
@property(readonly, getter=isSeeking) _Bool seeking;
- (double)timeFromTransportBar;
- (void)resumeAfterModalInterruption;
- (void)pauseForModalInterruption;
- (void)pause;
@property(nonatomic) _Bool wantPlayback;
- (void)togglePlayback;
- (void)_togglePlayback:(id)arg1;
- (void)channelInterstitialDidSwipeRight:(id)arg1;
- (void)channelInterstitialDidSwipeLeft:(id)arg1;
- (double)timeForFrameIndex:(unsigned long long)arg1;
- (unsigned long long)frameIndexForTime:(double)arg1;
- (void)mediaServerResetInvalidatedFrameSet:(id)arg1;
- (void)didLoadFrameAffectingRange:(struct _NSRange)arg1;
- (void)_currentItemDidChange;
- (void)_updateUnoccludedBounds;
- (void)updateTransportBarLiveState;
- (void)_currentItemDurationDidChange;
- (void)scrubGestureDetected:(id)arg1;
- (void)setScrubberEnabled:(_Bool)arg1;
- (void)_enableOrDisableScrubbingGestureRecognizer;
- (void)touchesCancelled:(id)arg1;
- (void)touchesEnded:(id)arg1;
- (void)touchesMoved:(id)arg1;
- (void)didReceiveTouchCount:(unsigned long long)arg1;
- (void)touchesBegan:(id)arg1;
- (_Bool)_isTouchingRemote;
- (_Bool)shouldIgnoreTouchEvents;
- (void)setCustomOverlayHintVisible:(_Bool)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_showInfoHint;
- (void)_scheduleInfoHint;
- (void)_cancelInfoHint;
- (void)updateHintsForEvent:(id)arg1;
- (void)setHint:(long long)arg1;
- (void)_updateHintsForDigitizerLocation:(struct CGPoint)arg1;
- (void)_updateHintsForTouchPosition:(long long)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)didReceiveMemoryWarning;
- (void)_updateTransportBarScrubDataSource;
@property(readonly, getter=isFrameSetForNavigationMarkersOnly) _Bool frameSetForNavigationMarkersOnly;
- (id)preferredFocusEnvironments;
- (void)_dismissInteractiveOverlay;
- (void)_presentInteractiveOverlay;
- (void)_swipeLeftOrRight:(id)arg1;
- (void)_updateChannelSkippingGestures;
- (_Bool)_isChannelSkippingEnabled;
- (_Bool)_isPlayerItemChannel;
- (void)_presentChannelInterstitialFromSwipeDirection:(unsigned long long)arg1;
- (void)_didDismissChannelInterstitialResumingPlayback:(_Bool)arg1;
- (void)_willDismissChannelInterstitialResumingPlayback:(_Bool)arg1;
- (id)_viewControllerForChannelInterstitial:(_Bool)arg1;
- (id)_presentedChannelInterstitialViewController;
- (_Bool)_shouldChannelSkipToNextForSwipeDirection:(unsigned long long)arg1;
- (void)loadView;
@property(readonly, nonatomic) _AVFocusContainerView *focusContainerView;
- (id)_playerItemForScrubbing;
- (void)resetToPausePoint;
- (void)resetToPausePointWithoutPlaying;
- (void)_resetToPausePointResumingPlayback:(_Bool)arg1;
- (_Bool)isAtPausePoint;
- (void)_scrubbingPlayerItemStatusDidChange:(id)arg1;
- (void)_playerItemForScrubbingDidChange:(id)arg1;
- (void)_updateStartAndEndDatesAndTimes;
- (void)_playerStatusDidChange:(id)arg1;
- (void)_seekableRangesDidChange;
- (void)_updateSeekableRangesOnceOnMain;
- (void)_keyDidChangeAffectingLoadingOrErrorStatus:(id)arg1;
- (void)_updateLoadingAndErrorIndicators;
- (void)setControlsVisible:(_Bool)arg1 animated:(_Bool)arg2;
- (_Bool)areControlsVisible;
- (void)didChangePlayerController;
- (_Bool)hasThumbNails;
- (_Bool)canSeek;
- (void)setShowsLoadingIndicator:(_Bool)arg1;
- (void)setShowsLoadingIndicator:(_Bool)arg1 afterDelay:(double)arg2;
- (_Bool)showsLoadingIndicator;
@property(readonly, nonatomic) _Bool isPausingEnabled;
- (void)setScanningImage:(id)arg1;
- (_Bool)isScanningEnabled;
@property(readonly, nonatomic, getter=isScanning) _Bool scanning;
@property(readonly, nonatomic, getter=isScrubbingSupported) _Bool scrubbingSupported;
- (void)setPlaybackRate:(float)arg1;
- (void)setPlaying:(_Bool)arg1;
- (_Bool)isPlaying;
- (_Bool)isStalled;
- (long long)timeControlStatus;
- (void)cancelUserDidInteract;
- (void)userDidInteract;
- (void)_timerFiredForHidingPlaybackControls:(id)arg1;
- (void)hidePlaybackControlsAfterUserInteraction;
- (void)stopDisplayLink;
- (void)startDisplayLink;
- (void)updateDisplayLinkInterval;
- (void)removeFromParentViewController;
- (void)invalidate;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

